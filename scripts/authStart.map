{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/app/scripts/auth/client.ts","webpack:///./src/app/scripts/auth/start.ts","webpack:///./node_modules/@azure/msal-browser/dist/index.es.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","client","PublicClientApplication","auth","clientId","authority","navigateToLoginRequestUrl","cache","cacheLocation","url","URL","location","href","params","JSON","parse","searchParams","stringify","loginRedirect","extendStatics","b","setPrototypeOf","__proto__","Array","__extends","__","this","constructor","__assign","assign","arguments","length","apply","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","iterator","v","op","TypeError","pop","push","__spreadArrays","il","k","a","j","jl","extendStatics$1","__extends$1","__assign$1","__awaiter$1","__generator$1","LogLevel","AuthErrorMessage","unexpectedError","code","desc","AuthError","_super","errorCode","errorMessage","_this","errorString","createUnexpectedError","errDesc","Error","pkg","ClientAuthErrorMessage","ClientAuthError","createClientInfoDecodingError","caughtError","createClientInfoEmptyError","rawClientInfo","createIdTokenParsingError","caughtExtractionError","createIdTokenNullOrEmptyError","invalidRawTokenString","createEndpointDiscoveryIncompleteError","errDetail","createInvalidAuthorityTypeError","givenUrl","createHashNotDeserializedError","hashParamObj","createInvalidStateError","invalidState","createStateMismatchError","createNonceMismatchError","createAccountMismatchError","createInvalidIdTokenError","idToken","createNoTokensFoundError","createCacheParseError","cacheKey","createUserLoginRequiredError","createMultipleMatchingTokensInCacheError","scope","createMultipleMatchingAccountsInCacheError","createTokenRequestCannotBeMadeError","createAppendEmptyScopeToSetError","givenScope","createRemoveEmptyScopeFromSetError","createAppendScopeSetError","appendError","createEmptyInputScopeSetError","givenScopeSet","createDeviceCodeCancelledError","createDeviceCodeExpiredError","createNoAccountInSilentRequestError","createNullOrUndefinedCacheRecord","createInvalidCacheEnvironmentError","createNoAccountFoundError","createCachePluginError","createNoCryptoObjectError","operationName","createInvalidCacheTypeError","createUnexpectedAccountTypeError","createUnexpectedCredentialTypeError","createInvalidAssertionError","createInvalidCredentialError","StringUtils","decodeJwt","jwtToken","isEmpty","matches","exec","header","JWSPayload","JWSSig","str","startsWith","search","indexOf","endsWith","lastIndexOf","queryStringToObject","query","match","pl","decode","decodeURIComponent","replace","obj","trimArrayEntries","arr","map","entry","trim","removeEmptyStringsFromArray","filter","HeaderNames","PersistentCacheKeys","AADAuthorityConstants","AADServerParamKeys","IdTokenClaimName","Logger","loggerOptions","level","Info","localCallback","loggerCallback","piiLoggingEnabled","logLevel","logMessage","options","containsPii","timestamp","Date","toUTCString","log","correlationId","executeCallback","message","error","errorPii","warning","Warning","warningPii","info","infoPii","verbose","Verbose","verbosePii","isPiiLoggingEnabled","Constants","SSOTypes","PromptValue","LOGIN","SELECT_ACCOUNT","CONSENT","NONE","SID","LOGIN_HINT","ResponseMode","GrantType","CacheAccountType","Separators","CredentialType","CacheSchemaType","CacheType","CodeChallengeMethodValues","PLAIN","S256","SERVER_TELEM_CONSTANTS","SCHEMA_VERSION","FAILURE_LIMIT","CACHE_KEY","CATEGORY_SEPARATOR","VALUE_SEPARATOR","CredentialEntity","generateAccountId","generateAccountIdForCacheKey","homeAccountId","environment","generateCredentialId","generateCredentialIdForCacheKey","credentialType","realm","familyId","generateTarget","generateTargetForCacheKey","target","generateCredentialKey","generateCredentialCacheKey","generateType","ID_TOKEN","ACCESS_TOKEN","REFRESH_TOKEN","getCredentialType","toLowerCase","join","CACHE_KEY_SEPARATOR","scopes","ClientConfigurationErrorMessage","ClientConfigurationError","createRedirectUriEmptyError","createPostLogoutRedirectUriEmptyError","createClaimsRequestParsingError","claimsRequestParseError","createInsecureAuthorityUriError","urlString","createUrlParseError","urlParseError","createUrlEmptyError","createScopesNonArrayError","inputScopes","createEmptyScopesArrayError","createClientIdSingleScopeError","createInvalidPromptError","promptValue","createEmptyLogoutRequestError","createEmptyTokenRequestError","createInvalidCodeChallengeMethodError","createInvalidCodeChallengeParamsError","createKnownAuthoritiesCloudDiscoveryMetadataError","createInvalidCloudDiscoveryMetadataError","createUntrustedAuthorityError","ScopeSet","scopeArr","__spreadArrays$1","filteredInput","validateInputScopes","Set","forEach","add","fromString","inputScopeString","split","containsScope","has","containsScopeSet","scopeSet","size","asArray","every","appendScope","newScope","appendScopes","newScopes","removeScope","delete","unionScopeSets","otherScopes","unionScopes","intersectingScopeSets","sizeOtherScopes","getScopeCount","sizeThisScopes","array","val","printScopes","printScopesLowerCase","buildClientInfo","crypto","decodedClientInfo","base64Decode","TrustedAuthority","setTrustedAuthoritiesFromConfig","knownAuthorities","cloudDiscoveryMetadata","getTrustedHostList","createCloudDiscoveryMetadataFromKnownAuthorities","parsedMetadata","saveCloudDiscoveryMetadata","metadata","setTrustedAuthoritiesFromNetwork","authorityToVerify","networkInterface","instanceDiscoveryEndpoint","response","host","_a","sendGetRequestAsync","getUrlComponents","HostNameAndPort","IsInTrustedHostList","aliases","TrustedHostList","preferred_cache","preferred_network","keys","getCloudDiscoveryMetadata","AccountEntity","generateAccountKey","generateAccountCacheKey","tenantId","username","authorityType","ADFS_ACCOUNT_TYPE","ADFS","MSAV1_ACCOUNT_TYPE","MSA","MSSTS_ACCOUNT_TYPE","MSSTS","GENERIC_ACCOUNT_TYPE","GENERIC","getAccountInfo","accountInterface","createAccount","clientInfo","account","clientInfoObj","uid","CLIENT_INFO_SEPARATOR","utid","reqEnvironment","canonicalAuthorityUrlComponents","env","claims","tid","localAccountId","oid","sid","preferred_username","createADFSAccount","sub","upn","CacheManager","getAllAccounts","currentAccounts","getAccountsFilteredBy","accountValues","accountKey","accountObj","toObject","saveCacheRecord","cacheRecord","saveAccount","saveCredential","accessToken","saveAccessToken","refreshToken","setItem","ACCOUNT","credential","CREDENTIAL","currentTokenCache","getCredentialsFilteredBy","currentScopes","currentAccessTokens","accessTokens","tokenEntity","removeCredential","getAccount","getItem","getCredential","accountFilter","getAccountsFilteredByInternal","allCacheKeys","getKeys","matchingAccounts","entity","getAccountEntity","matchHomeAccountId","matchEnvironment","matchRealm","getCredentialsFilteredByInternal","matchingCredentials","idTokens","refreshTokens","credType","matchCredentialType","matchClientId","matchTarget","removeAppMetadata","isAppMetadata","removeItem","APP_META_DATA","removeAllAccounts","removeAccount","removeAccountContext","accountId","cacheEntity","cloudMetadata","entityScopeSet","requestTargetScopeSet","json","propertyName","DefaultStorageClass","containsKey","clear","DEFAULT_AUTH_OPTIONS","DEFAULT_SYSTEM_OPTIONS","tokenRenewalOffsetSeconds","DEFAULT_LOGGER_IMPLEMENTATION","DEFAULT_NETWORK_IMPLEMENTATION","sendPostRequestAsync","DEFAULT_CRYPTO_IMPLEMENTATION","createNewGuid","base64Encode","generatePkceCodes","DEFAULT_LIBRARY_INFO","sku","version","cpu","os","DEFAULT_CLIENT_CREDENTIALS","clientSecret","clientAssertion","AuthorityType","BaseClient","configuration","userAuthOptions","userSystemOptions","userLoggerOption","storageImplementation","networkImplementation","cryptoImplementation","clientCredentials","libraryInfo","serverTelemetryManager","config","authOptions","systemOptions","storageInterface","cryptoInterface","logger","cryptoUtils","cacheManager","networkClient","createDefaultTokenRequestHeaders","headers","createDefaultLibraryHeaders","set","CONTENT_TYPE","X_CLIENT_CURR_TELEM","generateCurrentRequestHeaderValue","X_CLIENT_LAST_TELEM","generateLastRequestHeaderValue","Map","X_CLIENT_SKU","X_CLIENT_VER","X_CLIENT_OS","X_CLIENT_CPU","executePostToTokenEndpoint","tokenEndpoint","queryString","status","clearTelemetryCache","RequestValidator","validateRedirectUri","redirectUri","validatePrompt","prompt","validateCodeChallengeParams","codeChallenge","codeChallengeMethod","validateCodeChallengeMethod","sanitizeEQParams","eQParams","queryParams","RequestParameterBuilder","parameters","addResponseTypeCode","RESPONSE_TYPE","encodeURIComponent","addResponseMode","responseMode","RESPONSE_MODE","QUERY","addScopes","SCOPE","addClientId","CLIENT_ID","addRedirectUri","REDIRECT_URI","addDomainHint","domainHint","DOMAIN_HINT","addLoginHint","loginHint","addSid","addClaims","CLAIMS","addCorrelationId","CLIENT_REQUEST_ID","addLibraryInfo","addPrompt","PROMPT","addState","state","STATE","addNonce","nonce","NONCE","addCodeChallengeParams","CODE_CHALLENGE","CODE_CHALLENGE_METHOD","addAuthorizationCode","CODE","addDeviceCode","DEVICE_CODE","addRefreshToken","addCodeVerifier","codeVerifier","CODE_VERIFIER","addClientSecret","CLIENT_SECRET","addClientAssertion","CLIENT_ASSERTION","addClientAssertionType","clientAssertionType","CLIENT_ASSERTION_TYPE","addGrantType","grantType","GRANT_TYPE","addClientInfo","addExtraQueryParameters","eQparams","createQueryString","queryParameterArray","ServerError","subError","IdToken","rawIdToken","extractIdToken","encodedIdToken","decodedToken","base64IdTokenPayload","base64Decoded","err","TimeUtils","nowSeconds","Math","round","getTime","HTTP_REQUEST_TYPE","TemporaryCacheKeys","ApiId","InteractionType","IdTokenEntity","createIdTokenEntity","idTokenEntity","secret","AccessTokenEntity","createAccessTokenEntity","expiresOn","extExpiresOn","atEntity","currentTime","cachedAt","toString","extendedExpiresOn","RefreshTokenEntity","createRefreshTokenEntity","rtEntity","InteractionRequiredAuthErrorMessage","InteractionRequiredAuthSubErrorMessage","InteractionRequiredAuthError","isInteractionRequiredError","isInteractionRequiredErrorCode","isInteractionRequiredSubError","isInteractionRequiredErrorDesc","some","irErrorCode","CacheRecord","accountEntity","accessTokenEntity","refreshTokenEntity","ProtocolUtils","setRequestState","cryptoObj","userState","meta","libraryState","generateLibraryState","stateObj","id","ts","stateString","parseRequestState","splitState","slice","libraryStateString","libraryStateObj","userRequestState","ResponseHandler","cacheStorage","validateServerAuthorizationCodeResponse","serverResponseHash","cachedState","error_description","suberror","client_info","validateTokenResponse","serverResponse","errString","error_codes","correlation_id","trace_id","homeAccountIdentifier","handleServerTokenResponse","serverTokenResponse","cachedNonce","idTokenObj","id_token","requestStateObj","generateCacheRecord","generateAuthenticationResult","cachedAccount","generateAccountEntity","cachedIdToken","cachedAccessToken","access_token","responseScopes","tokenExpirationSeconds","expires_in","extendedTokenExpirationSeconds","ext_expires_in","cachedRefreshToken","refresh_token","foci","Adfs","fromTokenCache","requestState","Number","uniqueId","idTokenClaims","fromCache","UrlString","_urlString","getHash","canonicalizeUri","configurable","validateAsUri","components","PathSegments","Protocol","urlRemoveQueryStringParameter","regex","RegExp","removeHashFromUrl","replaceTenantPath","urlObject","pathArray","COMMON","ORGANIZATIONS","constructAuthorityUriFromObject","hashIndex1","hashIndex2","substring","regEx","urlComponents","AbsolutePath","pathSegments","getDeserializedHash","hash","deserializedHash","hashContainsKnownProperties","AuthorizationCodeClient","getAuthCodeUrl","request","createAuthCodeUrlQueryString","authorizationEndpoint","acquireToken","responseHandler","executeTokenRequest","handleFragmentResponse","hashFragment","hashUrlString","serverParams","getLogoutUri","logoutRequest","postLogoutUriParam","postLogoutRedirectUri","POST_LOGOUT_URI","correlationIdParam","endSessionEndpoint","requestBody","createTokenRequestBody","parameterBuilder","assertion","assertionType","AUTHORIZATION_CODE_GRANT","extraScopesToConsent","extraQueryParameters","RefreshTokenClient","DeviceCodeClient","deviceCodeResponse","getDeviceCode","deviceCodeCallback","acquireTokenWithDeviceCode","executePostRequestToDeviceCodeEndpoint","deviceCodeEndpoint","userCode","deviceCode","verificationUri","expiresIn","interval","_b","user_code","device_code","verification_uri","deviceCodeExpirationTime","pollingIntervalMilli","intervalId","setInterval","error_1","cancel","clearInterval","requestParameters","DEVICE_CODE_GRANT","REFRESH_TOKEN_GRANT","SilentFlowClient","requestScopes","refreshTokenClient","refreshTokenRequest","readAccessTokenFromCache","readRefreshTokenFromCache","forceRefresh","isTokenExpired","incrementCacheHits","readIdTokenFromCache","inputRealm","idTokenKey","accessTokenFilter","credentialCache","refreshTokenKey","expirationSec","Authority","canonicalAuthority","_canonicalAuthority","Default","_canonicalAuthorityUrlComponents","discoveryComplete","replaceTenant","tenantDiscoveryResponse","authorization_endpoint","token_endpoint","end_session_endpoint","issuer","tenant","discoverEndpoints","openIdConfigurationEndpoint","validateAndSetPreferredNetwork","preferredNetwork","resolveEndpointsAsync","openIdConfigEndpoint","defaultOpenIdConfigurationEndpoint","AuthorityFactory","createDiscoveredInstance","authorityUri","acquireTokenAuthority","e_1","createInstance","authorityUrl","ServerTelemetryManager","telemetryRequest","apiId","telemetryCacheKey","forceRefreshInt","lastRequests","getLastRequests","failedRequests","errors","platformFields","errorCount","cacheHits","cacheFailedRequest","shift","TELEMETRY","BrowserConstants","DEFAULT_REQUEST","FetchClient","fetch","method","GET","getFetchHeaders","getHeaderMap","reqBody","POST","Headers","append","headerMap","BrowserAuthErrorMessage","noWindowObjectError","pkceNotGenerated","cryptoDoesNotExist","httpMethodNotImplementedError","emptyNavigateUriError","hashEmptyError","interactionInProgress","popUpWindowError","emptyWindowError","userCancelledError","monitorWindowTimeoutError","redirectInIframeError","blockTokenRequestsInHiddenIframeError","iframeClosedPrematurelyError","silentSSOInsufficientInfoError","silentPromptValueError","tokenRequestCacheError","invalidCacheType","BrowserAuthError","createNoWindowObjectError","createPkceNotGeneratedError","createCryptoNotAvailableError","createHttpMethodNotImplementedError","createEmptyNavigationUriError","createEmptyHashError","hashValue","createInteractionInProgressError","createPopupWindowError","createEmptyWindowCreatedError","createUserCancelledError","createMonitorWindowTimeoutError","createRedirectInIframeError","windowParentCheck","createBlockReloadInHiddenIframeError","createIframeClosedPrematurelyError","createSilentSSOInsufficientInfoError","createSilentPromptValueError","givenPrompt","createTokenRequestCacheError","XhrClient","sendRequestAsync","xhr","XMLHttpRequest","open","setXhrHeaders","onload","responseText","jsonResponse","networkResponse","onerror","send","setRequestHeader","headerArr","getAllResponseHeaders","parts","headerName","headerVal","BrowserUtils","navigateWindow","urlNavigate","noHistory","clearHash","replaceHash","urlParts","isInIframe","parent","getCurrentUri","getHomepage","getBrowserNetworkClient","blockReloadInHiddenIframes","detectIEOrEdge","ua","navigator","userAgent","msie","msie11","msedge","DEFAULT_AUTH_OPTIONS$1","DEFAULT_CACHE_OPTIONS","storeAuthStateInCookie","DEFAULT_BROWSER_SYSTEM_OPTIONS","windowHashTimeout","iframeHashTimeout","loadFrameTimeout","BrowserConfigurationAuthErrorMessage","redirectUriNotSet","postLogoutUriNotSet","storageNotSupportedError","noRedirectCallbacksSet","invalidCallbackObject","BrowserConfigurationAuthError","createStorageNotSupportedError","givenStorageLocation","createInvalidCallbackObjectError","callbackObject","createRedirectCallbacksNotSetError","BrowserStorage","cacheConfig","validateWindowStorage","windowStorage","migrateCacheEntries","clientInfoKey","CLIENT_INFO","errorKey","ERROR","errorDescKey","ERROR_DESC","values","index","migrateCacheEntry","newKey","generateCacheKey","TEMPORARY","validateObjectKey","type","stringVal","setItemCookie","itemCookie","getItemCookie","clearItemCookie","cookieName","cookieValue","expires","cookieStr","getCookieExpirationTime","document","cookie","cookieList","charAt","clearMsalCookie","nonceKey","NONCE_IDTOKEN","REQUEST_STATE","ORIGIN_URI","cookieLifeDays","today","getCache","setCache","ADAL_ID_TOKEN","generateAuthorityKey","AUTHORITY","generateNonceKey","setAuthorityCache","authorityKey","getCachedAuthority","updateCacheEntries","authorityInstance","resetRequestCache","REQUEST_PARAMS","URL_HASH","cleanRequest","cacheCodeRequest","authCodeRequest","browserCrypto","getCachedRequest","encodedTokenRequest","parsedRequest","cachedAuthority","MathUtils","decimalToHex","num","hex","GuidGenerator","generateGuid","buffer","Uint8Array","getRandomValues","guidHolder","guidResponse","random","isGuid","guid","test","BrowserStringUtils","stringToUtf8Arr","sDOMStr","nChr","nArrLen","nStrLen","nMapIdx","charCodeAt","aBytes","nIdx","nChrIdx","utf8ArrToString","sView","nPart","nLen","String","fromCharCode","Base64Encode","urlEncode","input","encode","urlEncodeArr","inputArr","base64EncArr","inputUtf8Arr","eqLen","sB64Enc","nMod3","nUint24","uint6ToB64","nUint6","Base64Decode","encodedString","base64DecToArr","base64String","nBlockSize","nInLen","nOutLen","ceil","nMod4","nOutIdx","nInIdx","b64ToUint6","charNum","PkceGenerator","generateCodes","generateCodeVerifier","generateCodeChallengeFromVerifier","verifier","challenge","pkceCodeVerifier","pkceHashedCodeVerifier","sha256Digest","BrowserCrypto","hasCryptoAPI","dataString","data","hasIECrypto","getMSCryptoDigest","getSubtleCryptoDigest","dataBuffer","hasBrowserCrypto","algorithm","subtle","digest","digestOperation","addEventListener","CryptoOps","b64Encode","b64Decode","guidGenerator","pkceGenerator","InteractionHandler","authCodeModule","storageImpl","authModule","browserStorage","handleCodeResponse","locationHash","authCode","cachedNonceKey","tokenResponse","RedirectHandler","initiateAuthRequest","requestUrl","redirectStartPage","isIframedApp","PopupHandler","unloadWindow","openPopup","monitorPopupForHash","popupWindow","timeout","maxTicks","ticks","closed","cleanPopup","contentHash","title","popUpWidth","popUpHeight","winLeft","screenLeft","screenX","winTop","screenTop","screenY","width","innerWidth","documentElement","clientWidth","height","innerHeight","clientHeight","left","max","top_1","focus","currentWindow","close","removeEventListener","SilentHandler","configuredLoadFrameTimeout","userRequestScopes","frameName","loadFrame","loadFrameSync","monitorIframeForHash","iframe","timeoutMark","performance","now","removeHiddenIframe","contentWindow","setTimeout","frameHandle","getHiddenIframe","src","iframeId","authFrame","getElementById","createElement","ifr","setAttribute","style","visibility","position","border","getElementsByTagName","appendChild","insertAdjacentHTML","frames","parentNode","removeChild","BrowserProtocolUtils","extractBrowserRequestState","userInputAuth","userInputCache","userInputSystem","system","defaultAuthority","handleRedirectPromise","handleRedirectResponse","responseHash","loginRequestUrl","loginRequestUrlNormalized","currentUrlNormalized","hashKey","homepage","getRedirectResponseHash","handleHash","isResponseHash","cachedHash","interactionType","REDIRECT","cachedRequest","currentAuthority","authClient","initializeServerTelemetryManager","createAuthCodeClient","acquireTokenRedirect","validRequest","interactionHandler","navigateUrl","e_2","preflightInteractiveRequest","initializeAuthorizationCodeRequest","loginPopup","acquireTokenPopup","e_3","POPUP","ssoSilent","silentRequest","scopeString","e_4","initializeAuthorizationRequest","SILENT","silentTokenHelper","acquireTokenSilent","e_5","isServerError","isInvalidGrantError","silentAuthUrlRequest","e_6","initializeBaseRequest","acquireTokenSilent_silentFlow","createSilentFlowClient","acquireTokenSilent_authCode","silentHandler","msalFrame","logout","validLogoutRequest","logoutUri","initializeLogoutRequest","getAccountByUsername","userName","allAccounts","getRedirectUri","requestRedirectUri","getPostLogoutRedirectUri","requestPostLogoutRedirectUri","getDiscoveredDefaultAuthority","clientConfig","getClientConfiguration","requestAuthority","discoveredAuthority","validatedRequest","telemetryPayload","setDefaultScopes","adalIdTokenString","adalIdToken","browserState","FRAGMENT","generatedPkceParams"],"mappings":"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","file":"authStart.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"tased\"] = factory();\n\telse\n\t\troot[\"tased\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/scripts/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 444);\n","import { PublicClientApplication } from \"@azure/msal-browser\";\r\n\r\nconst appId = \"67dc74f0-fb8c-47a4-8435-63253a3fc3bb\"; // TASED\r\n// const appId = \"8fe75eb2-476b-43e1-8e36-a09cf42fcb42\"; // TASED-NoConsentTest\r\n\r\nexport const client = new PublicClientApplication({\r\n    auth: {\r\n        clientId: appId,\r\n        authority: \"https://login.microsoftonline.com/organizations/\",\r\n        navigateToLoginRequestUrl: false,\r\n    },\r\n    cache: { cacheLocation: \"localStorage\" },\r\n});\r\n","import { client } from './client';\r\n\r\n(function login() {\r\n    const url = new URL(location.href);\r\n    const params = JSON.parse(url.searchParams.get(\"params\") ?? JSON.stringify(null));\r\n\r\n    client.loginRedirect(params);\r\n})();\r\n","/*! @azure/msal-browser v2.0.1 2020-08-04 */\n'use strict';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\n\n/*! @azure/msal-common v1.1.0 2020-08-04 */\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics$1 = function(d, b) {\r\n    extendStatics$1 = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics$1(d, b);\r\n};\r\n\r\nfunction __extends$1(d, b) {\r\n    extendStatics$1(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign$1 = function() {\r\n    __assign$1 = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign$1.apply(this, arguments);\r\n};\r\n\r\nfunction __awaiter$1(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator$1(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __spreadArrays$1() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * AuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nvar AuthErrorMessage = {\r\n    unexpectedError: {\r\n        code: \"unexpected_error\",\r\n        desc: \"Unexpected error in authentication.\"\r\n    }\r\n};\r\n/**\r\n * General error class thrown by the MSAL.js library.\r\n */\r\nvar AuthError = /** @class */ (function (_super) {\r\n    __extends$1(AuthError, _super);\r\n    function AuthError(errorCode, errorMessage) {\r\n        var _this = this;\r\n        var errorString = errorMessage ? errorCode + \": \" + errorMessage : errorCode;\r\n        _this = _super.call(this, errorString) || this;\r\n        Object.setPrototypeOf(_this, AuthError.prototype);\r\n        _this.errorCode = errorCode;\r\n        _this.errorMessage = errorMessage;\r\n        _this.name = \"AuthError\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates an error that is thrown when something unexpected happens in the library.\r\n     * @param errDesc\r\n     */\r\n    AuthError.createUnexpectedError = function (errDesc) {\r\n        return new AuthError(AuthErrorMessage.unexpectedError.code, AuthErrorMessage.unexpectedError.desc + \": \" + errDesc);\r\n    };\r\n    return AuthError;\r\n}(Error));\n\nvar name = \"@azure/msal-common\";\nvar author = {\n\tname: \"Microsoft\",\n\temail: \"nugetaad@microsoft.com\",\n\turl: \"https://www.microsoft.com\"\n};\nvar license = \"MIT\";\nvar repository = {\n\ttype: \"git\",\n\turl: \"https://github.com/AzureAD/microsoft-authentication-library-for-js.git\"\n};\nvar version = \"1.1.0\";\nvar description = \"Microsoft Authentication Library for js\";\nvar keywords = [\n\t\"implicit\",\n\t\"authorization code\",\n\t\"PKCE\",\n\t\"js\",\n\t\"AAD\",\n\t\"msal\",\n\t\"oauth\"\n];\nvar main = \"./dist/index.js\";\nvar module = \"./dist/index.es.js\";\nvar types = \"./dist/src/index.d.ts\";\nvar browserslist = [\n\t\"last 1 version\",\n\t\"> 1%\",\n\t\"maintained node versions\",\n\t\"not dead\"\n];\nvar engines = {\n\tnode: \">=0.8.0\"\n};\nvar directories = {\n\ttest: \"test\"\n};\nvar files = [\n\t\"dist\"\n];\nvar scripts = {\n\tclean: \"shx rm -rf dist lib\",\n\t\"clean:coverage\": \"rimraf ../../.nyc_output/*\",\n\tdoc: \"npm run doc:generate && npm run doc:deploy\",\n\t\"doc:generate\": \"typedoc --mode modules --excludePrivate --excludeProtected --excludeNotExported --out ./ref ./src/ --gitRevision dev\",\n\t\"doc:deploy\": \"gh-pages -d ref -a -e ref/msal-common\",\n\tlint: \"eslint src --ext .ts\",\n\ttest: \"mocha\",\n\t\"test:coverage\": \"nyc --reporter=text mocha --exit\",\n\t\"test:coverage:only\": \"npm run clean:coverage && npm run test:coverage\",\n\t\"build:modules\": \"rollup -c\",\n\t\"build:modules:watch\": \"rollup -cw\",\n\tbuild: \"npm run clean && npm run lint && npm run build:modules\",\n\tprepack: \"npm run build\"\n};\nvar devDependencies = {\n\t\"@babel/core\": \"^7.7.2\",\n\t\"@babel/plugin-proposal-class-properties\": \"^7.7.0\",\n\t\"@babel/plugin-proposal-object-rest-spread\": \"^7.6.2\",\n\t\"@babel/polyfill\": \"^7.7.0\",\n\t\"@babel/preset-env\": \"^7.7.1\",\n\t\"@babel/preset-typescript\": \"^7.7.2\",\n\t\"@babel/register\": \"^7.7.0\",\n\t\"@istanbuljs/nyc-config-babel\": \"^2.1.1\",\n\t\"@rollup/plugin-json\": \"^4.0.0\",\n\t\"@types/chai\": \"^4.2.5\",\n\t\"@types/chai-as-promised\": \"^7.1.2\",\n\t\"@types/debug\": \"^4.1.5\",\n\t\"@types/mocha\": \"^5.2.7\",\n\t\"@types/sinon\": \"^7.5.0\",\n\t\"@typescript-eslint/eslint-plugin\": \"^2.4.0\",\n\t\"@typescript-eslint/eslint-plugin-tslint\": \"^2.4.0\",\n\t\"@typescript-eslint/parser\": \"^2.4.0\",\n\t\"babel-plugin-istanbul\": \"^5.2.0\",\n\tbeachball: \"^1.32.2\",\n\tchai: \"^4.2.0\",\n\t\"chai-as-promised\": \"^7.1.1\",\n\teslint: \"^6.5.1\",\n\t\"gh-pages\": \"^3.1.0\",\n\thusky: \"^3.0.9\",\n\tmocha: \"^6.2.2\",\n\tnyc: \"^14.1.1\",\n\trimraf: \"^3.0.2\",\n\trollup: \"^1.24.0\",\n\t\"rollup-plugin-typescript2\": \"^0.24.3\",\n\t\"rollup-plugin-uglify\": \"^6.0.4\",\n\tshx: \"^0.3.2\",\n\tsinon: \"^7.5.0\",\n\ttslib: \"^1.10.0\",\n\ttslint: \"^5.20.0\",\n\ttypedoc: \"^0.17.8\",\n\ttypescript: \"^3.7.5\"\n};\nvar dependencies = {\n\tdebug: \"^4.1.1\"\n};\nvar pkg = {\n\tname: name,\n\tauthor: author,\n\tlicense: license,\n\trepository: repository,\n\tversion: version,\n\tdescription: description,\n\tkeywords: keywords,\n\tmain: main,\n\tmodule: module,\n\ttypes: types,\n\tbrowserslist: browserslist,\n\tengines: engines,\n\tdirectories: directories,\n\tfiles: files,\n\tscripts: scripts,\n\tdevDependencies: devDependencies,\n\tdependencies: dependencies\n};\n\n/**\r\n * ClientAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nvar ClientAuthErrorMessage = {\r\n    clientInfoDecodingError: {\r\n        code: \"client_info_decoding_error\",\r\n        desc: \"The client info could not be parsed/decoded correctly. Please review the trace to determine the root cause.\"\r\n    },\r\n    clientInfoEmptyError: {\r\n        code: \"client_info_empty_error\",\r\n        desc: \"The client info was empty. Please review the trace to determine the root cause.\"\r\n    },\r\n    idTokenParsingError: {\r\n        code: \"id_token_parsing_error\",\r\n        desc: \"ID token cannot be parsed. Please review stack trace to determine root cause.\"\r\n    },\r\n    nullOrEmptyIdToken: {\r\n        code: \"null_or_empty_id_token\",\r\n        desc: \"The idToken is null or empty. Please review the trace to determine the root cause.\"\r\n    },\r\n    endpointResolutionError: {\r\n        code: \"endpoints_resolution_error\",\r\n        desc: \"Error: could not resolve endpoints. Please check network and try again.\"\r\n    },\r\n    invalidAuthorityType: {\r\n        code: \"invalid_authority_type\",\r\n        desc: \"The given authority is not a valid type of authority supported by MSAL. Please review the trace to determine the root cause.\"\r\n    },\r\n    hashNotDeserialized: {\r\n        code: \"hash_not_deserialized\",\r\n        desc: \"The hash parameters could not be deserialized. Please review the trace to determine the root cause.\"\r\n    },\r\n    blankGuidGenerated: {\r\n        code: \"blank_guid_generated\",\r\n        desc: \"The guid generated was blank. Please review the trace to determine the root cause.\"\r\n    },\r\n    invalidStateError: {\r\n        code: \"invalid_state\",\r\n        desc: \"State was not the expected format. Please check the logs to determine whether the request was sent using ProtocolUtils.setRequestState().\"\r\n    },\r\n    stateMismatchError: {\r\n        code: \"state_mismatch\",\r\n        desc: \"State mismatch error. Please check your network. Continued requests may cause cache overflow.\"\r\n    },\r\n    nonceMismatchError: {\r\n        code: \"nonce_mismatch\",\r\n        desc: \"Nonce mismatch error. This may be caused by a race condition in concurrent requests.\"\r\n    },\r\n    accountMismatchError: {\r\n        code: \"account_mismatch\",\r\n        desc: \"The cached account and account which made the token request do not match.\"\r\n    },\r\n    invalidIdToken: {\r\n        code: \"invalid_id_token\",\r\n        desc: \"Invalid ID token format.\"\r\n    },\r\n    noTokensFoundError: {\r\n        code: \"no_tokens_found\",\r\n        desc: \"No tokens were found for the given scopes, and no authorization code was passed to acquireToken. You must retrieve an authorization code before making a call to acquireToken().\"\r\n    },\r\n    cacheParseError: {\r\n        code: \"cache_parse_error\",\r\n        desc: \"Could not parse cache key.\"\r\n    },\r\n    userLoginRequiredError: {\r\n        code: \"user_login_error\",\r\n        desc: \"User login is required.\"\r\n    },\r\n    multipleMatchingTokens: {\r\n        code: \"multiple_matching_tokens\",\r\n        desc: \"The cache contains multiple tokens satisfying the requirements. \" +\r\n            \"Call AcquireToken again providing more requirements such as authority or account.\"\r\n    },\r\n    multipleMatchingAccounts: {\r\n        code: \"multiple_matching_accounts\",\r\n        desc: \"The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account\"\r\n    },\r\n    tokenRequestCannotBeMade: {\r\n        code: \"request_cannot_be_made\",\r\n        desc: \"Token request cannot be made without authorization code or refresh token.\"\r\n    },\r\n    appendEmptyScopeError: {\r\n        code: \"cannot_append_empty_scope\",\r\n        desc: \"Cannot append null or empty scope to ScopeSet. Please check the stack trace for more info.\"\r\n    },\r\n    removeEmptyScopeError: {\r\n        code: \"cannot_remove_empty_scope\",\r\n        desc: \"Cannot remove null or empty scope from ScopeSet. Please check the stack trace for more info.\"\r\n    },\r\n    appendScopeSetError: {\r\n        code: \"cannot_append_scopeset\",\r\n        desc: \"Cannot append ScopeSet due to error.\"\r\n    },\r\n    emptyInputScopeSetError: {\r\n        code: \"empty_input_scopeset\",\r\n        desc: \"Empty input ScopeSet cannot be processed.\"\r\n    },\r\n    DeviceCodePollingCancelled: {\r\n        code: \"device_code_polling_cancelled\",\r\n        desc: \"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.\"\r\n    },\r\n    DeviceCodeExpired: {\r\n        code: \"device_code_expired\",\r\n        desc: \"Device code is expired.\"\r\n    },\r\n    NoAccountInSilentRequest: {\r\n        code: \"no_account_in_silent_request\",\r\n        desc: \"Please pass an account object, silent flow is not supported without account information\"\r\n    },\r\n    invalidCacheRecord: {\r\n        code: \"invalid_cache_record\",\r\n        desc: \"Cache record object was null or undefined.\"\r\n    },\r\n    invalidCacheEnvironment: {\r\n        code: \"invalid_cache_environment\",\r\n        desc: \"Invalid environment when attempting to create cache entry\"\r\n    },\r\n    noAccountFound: {\r\n        code: \"no_account_found\",\r\n        desc: \"No account found in cache for given key.\"\r\n    },\r\n    CachePluginError: {\r\n        code: \"no cache plugin set on CacheManager\",\r\n        desc: \"ICachePlugin needs to be set before using readFromStorage or writeFromStorage\"\r\n    },\r\n    noCryptoObj: {\r\n        code: \"no_crypto_object\",\r\n        desc: \"No crypto object detected. This is required for the following operation: \"\r\n    },\r\n    invalidCacheType: {\r\n        code: \"invalid_cache_type\",\r\n        desc: \"Invalid cache type\"\r\n    },\r\n    unexpectedAccountType: {\r\n        code: \"unexpected_account_type\",\r\n        desc: \"Unexpected account type.\"\r\n    },\r\n    unexpectedCredentialType: {\r\n        code: \"unexpected_credential_type\",\r\n        desc: \"Unexpected credential type.\"\r\n    },\r\n    invalidAssertion: {\r\n        code: \"invalid_assertion\",\r\n        desc: \"Client assertion must meet requirements described in https://tools.ietf.org/html/rfc7515\"\r\n    },\r\n    invalidClientCredential: {\r\n        code: \"invalid_client_credential\",\r\n        desc: \"Client credential (secret, certificate, or assertion) must not be empty when creating a confidential client. An application should at most have one credential\"\r\n    }\r\n};\r\n/**\r\n * Error thrown when there is an error in the client code running on the browser.\r\n */\r\nvar ClientAuthError = /** @class */ (function (_super) {\r\n    __extends$1(ClientAuthError, _super);\r\n    function ClientAuthError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"ClientAuthError\";\r\n        Object.setPrototypeOf(_this, ClientAuthError.prototype);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates an error thrown when client info object doesn't decode correctly.\r\n     * @param caughtError\r\n     */\r\n    ClientAuthError.createClientInfoDecodingError = function (caughtError) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.clientInfoDecodingError.code, ClientAuthErrorMessage.clientInfoDecodingError.desc + \" Failed with error: \" + caughtError);\r\n    };\r\n    /**\r\n     * Creates an error thrown if the client info is empty.\r\n     * @param rawClientInfo\r\n     */\r\n    ClientAuthError.createClientInfoEmptyError = function (rawClientInfo) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.clientInfoEmptyError.code, ClientAuthErrorMessage.clientInfoEmptyError.desc + \" Given Object: \" + rawClientInfo);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the id token extraction errors out.\r\n     * @param err\r\n     */\r\n    ClientAuthError.createIdTokenParsingError = function (caughtExtractionError) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.idTokenParsingError.code, ClientAuthErrorMessage.idTokenParsingError.desc + \" Failed with error: \" + caughtExtractionError);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the id token string is null or empty.\r\n     * @param invalidRawTokenString\r\n     */\r\n    ClientAuthError.createIdTokenNullOrEmptyError = function (invalidRawTokenString) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.nullOrEmptyIdToken.code, ClientAuthErrorMessage.nullOrEmptyIdToken.desc + \" Raw ID Token Value: \" + invalidRawTokenString);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the endpoint discovery doesn't complete correctly.\r\n     */\r\n    ClientAuthError.createEndpointDiscoveryIncompleteError = function (errDetail) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.endpointResolutionError.code, ClientAuthErrorMessage.endpointResolutionError.desc + \" Detail: \" + errDetail);\r\n    };\r\n    /**\r\n     * Creates an error thrown if authority type is not valid.\r\n     * @param invalidAuthorityError\r\n     */\r\n    ClientAuthError.createInvalidAuthorityTypeError = function (givenUrl) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidAuthorityType.code, ClientAuthErrorMessage.invalidAuthorityType.desc + \" Given Url: \" + givenUrl);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the hash cannot be deserialized.\r\n     * @param invalidAuthorityError\r\n     */\r\n    ClientAuthError.createHashNotDeserializedError = function (hashParamObj) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.hashNotDeserialized.code, ClientAuthErrorMessage.hashNotDeserialized.desc + \" Given Object: \" + hashParamObj);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the state cannot be parsed.\r\n     * @param invalidState\r\n     */\r\n    ClientAuthError.createInvalidStateError = function (invalidState, errorString) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidStateError.code, ClientAuthErrorMessage.invalidStateError.desc + \" Invalid State: \" + invalidState + \", Root Err: \" + errorString);\r\n    };\r\n    /**\r\n     * Creates an error thrown when two states do not match.\r\n     */\r\n    ClientAuthError.createStateMismatchError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.stateMismatchError.code, ClientAuthErrorMessage.stateMismatchError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the nonce does not match.\r\n     */\r\n    ClientAuthError.createNonceMismatchError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.nonceMismatchError.code, ClientAuthErrorMessage.nonceMismatchError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the cached account and response account do not match.\r\n     */\r\n    ClientAuthError.createAccountMismatchError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.accountMismatchError.code, ClientAuthErrorMessage.accountMismatchError.desc);\r\n    };\r\n    /**\r\n     * Throws error if idToken is not correctly formed\r\n     * @param idToken\r\n     */\r\n    ClientAuthError.createInvalidIdTokenError = function (idToken) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidIdToken.code, ClientAuthErrorMessage.invalidIdToken.desc + \" Given token: \" + JSON.stringify(idToken));\r\n    };\r\n    /**\r\n     * Creates an error thrown when the authorization code required for a token request is null or empty.\r\n     */\r\n    ClientAuthError.createNoTokensFoundError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.noTokensFoundError.code, ClientAuthErrorMessage.noTokensFoundError.desc);\r\n    };\r\n    /**\r\n     * Creates an error in cache parsing.\r\n     */\r\n    ClientAuthError.createCacheParseError = function (cacheKey) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.cacheParseError.code, ClientAuthErrorMessage.cacheParseError.desc + \" Cache key: \" + cacheKey);\r\n    };\r\n    /**\r\n     * Throws error when renewing token without login.\r\n     */\r\n    ClientAuthError.createUserLoginRequiredError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.userLoginRequiredError.code, ClientAuthErrorMessage.userLoginRequiredError.desc);\r\n    };\r\n    /**\r\n     * Throws error when multiple tokens are in cache for the given scope.\r\n     * @param scope\r\n     */\r\n    ClientAuthError.createMultipleMatchingTokensInCacheError = function (scope) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.multipleMatchingTokens.code, \"Cache error for scope \" + scope + \": \" + ClientAuthErrorMessage.multipleMatchingTokens.desc + \".\");\r\n    };\r\n    /**\r\n     * Throws error when multiple tokens are in cache for the given scope.\r\n     * @param scope\r\n     */\r\n    ClientAuthError.createMultipleMatchingAccountsInCacheError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.multipleMatchingAccounts.code, ClientAuthErrorMessage.multipleMatchingAccounts.desc);\r\n    };\r\n    /**\r\n     * Throws error when no auth code or refresh token is given to ServerTokenRequestParameters.\r\n     */\r\n    ClientAuthError.createTokenRequestCannotBeMadeError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.tokenRequestCannotBeMade.code, ClientAuthErrorMessage.tokenRequestCannotBeMade.desc);\r\n    };\r\n    /**\r\n     * Throws error when attempting to append a null, undefined or empty scope to a set\r\n     * @param givenScope\r\n     */\r\n    ClientAuthError.createAppendEmptyScopeToSetError = function (givenScope) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.appendEmptyScopeError.code, ClientAuthErrorMessage.appendEmptyScopeError.desc + \" Given Scope: \" + givenScope);\r\n    };\r\n    /**\r\n     * Throws error when attempting to append a null, undefined or empty scope to a set\r\n     * @param givenScope\r\n     */\r\n    ClientAuthError.createRemoveEmptyScopeFromSetError = function (givenScope) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.removeEmptyScopeError.code, ClientAuthErrorMessage.removeEmptyScopeError.desc + \" Given Scope: \" + givenScope);\r\n    };\r\n    /**\r\n     * Throws error when attempting to append null or empty ScopeSet.\r\n     * @param appendError\r\n     */\r\n    ClientAuthError.createAppendScopeSetError = function (appendError) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.appendScopeSetError.code, ClientAuthErrorMessage.appendScopeSetError.desc + \" Detail Error: \" + appendError);\r\n    };\r\n    /**\r\n     * Throws error if ScopeSet is null or undefined.\r\n     * @param givenScopeSet\r\n     */\r\n    ClientAuthError.createEmptyInputScopeSetError = function (givenScopeSet) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.emptyInputScopeSetError.code, ClientAuthErrorMessage.emptyInputScopeSetError.desc + \" Given ScopeSet: \" + givenScopeSet);\r\n    };\r\n    /**\r\n     * Throws error if user sets CancellationToken.cancel = true during polling of token endpoint during device code flow\r\n     */\r\n    ClientAuthError.createDeviceCodeCancelledError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.DeviceCodePollingCancelled.code, \"\" + ClientAuthErrorMessage.DeviceCodePollingCancelled.desc);\r\n    };\r\n    /**\r\n     * Throws error if device code is expired\r\n     */\r\n    ClientAuthError.createDeviceCodeExpiredError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.DeviceCodeExpired.code, \"\" + ClientAuthErrorMessage.DeviceCodeExpired.desc);\r\n    };\r\n    /**\r\n     * Throws error when silent requests are made without an account object\r\n     */\r\n    ClientAuthError.createNoAccountInSilentRequestError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.NoAccountInSilentRequest.code, \"\" + ClientAuthErrorMessage.NoAccountInSilentRequest.desc);\r\n    };\r\n    /**\r\n     * Throws error when cache record is null or undefined.\r\n     */\r\n    ClientAuthError.createNullOrUndefinedCacheRecord = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidCacheRecord.code, ClientAuthErrorMessage.invalidCacheRecord.desc);\r\n    };\r\n    /**\r\n     * Throws error when provided environment is not part of the CloudDiscoveryMetadata object\r\n     */\r\n    ClientAuthError.createInvalidCacheEnvironmentError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidCacheEnvironment.code, ClientAuthErrorMessage.invalidCacheEnvironment.desc);\r\n    };\r\n    /**\r\n     * Throws error when account is not found in cache.\r\n     */\r\n    ClientAuthError.createNoAccountFoundError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.noAccountFound.code, ClientAuthErrorMessage.noAccountFound.desc);\r\n    };\r\n    /**\r\n     * Throws error if ICachePlugin not set on CacheManager.\r\n     */\r\n    ClientAuthError.createCachePluginError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.CachePluginError.code, \"\" + ClientAuthErrorMessage.CachePluginError.desc);\r\n    };\r\n    /**\r\n     * Throws error if crypto object not found.\r\n     * @param operationName\r\n     */\r\n    ClientAuthError.createNoCryptoObjectError = function (operationName) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.noCryptoObj.code, \"\" + ClientAuthErrorMessage.noCryptoObj.desc + operationName);\r\n    };\r\n    /**\r\n    * Throws error if cache type is invalid.\r\n    */\r\n    ClientAuthError.createInvalidCacheTypeError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidCacheType.code, \"\" + ClientAuthErrorMessage.invalidCacheType.desc);\r\n    };\r\n    /**\r\n    * Throws error if unexpected account type.\r\n    */\r\n    ClientAuthError.createUnexpectedAccountTypeError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.unexpectedAccountType.code, \"\" + ClientAuthErrorMessage.unexpectedAccountType.desc);\r\n    };\r\n    /**\r\n    * Throws error if unexpected credential type.\r\n    */\r\n    ClientAuthError.createUnexpectedCredentialTypeError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.unexpectedCredentialType.code, \"\" + ClientAuthErrorMessage.unexpectedCredentialType.desc);\r\n    };\r\n    /**\r\n    * Throws error if client assertion is not valid.\r\n    */\r\n    ClientAuthError.createInvalidAssertionError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidAssertion.code, \"\" + ClientAuthErrorMessage.invalidAssertion.desc);\r\n    };\r\n    /**\r\n    * Throws error if client assertion is not valid.\r\n    */\r\n    ClientAuthError.createInvalidCredentialError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidClientCredential.code, \"\" + ClientAuthErrorMessage.invalidClientCredential.desc);\r\n    };\r\n    return ClientAuthError;\r\n}(AuthError));\n\n/**\r\n * @hidden\r\n */\r\nvar StringUtils = /** @class */ (function () {\r\n    function StringUtils() {\r\n    }\r\n    /**\r\n     * decode a JWT\r\n     *\r\n     * @param jwtToken\r\n     */\r\n    StringUtils.decodeJwt = function (jwtToken) {\r\n        if (StringUtils.isEmpty(jwtToken)) {\r\n            throw ClientAuthError.createIdTokenNullOrEmptyError(jwtToken);\r\n        }\r\n        var idTokenPartsRegex = /^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/;\r\n        var matches = idTokenPartsRegex.exec(jwtToken);\r\n        if (!matches || matches.length < 4) {\r\n            throw ClientAuthError.createIdTokenParsingError(\"Given token is malformed: \" + JSON.stringify(jwtToken));\r\n        }\r\n        var crackedToken = {\r\n            header: matches[1],\r\n            JWSPayload: matches[2],\r\n            JWSSig: matches[3]\r\n        };\r\n        return crackedToken;\r\n    };\r\n    /**\r\n     * Check if a string is empty.\r\n     *\r\n     * @param str\r\n     */\r\n    StringUtils.isEmpty = function (str) {\r\n        return (typeof str === \"undefined\" || !str || 0 === str.length);\r\n    };\r\n    StringUtils.startsWith = function (str, search) {\r\n        return str.indexOf(search) === 0;\r\n    };\r\n    StringUtils.endsWith = function (str, search) {\r\n        return (str.length >= search.length) && (str.lastIndexOf(search) === (str.length - search.length));\r\n    };\r\n    /**\r\n     * Parses string into an object.\r\n     *\r\n     * @param query\r\n     */\r\n    StringUtils.queryStringToObject = function (query) {\r\n        var match; // Regex for replacing addition symbol with a space\r\n        var pl = /\\+/g;\r\n        var search = /([^&=]+)=([^&]*)/g;\r\n        var decode = function (s) { return decodeURIComponent(decodeURIComponent(s.replace(pl, \" \"))); };\r\n        var obj = {};\r\n        match = search.exec(query);\r\n        while (match) {\r\n            obj[decode(match[1])] = decode(match[2]);\r\n            match = search.exec(query);\r\n        }\r\n        return obj;\r\n    };\r\n    /**\r\n     * Trims entries in an array.\r\n     *\r\n     * @param arr\r\n     */\r\n    StringUtils.trimArrayEntries = function (arr) {\r\n        return arr.map(function (entry) { return entry.trim(); });\r\n    };\r\n    /**\r\n     * Removes empty strings from array\r\n     * @param arr\r\n     */\r\n    StringUtils.removeEmptyStringsFromArray = function (arr) {\r\n        return arr.filter(function (entry) {\r\n            return !StringUtils.isEmpty(entry);\r\n        });\r\n    };\r\n    return StringUtils;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Log message level.\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"Error\"] = 0] = \"Error\";\r\n    LogLevel[LogLevel[\"Warning\"] = 1] = \"Warning\";\r\n    LogLevel[LogLevel[\"Info\"] = 2] = \"Info\";\r\n    LogLevel[LogLevel[\"Verbose\"] = 3] = \"Verbose\";\r\n})(LogLevel || (LogLevel = {}));\r\n/**\r\n * Class which facilitates logging of messages to a specific place.\r\n */\r\nvar Logger = /** @class */ (function () {\r\n    function Logger(loggerOptions) {\r\n        // Current log level, defaults to info.\r\n        this.level = LogLevel.Info;\r\n        if (loggerOptions) {\r\n            this.localCallback = loggerOptions.loggerCallback;\r\n            this.piiLoggingEnabled = loggerOptions.piiLoggingEnabled;\r\n            this.level = loggerOptions.logLevel;\r\n        }\r\n    }\r\n    /**\r\n     * Log message with required options.\r\n     */\r\n    Logger.prototype.logMessage = function (logMessage, options) {\r\n        if ((options.logLevel > this.level) || (!this.piiLoggingEnabled && options.containsPii)) {\r\n            return;\r\n        }\r\n        var timestamp = new Date().toUTCString();\r\n        var logHeader = StringUtils.isEmpty(this.correlationId) ? \"[\" + timestamp + \"] : \" : \"[\" + timestamp + \"] : [\" + this.correlationId + \"]\";\r\n        var log = logHeader + \" : \" + pkg.version + \" : \" + LogLevel[options.logLevel] + \" - \" + logMessage;\r\n        // debug(`msal:${LogLevel[options.logLevel]}${options.containsPii ? \"-Pii\": \"\"}${options.context ? `:${options.context}` : \"\"}`)(logMessage);\r\n        this.executeCallback(options.logLevel, log, options.containsPii);\r\n    };\r\n    /**\r\n     * Execute callback with message.\r\n     */\r\n    Logger.prototype.executeCallback = function (level, message, containsPii) {\r\n        if (this.localCallback) {\r\n            this.localCallback(level, message, containsPii);\r\n        }\r\n    };\r\n    /**\r\n     * Logs error messages.\r\n     */\r\n    Logger.prototype.error = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Error,\r\n            containsPii: false,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs error messages with PII.\r\n     */\r\n    Logger.prototype.errorPii = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Error,\r\n            containsPii: true,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs warning messages.\r\n     */\r\n    Logger.prototype.warning = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Warning,\r\n            containsPii: false,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs warning messages with PII.\r\n     */\r\n    Logger.prototype.warningPii = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Warning,\r\n            containsPii: true,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs info messages.\r\n     */\r\n    Logger.prototype.info = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Info,\r\n            containsPii: false,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs info messages with PII.\r\n     */\r\n    Logger.prototype.infoPii = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Info,\r\n            containsPii: true,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs verbose messages.\r\n     */\r\n    Logger.prototype.verbose = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Verbose,\r\n            containsPii: false,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs verbose messages with PII.\r\n     */\r\n    Logger.prototype.verbosePii = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Verbose,\r\n            containsPii: true,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether PII Logging is enabled or not.\r\n     */\r\n    Logger.prototype.isPiiLoggingEnabled = function () {\r\n        return this.piiLoggingEnabled || false;\r\n    };\r\n    return Logger;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar Constants = {\r\n    LIBRARY_NAME: \"MSAL.JS\",\r\n    SKU: \"msal.js.common\",\r\n    // Prefix for all library cache entries\r\n    CACHE_PREFIX: \"msal\",\r\n    // default authority\r\n    DEFAULT_AUTHORITY: \"https://login.microsoftonline.com/common/\",\r\n    DEFAULT_AUTHORITY_HOST: \"login.microsoftonline.com\",\r\n    // ADFS String\r\n    ADFS: \"adfs\",\r\n    // Default AAD Instance Discovery Endpoint\r\n    AAD_INSTANCE_DISCOVERY_ENDPT: \"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=\",\r\n    // Resource delimiter - used for certain cache entries\r\n    RESOURCE_DELIM: \"|\",\r\n    // Placeholder for non-existent account ids/objects\r\n    NO_ACCOUNT: \"NO_ACCOUNT\",\r\n    // Claims\r\n    CLAIMS: \"claims\",\r\n    // Consumer UTID\r\n    CONSUMER_UTID: \"9188040d-6c67-4c5b-b112-36a304b66dad\",\r\n    // Default scopes\r\n    OPENID_SCOPE: \"openid\",\r\n    PROFILE_SCOPE: \"profile\",\r\n    OFFLINE_ACCESS_SCOPE: \"offline_access\",\r\n    // Default response type for authorization code flow\r\n    CODE_RESPONSE_TYPE: \"code\",\r\n    CODE_GRANT_TYPE: \"authorization_code\",\r\n    RT_GRANT_TYPE: \"refresh_token\",\r\n    FRAGMENT_RESPONSE_MODE: \"fragment\",\r\n    S256_CODE_CHALLENGE_METHOD: \"S256\",\r\n    URL_FORM_CONTENT_TYPE: \"application/x-www-form-urlencoded;charset=utf-8\",\r\n    AUTHORIZATION_PENDING: \"authorization_pending\",\r\n    NOT_DEFINED: \"not_defined\"\r\n};\r\n/**\r\n * Request header names\r\n */\r\nvar HeaderNames;\r\n(function (HeaderNames) {\r\n    HeaderNames[\"CONTENT_TYPE\"] = \"Content-Type\";\r\n    HeaderNames[\"X_CLIENT_CURR_TELEM\"] = \"x-client-current-telemetry\";\r\n    HeaderNames[\"X_CLIENT_LAST_TELEM\"] = \"x-client-last-telemetry\";\r\n})(HeaderNames || (HeaderNames = {}));\r\n/**\r\n * Persistent cache keys MSAL which stay while user is logged in.\r\n */\r\nvar PersistentCacheKeys;\r\n(function (PersistentCacheKeys) {\r\n    PersistentCacheKeys[\"ID_TOKEN\"] = \"idtoken\";\r\n    PersistentCacheKeys[\"CLIENT_INFO\"] = \"client.info\";\r\n    PersistentCacheKeys[\"ADAL_ID_TOKEN\"] = \"adal.idtoken\";\r\n    PersistentCacheKeys[\"ERROR\"] = \"error\";\r\n    PersistentCacheKeys[\"ERROR_DESC\"] = \"error.description\";\r\n})(PersistentCacheKeys || (PersistentCacheKeys = {}));\r\n/**\r\n * String constants related to AAD Authority\r\n */\r\nvar AADAuthorityConstants;\r\n(function (AADAuthorityConstants) {\r\n    AADAuthorityConstants[\"COMMON\"] = \"common\";\r\n    AADAuthorityConstants[\"ORGANIZATIONS\"] = \"organizations\";\r\n    AADAuthorityConstants[\"CONSUMERS\"] = \"consumers\";\r\n})(AADAuthorityConstants || (AADAuthorityConstants = {}));\r\n/**\r\n * Keys in the hashParams sent by AAD Server\r\n */\r\nvar AADServerParamKeys;\r\n(function (AADServerParamKeys) {\r\n    AADServerParamKeys[\"CLIENT_ID\"] = \"client_id\";\r\n    AADServerParamKeys[\"REDIRECT_URI\"] = \"redirect_uri\";\r\n    AADServerParamKeys[\"RESPONSE_TYPE\"] = \"response_type\";\r\n    AADServerParamKeys[\"RESPONSE_MODE\"] = \"response_mode\";\r\n    AADServerParamKeys[\"GRANT_TYPE\"] = \"grant_type\";\r\n    AADServerParamKeys[\"CLAIMS\"] = \"claims\";\r\n    AADServerParamKeys[\"SCOPE\"] = \"scope\";\r\n    AADServerParamKeys[\"ERROR\"] = \"error\";\r\n    AADServerParamKeys[\"ERROR_DESCRIPTION\"] = \"error_description\";\r\n    AADServerParamKeys[\"ACCESS_TOKEN\"] = \"access_token\";\r\n    AADServerParamKeys[\"ID_TOKEN\"] = \"id_token\";\r\n    AADServerParamKeys[\"REFRESH_TOKEN\"] = \"refresh_token\";\r\n    AADServerParamKeys[\"EXPIRES_IN\"] = \"expires_in\";\r\n    AADServerParamKeys[\"STATE\"] = \"state\";\r\n    AADServerParamKeys[\"NONCE\"] = \"nonce\";\r\n    AADServerParamKeys[\"PROMPT\"] = \"prompt\";\r\n    AADServerParamKeys[\"SESSION_STATE\"] = \"session_state\";\r\n    AADServerParamKeys[\"CLIENT_INFO\"] = \"client_info\";\r\n    AADServerParamKeys[\"CODE\"] = \"code\";\r\n    AADServerParamKeys[\"CODE_CHALLENGE\"] = \"code_challenge\";\r\n    AADServerParamKeys[\"CODE_CHALLENGE_METHOD\"] = \"code_challenge_method\";\r\n    AADServerParamKeys[\"CODE_VERIFIER\"] = \"code_verifier\";\r\n    AADServerParamKeys[\"CLIENT_REQUEST_ID\"] = \"client-request-id\";\r\n    AADServerParamKeys[\"X_CLIENT_SKU\"] = \"x-client-SKU\";\r\n    AADServerParamKeys[\"X_CLIENT_VER\"] = \"x-client-VER\";\r\n    AADServerParamKeys[\"X_CLIENT_OS\"] = \"x-client-OS\";\r\n    AADServerParamKeys[\"X_CLIENT_CPU\"] = \"x-client-CPU\";\r\n    AADServerParamKeys[\"POST_LOGOUT_URI\"] = \"post_logout_redirect_uri\";\r\n    AADServerParamKeys[\"DEVICE_CODE\"] = \"device_code\";\r\n    AADServerParamKeys[\"CLIENT_SECRET\"] = \"client_secret\";\r\n    AADServerParamKeys[\"CLIENT_ASSERTION\"] = \"client_assertion\";\r\n    AADServerParamKeys[\"CLIENT_ASSERTION_TYPE\"] = \"client_assertion_type\";\r\n})(AADServerParamKeys || (AADServerParamKeys = {}));\r\n/**\r\n * IdToken claim string constants\r\n */\r\nvar IdTokenClaimName;\r\n(function (IdTokenClaimName) {\r\n    IdTokenClaimName[\"ISSUER\"] = \"iss\";\r\n    IdTokenClaimName[\"OBJID\"] = \"oid\";\r\n    IdTokenClaimName[\"SUBJECT\"] = \"sub\";\r\n    IdTokenClaimName[\"TENANTID\"] = \"tid\";\r\n    IdTokenClaimName[\"VERSION\"] = \"ver\";\r\n    IdTokenClaimName[\"PREF_USERNAME\"] = \"preferred_username\";\r\n    IdTokenClaimName[\"NAME\"] = \"name\";\r\n    IdTokenClaimName[\"NONCE\"] = \"nonce\";\r\n    IdTokenClaimName[\"EXPIRATION\"] = \"exp\";\r\n    IdTokenClaimName[\"HOME_OBJID\"] = \"home_oid\";\r\n    IdTokenClaimName[\"SESSIONID\"] = \"sid\";\r\n    IdTokenClaimName[\"CLOUD_INSTANCE_HOSTNAME\"] = \"cloud_instance_host_name\";\r\n})(IdTokenClaimName || (IdTokenClaimName = {}));\r\n/**\r\n * we considered making this \"enum\" in the request instead of string, however it looks like the allowed list of\r\n * prompt values kept changing over past couple of years. There are some undocumented prompt values for some\r\n * internal partners too, hence the choice of generic \"string\" type instead of the \"enum\"\r\n */\r\nvar PromptValue = {\r\n    LOGIN: \"login\",\r\n    SELECT_ACCOUNT: \"select_account\",\r\n    CONSENT: \"consent\",\r\n    NONE: \"none\",\r\n};\r\n/**\r\n * SSO Types - generated to populate hints\r\n */\r\nvar SSOTypes;\r\n(function (SSOTypes) {\r\n    SSOTypes[\"ACCOUNT\"] = \"account\";\r\n    SSOTypes[\"SID\"] = \"sid\";\r\n    SSOTypes[\"LOGIN_HINT\"] = \"login_hint\";\r\n    SSOTypes[\"ID_TOKEN\"] = \"id_token\";\r\n    SSOTypes[\"DOMAIN_HINT\"] = \"domain_hint\";\r\n    SSOTypes[\"ORGANIZATIONS\"] = \"organizations\";\r\n    SSOTypes[\"CONSUMERS\"] = \"consumers\";\r\n    SSOTypes[\"ACCOUNT_ID\"] = \"accountIdentifier\";\r\n    SSOTypes[\"HOMEACCOUNT_ID\"] = \"homeAccountIdentifier\";\r\n})(SSOTypes || (SSOTypes = {}));\r\n/**\r\n * Disallowed extra query parameters.\r\n */\r\nvar BlacklistedEQParams = [\r\n    SSOTypes.SID,\r\n    SSOTypes.LOGIN_HINT\r\n];\r\n/**\r\n * allowed values for codeVerifier\r\n */\r\nvar CodeChallengeMethodValues = {\r\n    PLAIN: \"plain\",\r\n    S256: \"S256\"\r\n};\r\n/**\r\n * allowed values for response_mode\r\n */\r\nvar ResponseMode;\r\n(function (ResponseMode) {\r\n    ResponseMode[\"QUERY\"] = \"query\";\r\n    ResponseMode[\"FRAGMENT\"] = \"fragment\";\r\n    ResponseMode[\"FORM_POST\"] = \"form_post\";\r\n})(ResponseMode || (ResponseMode = {}));\r\n/**\r\n * allowed grant_type\r\n */\r\nvar GrantType;\r\n(function (GrantType) {\r\n    GrantType[\"IMPLICIT_GRANT\"] = \"implicit\";\r\n    GrantType[\"AUTHORIZATION_CODE_GRANT\"] = \"authorization_code\";\r\n    GrantType[\"CLIENT_CREDENTIALS_GRANT\"] = \"client_credentials\";\r\n    GrantType[\"RESOURCE_OWNER_PASSWORD_GRANT\"] = \"password\";\r\n    GrantType[\"REFRESH_TOKEN_GRANT\"] = \"refresh_token\";\r\n    GrantType[\"DEVICE_CODE_GRANT\"] = \"device_code\";\r\n})(GrantType || (GrantType = {}));\r\n/**\r\n * Account types in Cache\r\n */\r\nvar CacheAccountType;\r\n(function (CacheAccountType) {\r\n    CacheAccountType[\"MSSTS_ACCOUNT_TYPE\"] = \"MSSTS\";\r\n    CacheAccountType[\"ADFS_ACCOUNT_TYPE\"] = \"ADFS\";\r\n    CacheAccountType[\"MSAV1_ACCOUNT_TYPE\"] = \"MSA\";\r\n    CacheAccountType[\"GENERIC_ACCOUNT_TYPE\"] = \"Generic\"; // NTLM, Kerberos, FBA, Basic etc\r\n})(CacheAccountType || (CacheAccountType = {}));\r\n/**\r\n * Separators used in cache\r\n */\r\nvar Separators;\r\n(function (Separators) {\r\n    Separators[\"CACHE_KEY_SEPARATOR\"] = \"-\";\r\n    Separators[\"CLIENT_INFO_SEPARATOR\"] = \".\";\r\n})(Separators || (Separators = {}));\r\n/**\r\n * Credentail Type stored in the cache\r\n */\r\nvar CredentialType;\r\n(function (CredentialType) {\r\n    CredentialType[\"ID_TOKEN\"] = \"IdToken\";\r\n    CredentialType[\"ACCESS_TOKEN\"] = \"AccessToken\";\r\n    CredentialType[\"REFRESH_TOKEN\"] = \"RefreshToken\";\r\n})(CredentialType || (CredentialType = {}));\r\n/**\r\n * Credentail Type stored in the cache\r\n */\r\nvar CacheSchemaType;\r\n(function (CacheSchemaType) {\r\n    CacheSchemaType[\"ACCOUNT\"] = \"Account\";\r\n    CacheSchemaType[\"CREDENTIAL\"] = \"Credential\";\r\n    CacheSchemaType[\"APP_META_DATA\"] = \"AppMetadata\";\r\n    CacheSchemaType[\"TEMPORARY\"] = \"TempCache\";\r\n    CacheSchemaType[\"TELEMETRY\"] = \"Telemetry\";\r\n})(CacheSchemaType || (CacheSchemaType = {}));\r\n/**\r\n * Combine all cache types\r\n */\r\nvar CacheType;\r\n(function (CacheType) {\r\n    CacheType[CacheType[\"ADFS\"] = 1001] = \"ADFS\";\r\n    CacheType[CacheType[\"MSA\"] = 1002] = \"MSA\";\r\n    CacheType[CacheType[\"MSSTS\"] = 1003] = \"MSSTS\";\r\n    CacheType[CacheType[\"GENERIC\"] = 1004] = \"GENERIC\";\r\n    CacheType[CacheType[\"ACCESS_TOKEN\"] = 2001] = \"ACCESS_TOKEN\";\r\n    CacheType[CacheType[\"REFRESH_TOKEN\"] = 2002] = \"REFRESH_TOKEN\";\r\n    CacheType[CacheType[\"ID_TOKEN\"] = 2003] = \"ID_TOKEN\";\r\n    CacheType[CacheType[\"APP_META_DATA\"] = 3001] = \"APP_META_DATA\";\r\n})(CacheType || (CacheType = {}));\r\n/**\r\n * More Cache related constants\r\n */\r\nvar APP_META_DATA = \"appmetadata\";\r\nvar ClientInfo = \"client_info\";\r\nvar SERVER_TELEM_CONSTANTS = {\r\n    SCHEMA_VERSION: 2,\r\n    FAILURE_LIMIT: 3,\r\n    CACHE_KEY: \"server-telemetry\",\r\n    CATEGORY_SEPARATOR: \"|\",\r\n    VALUE_SEPARATOR: \",\"\r\n};\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Base type for credentials to be stored in the cache: eg: ACCESS_TOKEN, ID_TOKEN etc\r\n *\r\n * Key:Value Schema:\r\n *\r\n * Key: <home_account_id*>-<environment>-<credential_type>-<client_id>-<realm*>-<target*>\r\n *\r\n * Value Schema:\r\n * {\r\n *      homeAccountId: home account identifier for the auth scheme,\r\n *      environment: entity that issued the token, represented as a full host\r\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\r\n *      clientId: client ID of the application\r\n *      secret: Actual credential as a string\r\n *      familyId: Family ID identifier, usually only used for refresh tokens\r\n *      realm: Full tenant or organizational identifier that the account belongs to\r\n *      target: Permissions that are included in the token, or for refresh tokens, the resource identifier.\r\n * }\r\n */\r\nvar CredentialEntity = /** @class */ (function () {\r\n    function CredentialEntity() {\r\n    }\r\n    /**\r\n     * Generate Account Id key component as per the schema: <home_account_id>-<environment>\r\n     */\r\n    CredentialEntity.prototype.generateAccountId = function () {\r\n        return CredentialEntity.generateAccountIdForCacheKey(this.homeAccountId, this.environment);\r\n    };\r\n    /**\r\n     * Generate Credential Id key component as per the schema: <credential_type>-<client_id>-<realm>\r\n     */\r\n    CredentialEntity.prototype.generateCredentialId = function () {\r\n        return CredentialEntity.generateCredentialIdForCacheKey(this.credentialType, this.clientId, this.realm, this.familyId);\r\n    };\r\n    /**\r\n     * Generate target key component as per schema: <target>\r\n     */\r\n    CredentialEntity.prototype.generateTarget = function () {\r\n        return CredentialEntity.generateTargetForCacheKey(this.target);\r\n    };\r\n    /**\r\n     * generates credential key\r\n     */\r\n    CredentialEntity.prototype.generateCredentialKey = function () {\r\n        return CredentialEntity.generateCredentialCacheKey(this.homeAccountId, this.environment, this.credentialType, this.clientId, this.realm, this.target, this.familyId);\r\n    };\r\n    /**\r\n     * returns the type of the cache (in this case credential)\r\n     */\r\n    CredentialEntity.prototype.generateType = function () {\r\n        switch (this.credentialType) {\r\n            case CredentialType.ID_TOKEN:\r\n                return CacheType.ID_TOKEN;\r\n            case CredentialType.ACCESS_TOKEN:\r\n                return CacheType.ACCESS_TOKEN;\r\n            case CredentialType.REFRESH_TOKEN:\r\n                return CacheType.REFRESH_TOKEN;\r\n            default: {\r\n                throw ClientAuthError.createUnexpectedCredentialTypeError();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * helper function to return `CredentialType`\r\n     * @param key\r\n     */\r\n    CredentialEntity.getCredentialType = function (key) {\r\n        if (key.indexOf(CredentialType.ACCESS_TOKEN.toLowerCase()) !== -1) {\r\n            return CredentialType.ACCESS_TOKEN;\r\n        }\r\n        else if (key.indexOf(CredentialType.ID_TOKEN.toLowerCase()) !== -1) {\r\n            return CredentialType.ID_TOKEN;\r\n        }\r\n        else if (key.indexOf(CredentialType.REFRESH_TOKEN.toLowerCase()) !== -1) {\r\n            return CredentialType.REFRESH_TOKEN;\r\n        }\r\n        return Constants.NOT_DEFINED;\r\n    };\r\n    /**\r\n     * generates credential key\r\n     */\r\n    CredentialEntity.generateCredentialCacheKey = function (homeAccountId, environment, credentialType, clientId, realm, target, familyId) {\r\n        var credentialKey = [\r\n            this.generateAccountIdForCacheKey(homeAccountId, environment),\r\n            this.generateCredentialIdForCacheKey(credentialType, clientId, realm, familyId),\r\n            this.generateTargetForCacheKey(target),\r\n        ];\r\n        return credentialKey.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n    };\r\n    /**\r\n     * generates Account Id for keys\r\n     * @param homeAccountId\r\n     * @param environment\r\n     */\r\n    CredentialEntity.generateAccountIdForCacheKey = function (homeAccountId, environment) {\r\n        var accountId = [homeAccountId, environment];\r\n        return accountId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n    };\r\n    /**\r\n     * Generates Credential Id for keys\r\n     * @param credentialType\r\n     * @param realm\r\n     * @param clientId\r\n     * @param familyId\r\n     */\r\n    CredentialEntity.generateCredentialIdForCacheKey = function (credentialType, clientId, realm, familyId) {\r\n        var clientOrFamilyId = credentialType === CredentialType.REFRESH_TOKEN\r\n            ? familyId || clientId\r\n            : clientId;\r\n        var credentialId = [\r\n            credentialType,\r\n            clientOrFamilyId,\r\n            realm || \"\",\r\n        ];\r\n        return credentialId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n    };\r\n    /**\r\n     * Generate target key component as per schema: <target>\r\n     */\r\n    CredentialEntity.generateTargetForCacheKey = function (scopes) {\r\n        return (scopes || \"\").toLowerCase();\r\n    };\r\n    return CredentialEntity;\r\n}());\n\n/**\r\n * ClientConfigurationErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nvar ClientConfigurationErrorMessage = {\r\n    redirectUriNotSet: {\r\n        code: \"redirect_uri_empty\",\r\n        desc: \"A redirect URI is required for all calls, and none has been set.\"\r\n    },\r\n    postLogoutUriNotSet: {\r\n        code: \"post_logout_uri_empty\",\r\n        desc: \"A post logout redirect has not been set.\"\r\n    },\r\n    claimsRequestParsingError: {\r\n        code: \"claims_request_parsing_error\",\r\n        desc: \"Could not parse the given claims request object.\"\r\n    },\r\n    authorityUriInsecure: {\r\n        code: \"authority_uri_insecure\",\r\n        desc: \"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options\"\r\n    },\r\n    urlParseError: {\r\n        code: \"url_parse_error\",\r\n        desc: \"URL could not be parsed into appropriate segments.\"\r\n    },\r\n    urlEmptyError: {\r\n        code: \"empty_url_error\",\r\n        desc: \"URL was empty or null.\"\r\n    },\r\n    emptyScopesError: {\r\n        code: \"empty_input_scopes_error\",\r\n        desc: \"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.\"\r\n    },\r\n    nonArrayScopesError: {\r\n        code: \"nonarray_input_scopes_error\",\r\n        desc: \"Scopes cannot be passed as non-array.\"\r\n    },\r\n    clientIdSingleScopeError: {\r\n        code: \"clientid_input_scopes_error\",\r\n        desc: \"Client ID can only be provided as a single scope.\"\r\n    },\r\n    invalidPrompt: {\r\n        code: \"invalid_prompt_value\",\r\n        desc: \"Supported prompt values are 'login', 'select_account', 'consent' and 'none'.  Please see here for valid configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options\",\r\n    },\r\n    tokenRequestEmptyError: {\r\n        code: \"token_request_empty\",\r\n        desc: \"Token request was empty and not found in cache.\"\r\n    },\r\n    logoutRequestEmptyError: {\r\n        code: \"logout_request_empty\",\r\n        desc: \"The logout request was null or undefined.\"\r\n    },\r\n    invalidCodeChallengeMethod: {\r\n        code: \"invalid_code_challenge_method\",\r\n        desc: \"code_challenge_method passed is invalid. Valid values are \\\"plain\\\" and \\\"S256\\\".\"\r\n    },\r\n    invalidCodeChallengeParams: {\r\n        code: \"pkce_params_missing\",\r\n        desc: \"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request\"\r\n    },\r\n    knownAuthoritiesAndCloudDiscoveryMetadata: {\r\n        code: \"invalid_known_authorities\",\r\n        desc: \"knownAuthorities and cloudDiscoveryMetadata cannot both be provided. Please provide cloudDiscoveryMetadata object for AAD, knownAuthorities otherwise.\"\r\n    },\r\n    invalidCloudDiscoveryMetadata: {\r\n        code: \"invalid_cloud_discovery_metadata\",\r\n        desc: \"Invalid cloudDiscoveryMetadata provided. Must be a JSON object containing tenant_discovery_endpoint and metadata fields\"\r\n    },\r\n    untrustedAuthority: {\r\n        code: \"untrusted_authority\",\r\n        desc: \"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.\"\r\n    }\r\n};\r\n/**\r\n * Error thrown when there is an error in configuration of the MSAL.js library.\r\n */\r\nvar ClientConfigurationError = /** @class */ (function (_super) {\r\n    __extends$1(ClientConfigurationError, _super);\r\n    function ClientConfigurationError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"ClientConfigurationError\";\r\n        Object.setPrototypeOf(_this, ClientConfigurationError.prototype);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates an error thrown when the redirect uri is empty (not set by caller)\r\n     */\r\n    ClientConfigurationError.createRedirectUriEmptyError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.redirectUriNotSet.code, ClientConfigurationErrorMessage.redirectUriNotSet.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the post-logout redirect uri is empty (not set by caller)\r\n     */\r\n    ClientConfigurationError.createPostLogoutRedirectUriEmptyError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.postLogoutUriNotSet.code, ClientConfigurationErrorMessage.postLogoutUriNotSet.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the claims request could not be successfully parsed\r\n     */\r\n    ClientConfigurationError.createClaimsRequestParsingError = function (claimsRequestParseError) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.claimsRequestParsingError.code, ClientConfigurationErrorMessage.claimsRequestParsingError.desc + \" Given value: \" + claimsRequestParseError);\r\n    };\r\n    /**\r\n     * Creates an error thrown if authority uri is given an insecure protocol.\r\n     * @param urlString\r\n     */\r\n    ClientConfigurationError.createInsecureAuthorityUriError = function (urlString) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.authorityUriInsecure.code, ClientConfigurationErrorMessage.authorityUriInsecure.desc + \" Given URI: \" + urlString);\r\n    };\r\n    /**\r\n     * Creates an error thrown if URL string does not parse into separate segments.\r\n     * @param urlString\r\n     */\r\n    ClientConfigurationError.createUrlParseError = function (urlParseError) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.urlParseError.code, ClientConfigurationErrorMessage.urlParseError.desc + \" Given Error: \" + urlParseError);\r\n    };\r\n    /**\r\n     * Creates an error thrown if URL string is empty or null.\r\n     * @param urlString\r\n     */\r\n    ClientConfigurationError.createUrlEmptyError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.urlEmptyError.code, ClientConfigurationErrorMessage.urlEmptyError.desc);\r\n    };\r\n    /**\r\n     * Error thrown when scopes are not an array\r\n     * @param inputScopes\r\n     */\r\n    ClientConfigurationError.createScopesNonArrayError = function (inputScopes) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.nonArrayScopesError.code, ClientConfigurationErrorMessage.nonArrayScopesError.desc + \" Given Scopes: \" + inputScopes);\r\n    };\r\n    /**\r\n     * Error thrown when scopes are empty.\r\n     * @param scopesValue\r\n     */\r\n    ClientConfigurationError.createEmptyScopesArrayError = function (inputScopes) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.emptyScopesError.code, ClientConfigurationErrorMessage.emptyScopesError.desc + \" Given Scopes: \" + inputScopes);\r\n    };\r\n    /**\r\n     * Error thrown when client id scope is not provided as single scope.\r\n     * @param inputScopes\r\n     */\r\n    ClientConfigurationError.createClientIdSingleScopeError = function (inputScopes) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.clientIdSingleScopeError.code, ClientConfigurationErrorMessage.clientIdSingleScopeError.desc + \" Given Scopes: \" + inputScopes);\r\n    };\r\n    /**\r\n     * Error thrown when prompt is not an allowed type.\r\n     * @param promptValue\r\n     */\r\n    ClientConfigurationError.createInvalidPromptError = function (promptValue) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidPrompt.code, ClientConfigurationErrorMessage.invalidPrompt.desc + \" Given value: \" + promptValue);\r\n    };\r\n    /**\r\n     * Throws error when token request is empty and nothing cached in storage.\r\n     */\r\n    ClientConfigurationError.createEmptyLogoutRequestError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.logoutRequestEmptyError.code, ClientConfigurationErrorMessage.logoutRequestEmptyError.desc);\r\n    };\r\n    /**\r\n     * Throws error when token request is empty and nothing cached in storage.\r\n     */\r\n    ClientConfigurationError.createEmptyTokenRequestError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.tokenRequestEmptyError.code, ClientConfigurationErrorMessage.tokenRequestEmptyError.desc);\r\n    };\r\n    /**\r\n     * Throws error when an invalid code_challenge_method is passed by the user\r\n     */\r\n    ClientConfigurationError.createInvalidCodeChallengeMethodError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCodeChallengeMethod.code, ClientConfigurationErrorMessage.invalidCodeChallengeMethod.desc);\r\n    };\r\n    /**\r\n     * Throws error when both params: code_challenge and code_challenge_method are not passed together\r\n     */\r\n    ClientConfigurationError.createInvalidCodeChallengeParamsError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCodeChallengeParams.code, ClientConfigurationErrorMessage.invalidCodeChallengeParams.desc);\r\n    };\r\n    /**\r\n     * Throws an error when the user passes both knownAuthorities and cloudDiscoveryMetadata\r\n     */\r\n    ClientConfigurationError.createKnownAuthoritiesCloudDiscoveryMetadataError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.knownAuthoritiesAndCloudDiscoveryMetadata.code, ClientConfigurationErrorMessage.knownAuthoritiesAndCloudDiscoveryMetadata.desc);\r\n    };\r\n    /**\r\n     * Throws an error when the user passes invalid cloudDiscoveryMetadata\r\n     */\r\n    ClientConfigurationError.createInvalidCloudDiscoveryMetadataError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCloudDiscoveryMetadata.code, ClientConfigurationErrorMessage.invalidCloudDiscoveryMetadata.desc);\r\n    };\r\n    /**\r\n     * Throws error when provided authority is not a member of the trusted host list\r\n     */\r\n    ClientConfigurationError.createUntrustedAuthorityError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.untrustedAuthority.code, ClientConfigurationErrorMessage.untrustedAuthority.desc);\r\n    };\r\n    return ClientConfigurationError;\r\n}(ClientAuthError));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * The ScopeSet class creates a set of scopes. Scopes are case-insensitive, unique values, so the Set object in JS makes\r\n * the most sense to implement for this class. All scopes are trimmed and converted to lower case strings in intersection and union functions\r\n * to ensure uniqueness of strings.\r\n */\r\nvar ScopeSet = /** @class */ (function () {\r\n    function ScopeSet(inputScopes) {\r\n        var _this = this;\r\n        // Filter empty string and null/undefined array items\r\n        var scopeArr = inputScopes ? StringUtils.trimArrayEntries(__spreadArrays$1(inputScopes)) : [];\r\n        var filteredInput = scopeArr ? StringUtils.removeEmptyStringsFromArray(scopeArr) : [];\r\n        // Validate and filter scopes (validate function throws if validation fails)\r\n        this.validateInputScopes(filteredInput);\r\n        this.scopes = new Set(); // Iterator in constructor not supported by IE11\r\n        filteredInput.forEach(function (scope) { return _this.scopes.add(scope); });\r\n    }\r\n    /**\r\n     * Factory method to create ScopeSet from space-delimited string\r\n     * @param inputScopeString\r\n     * @param appClientId\r\n     * @param scopesRequired\r\n    */\r\n    ScopeSet.fromString = function (inputScopeString) {\r\n        inputScopeString = inputScopeString || \"\";\r\n        var inputScopes = inputScopeString.split(\" \");\r\n        return new ScopeSet(inputScopes);\r\n    };\r\n    /**\r\n     * Used to validate the scopes input parameter requested  by the developer.\r\n     * @param {Array<string>} inputScopes - Developer requested permissions. Not all scopes are guaranteed to be included in the access token returned.\r\n     * @param {boolean} scopesRequired - Boolean indicating whether the scopes array is required or not\r\n    */\r\n    ScopeSet.prototype.validateInputScopes = function (inputScopes) {\r\n        // Check if scopes are required but not given or is an empty array\r\n        if (!inputScopes || inputScopes.length < 1) {\r\n            throw ClientConfigurationError.createEmptyScopesArrayError(inputScopes);\r\n        }\r\n    };\r\n    /**\r\n     * Check if a given scope is present in this set of scopes.\r\n     * @param scope\r\n     */\r\n    ScopeSet.prototype.containsScope = function (scope) {\r\n        return !StringUtils.isEmpty(scope) ? this.scopes.has(scope) : false;\r\n    };\r\n    /**\r\n     * Check if a set of scopes is present in this set of scopes.\r\n     * @param scopeSet\r\n     */\r\n    ScopeSet.prototype.containsScopeSet = function (scopeSet) {\r\n        var _this = this;\r\n        if (!scopeSet) {\r\n            return false;\r\n        }\r\n        return (this.scopes.size >= scopeSet.scopes.size && scopeSet.asArray().every(function (scope) { return _this.containsScope(scope); }));\r\n    };\r\n    /**\r\n     * Appends single scope if passed\r\n     * @param newScope\r\n     */\r\n    ScopeSet.prototype.appendScope = function (newScope) {\r\n        if (!StringUtils.isEmpty(newScope)) {\r\n            this.scopes.add(newScope.trim());\r\n        }\r\n    };\r\n    /**\r\n     * Appends multiple scopes if passed\r\n     * @param newScopes\r\n     */\r\n    ScopeSet.prototype.appendScopes = function (newScopes) {\r\n        var _this = this;\r\n        try {\r\n            newScopes.forEach(function (newScope) { return _this.appendScope(newScope); });\r\n        }\r\n        catch (e) {\r\n            throw ClientAuthError.createAppendScopeSetError(e);\r\n        }\r\n    };\r\n    /**\r\n     * Removes element from set of scopes.\r\n     * @param scope\r\n     */\r\n    ScopeSet.prototype.removeScope = function (scope) {\r\n        if (StringUtils.isEmpty(scope)) {\r\n            throw ClientAuthError.createRemoveEmptyScopeFromSetError(scope);\r\n        }\r\n        this.scopes.delete(scope.trim());\r\n    };\r\n    /**\r\n     * Combines an array of scopes with the current set of scopes.\r\n     * @param otherScopes\r\n     */\r\n    ScopeSet.prototype.unionScopeSets = function (otherScopes) {\r\n        if (!otherScopes) {\r\n            throw ClientAuthError.createEmptyInputScopeSetError(otherScopes);\r\n        }\r\n        var unionScopes = new Set(); // Iterator in constructor not supported in IE11\r\n        otherScopes.scopes.forEach(function (scope) { return unionScopes.add(scope); });\r\n        this.scopes.forEach(function (scope) { return unionScopes.add(scope); });\r\n        return unionScopes;\r\n    };\r\n    /**\r\n     * Check if scopes intersect between this set and another.\r\n     * @param otherScopes\r\n     */\r\n    ScopeSet.prototype.intersectingScopeSets = function (otherScopes) {\r\n        if (!otherScopes) {\r\n            throw ClientAuthError.createEmptyInputScopeSetError(otherScopes);\r\n        }\r\n        var unionScopes = this.unionScopeSets(otherScopes);\r\n        // Do not allow offline_access to be the only intersecting scope\r\n        var sizeOtherScopes = otherScopes.getScopeCount();\r\n        var sizeThisScopes = this.getScopeCount();\r\n        var sizeUnionScopes = unionScopes.size;\r\n        return sizeUnionScopes < (sizeThisScopes + sizeOtherScopes);\r\n    };\r\n    /**\r\n     * Returns size of set of scopes.\r\n     */\r\n    ScopeSet.prototype.getScopeCount = function () {\r\n        return this.scopes.size;\r\n    };\r\n    /**\r\n     * Returns the scopes as an array of string values\r\n     */\r\n    ScopeSet.prototype.asArray = function () {\r\n        var array = [];\r\n        this.scopes.forEach(function (val) { return array.push(val); });\r\n        return array;\r\n    };\r\n    /**\r\n     * Prints scopes into a space-delimited string\r\n     */\r\n    ScopeSet.prototype.printScopes = function () {\r\n        if (this.scopes) {\r\n            var scopeArr = this.asArray();\r\n            return scopeArr.join(\" \");\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Prints scopes into a space-delimited lower-case string (used for caching)\r\n     */\r\n    ScopeSet.prototype.printScopesLowerCase = function () {\r\n        return this.printScopes().toLowerCase();\r\n    };\r\n    return ScopeSet;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Function to build a client info object\r\n * @param rawClientInfo\r\n * @param crypto\r\n */\r\nfunction buildClientInfo(rawClientInfo, crypto) {\r\n    if (StringUtils.isEmpty(rawClientInfo)) {\r\n        throw ClientAuthError.createClientInfoEmptyError(rawClientInfo);\r\n    }\r\n    try {\r\n        var decodedClientInfo = crypto.base64Decode(rawClientInfo);\r\n        return JSON.parse(decodedClientInfo);\r\n    }\r\n    catch (e) {\r\n        throw ClientAuthError.createClientInfoDecodingError(e);\r\n    }\r\n}\n\nvar TrustedAuthority = /** @class */ (function () {\r\n    function TrustedAuthority() {\r\n    }\r\n    /**\r\n     * Set the CloudDiscoveryMetadata object from knownAuthorities or cloudDiscoveryMetadata passed into the app config\r\n     * @param knownAuthorities\r\n     * @param cloudDiscoveryMetadata\r\n     */\r\n    TrustedAuthority.setTrustedAuthoritiesFromConfig = function (knownAuthorities, cloudDiscoveryMetadata) {\r\n        if (!this.getTrustedHostList().length) {\r\n            if (knownAuthorities.length > 0 && !StringUtils.isEmpty(cloudDiscoveryMetadata)) {\r\n                throw ClientConfigurationError.createKnownAuthoritiesCloudDiscoveryMetadataError();\r\n            }\r\n            this.createCloudDiscoveryMetadataFromKnownAuthorities(knownAuthorities);\r\n            try {\r\n                if (cloudDiscoveryMetadata) {\r\n                    var parsedMetadata = JSON.parse(cloudDiscoveryMetadata);\r\n                    this.saveCloudDiscoveryMetadata(parsedMetadata.metadata);\r\n                }\r\n            }\r\n            catch (e) {\r\n                throw ClientConfigurationError.createInvalidCloudDiscoveryMetadataError();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Called to get metadata from network if CloudDiscoveryMetadata was not populated by config\r\n     * @param networkInterface\r\n     */\r\n    TrustedAuthority.setTrustedAuthoritiesFromNetwork = function (authorityToVerify, networkInterface) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var instanceDiscoveryEndpoint, response, metadata, e_1, host;\r\n            return __generator$1(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        instanceDiscoveryEndpoint = \"\" + Constants.AAD_INSTANCE_DISCOVERY_ENDPT + authorityToVerify.urlString + \"oauth2/v2.0/authorize\";\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, networkInterface.sendGetRequestAsync(instanceDiscoveryEndpoint)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        metadata = response.body.metadata;\r\n                        this.saveCloudDiscoveryMetadata(metadata);\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        return [2 /*return*/];\r\n                    case 4:\r\n                        host = authorityToVerify.getUrlComponents().HostNameAndPort;\r\n                        if (this.getTrustedHostList().length > 0 && !this.IsInTrustedHostList(host)) {\r\n                            // Custom Domain scenario, host is trusted because Instance Discovery call succeeded \r\n                            this.createCloudDiscoveryMetadataFromKnownAuthorities([host]);\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param metadata\r\n     */\r\n    TrustedAuthority.saveCloudDiscoveryMetadata = function (metadata) {\r\n        metadata.forEach(function (entry) {\r\n            var authorities = entry.aliases;\r\n            authorities.forEach(function (authority) {\r\n                TrustedAuthority.TrustedHostList[authority.toLowerCase()] = entry;\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Create a generic metadata object for each host passed to knownAuthorities.\r\n     * This is mostly useful for B2C or ADFS scenarios\r\n     * @param knownAuthorities\r\n     */\r\n    TrustedAuthority.createCloudDiscoveryMetadataFromKnownAuthorities = function (knownAuthorities) {\r\n        var _this = this;\r\n        knownAuthorities.forEach(function (authority) {\r\n            _this.TrustedHostList[authority.toLowerCase()] = {\r\n                preferred_cache: authority.toLowerCase(),\r\n                preferred_network: authority.toLowerCase(),\r\n                aliases: [authority.toLowerCase()]\r\n            };\r\n        });\r\n    };\r\n    TrustedAuthority.getTrustedHostList = function () {\r\n        return Object.keys(this.TrustedHostList);\r\n    };\r\n    /**\r\n     * Get metadata for the provided host\r\n     * @param host\r\n     */\r\n    TrustedAuthority.getCloudDiscoveryMetadata = function (host) {\r\n        return this.TrustedHostList[host.toLowerCase()] || null;\r\n    };\r\n    /**\r\n     * Checks to see if the host is in a list of trusted hosts\r\n     * @param host\r\n     */\r\n    TrustedAuthority.IsInTrustedHostList = function (host) {\r\n        return Object.keys(this.TrustedHostList).indexOf(host.toLowerCase()) > -1;\r\n    };\r\n    TrustedAuthority.TrustedHostList = {};\r\n    return TrustedAuthority;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Type that defines required and optional parameters for an Account field (based on universal cache schema implemented by all MSALs).\r\n *\r\n * Key : Value Schema\r\n *\r\n * Key: <home_account_id>-<environment>-<realm*>\r\n *\r\n * Value Schema:\r\n * {\r\n *      homeAccountId: home account identifier for the auth scheme,\r\n *      environment: entity that issued the token, represented as a full host\r\n *      realm: Full tenant or organizational identifier that the account belongs to\r\n *      localAccountId: Original tenant-specific accountID, usually used for legacy cases\r\n *      username: primary username that represents the user, usually corresponds to preferred_username in the v2 endpt\r\n *      authorityType: Accounts authority type as a string\r\n *      name: Full name for the account, including given name and family name,\r\n *      clientInfo: Full base64 encoded client info received from ESTS\r\n *      lastModificationTime: last time this entity was modified in the cache\r\n *      lastModificationApp:\r\n * }\r\n */\r\nvar AccountEntity = /** @class */ (function () {\r\n    function AccountEntity() {\r\n    }\r\n    /**\r\n     * Generate Account Id key component as per the schema: <home_account_id>-<environment>\r\n     */\r\n    AccountEntity.prototype.generateAccountId = function () {\r\n        var accountId = [this.homeAccountId, this.environment];\r\n        return accountId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n    };\r\n    /**\r\n     * Generate Account Cache Key as per the schema: <home_account_id>-<environment>-<realm*>\r\n     */\r\n    AccountEntity.prototype.generateAccountKey = function () {\r\n        return AccountEntity.generateAccountCacheKey({\r\n            homeAccountId: this.homeAccountId,\r\n            environment: this.environment,\r\n            tenantId: this.realm,\r\n            username: this.username\r\n        });\r\n    };\r\n    /**\r\n     * returns the type of the cache (in this case account)\r\n     */\r\n    AccountEntity.prototype.generateType = function () {\r\n        switch (this.authorityType) {\r\n            case CacheAccountType.ADFS_ACCOUNT_TYPE:\r\n                return CacheType.ADFS;\r\n            case CacheAccountType.MSAV1_ACCOUNT_TYPE:\r\n                return CacheType.MSA;\r\n            case CacheAccountType.MSSTS_ACCOUNT_TYPE:\r\n                return CacheType.MSSTS;\r\n            case CacheAccountType.GENERIC_ACCOUNT_TYPE:\r\n                return CacheType.GENERIC;\r\n            default: {\r\n                throw ClientAuthError.createUnexpectedAccountTypeError();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the AccountInfo interface for this account.\r\n     */\r\n    AccountEntity.prototype.getAccountInfo = function () {\r\n        return {\r\n            homeAccountId: this.homeAccountId,\r\n            environment: this.environment,\r\n            tenantId: this.realm,\r\n            username: this.username\r\n        };\r\n    };\r\n    /**\r\n     * Generates account key from interface\r\n     * @param accountInterface\r\n     */\r\n    AccountEntity.generateAccountCacheKey = function (accountInterface) {\r\n        var accountKey = [\r\n            accountInterface.homeAccountId,\r\n            accountInterface.environment || \"\",\r\n            accountInterface.tenantId || \"\",\r\n        ];\r\n        return accountKey.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n    };\r\n    /**\r\n     * Build Account cache from IdToken, clientInfo and authority/policy\r\n     * @param clientInfo\r\n     * @param authority\r\n     * @param idToken\r\n     * @param policy\r\n     */\r\n    AccountEntity.createAccount = function (clientInfo, authority, idToken, crypto) {\r\n        var account = new AccountEntity();\r\n        account.authorityType = CacheAccountType.MSSTS_ACCOUNT_TYPE;\r\n        account.clientInfo = clientInfo;\r\n        var clientInfoObj = buildClientInfo(clientInfo, crypto);\r\n        account.homeAccountId = \"\" + clientInfoObj.uid + Separators.CLIENT_INFO_SEPARATOR + clientInfoObj.utid;\r\n        var reqEnvironment = authority.canonicalAuthorityUrlComponents.HostNameAndPort;\r\n        var env = TrustedAuthority.getCloudDiscoveryMetadata(reqEnvironment) ? TrustedAuthority.getCloudDiscoveryMetadata(reqEnvironment).preferred_cache : \"\";\r\n        if (StringUtils.isEmpty(env)) {\r\n            throw ClientAuthError.createInvalidCacheEnvironmentError();\r\n        }\r\n        account.environment = env;\r\n        account.realm = idToken.claims.tid;\r\n        if (idToken) {\r\n            // How do you account for MSA CID here?\r\n            var localAccountId = !StringUtils.isEmpty(idToken.claims.oid)\r\n                ? idToken.claims.oid\r\n                : idToken.claims.sid;\r\n            account.localAccountId = localAccountId;\r\n            account.username = idToken.claims.preferred_username;\r\n            account.name = idToken.claims.name;\r\n        }\r\n        return account;\r\n    };\r\n    /**\r\n     * Build ADFS account type\r\n     * @param authority\r\n     * @param idToken\r\n     */\r\n    AccountEntity.createADFSAccount = function (authority, idToken) {\r\n        var account = new AccountEntity();\r\n        account.authorityType = CacheAccountType.ADFS_ACCOUNT_TYPE;\r\n        account.homeAccountId = idToken.claims.sub;\r\n        var reqEnvironment = authority.canonicalAuthorityUrlComponents.HostNameAndPort;\r\n        var env = TrustedAuthority.getCloudDiscoveryMetadata(reqEnvironment) ? TrustedAuthority.getCloudDiscoveryMetadata(reqEnvironment).preferred_cache : \"\";\r\n        if (StringUtils.isEmpty(env)) {\r\n            throw ClientAuthError.createInvalidCacheEnvironmentError();\r\n        }\r\n        account.environment = env;\r\n        account.username = idToken.claims.upn;\r\n        // add uniqueName to claims\r\n        // account.name = idToken.claims.uniqueName;\r\n        return account;\r\n    };\r\n    return AccountEntity;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Interface class which implement cache storage functions used by MSAL to perform validity checks, and store tokens.\r\n */\r\nvar CacheManager = /** @class */ (function () {\r\n    function CacheManager() {\r\n    }\r\n    /**\r\n     * Returns all accounts in cache\r\n     */\r\n    CacheManager.prototype.getAllAccounts = function () {\r\n        var currentAccounts = this.getAccountsFilteredBy();\r\n        var accountValues = Object.keys(currentAccounts).map(function (accountKey) { return currentAccounts[accountKey]; });\r\n        var numAccounts = accountValues.length;\r\n        if (numAccounts < 1) {\r\n            return [];\r\n        }\r\n        else {\r\n            var allAccounts = accountValues.map(function (value) {\r\n                var accountObj = new AccountEntity();\r\n                accountObj = CacheManager.toObject(accountObj, value);\r\n                return accountObj.getAccountInfo();\r\n            });\r\n            return allAccounts;\r\n        }\r\n    };\r\n    /**\r\n     * saves a cache record\r\n     * @param cacheRecord\r\n     */\r\n    CacheManager.prototype.saveCacheRecord = function (cacheRecord) {\r\n        if (!cacheRecord) {\r\n            throw ClientAuthError.createNullOrUndefinedCacheRecord();\r\n        }\r\n        if (!!cacheRecord.account) {\r\n            this.saveAccount(cacheRecord.account);\r\n        }\r\n        if (!!cacheRecord.idToken) {\r\n            this.saveCredential(cacheRecord.idToken);\r\n        }\r\n        if (!!cacheRecord.accessToken) {\r\n            this.saveAccessToken(cacheRecord.accessToken);\r\n        }\r\n        if (!!cacheRecord.refreshToken) {\r\n            this.saveCredential(cacheRecord.refreshToken);\r\n        }\r\n    };\r\n    /**\r\n     * saves account into cache\r\n     * @param account\r\n     */\r\n    CacheManager.prototype.saveAccount = function (account) {\r\n        var key = account.generateAccountKey();\r\n        this.setItem(key, account, CacheSchemaType.ACCOUNT);\r\n    };\r\n    /**\r\n     * saves credential - accessToken, idToken or refreshToken into cache\r\n     * @param credential\r\n     */\r\n    CacheManager.prototype.saveCredential = function (credential) {\r\n        var key = credential.generateCredentialKey();\r\n        this.setItem(key, credential, CacheSchemaType.CREDENTIAL);\r\n    };\r\n    /**\r\n     * saves access token credential\r\n     * @param credential\r\n     */\r\n    CacheManager.prototype.saveAccessToken = function (credential) {\r\n        var _this = this;\r\n        var currentTokenCache = this.getCredentialsFilteredBy({\r\n            clientId: credential.clientId,\r\n            credentialType: CredentialType.ACCESS_TOKEN,\r\n            environment: credential.environment,\r\n            homeAccountId: credential.homeAccountId,\r\n            realm: credential.realm\r\n        });\r\n        var currentScopes = ScopeSet.fromString(credential.target);\r\n        var currentAccessTokens = Object.keys(currentTokenCache.accessTokens).map(function (key) { return currentTokenCache.accessTokens[key]; });\r\n        if (currentAccessTokens) {\r\n            currentAccessTokens.forEach(function (tokenEntity) {\r\n                var tokenScopeSet = ScopeSet.fromString(tokenEntity.target);\r\n                if (tokenScopeSet.intersectingScopeSets(currentScopes)) {\r\n                    _this.removeCredential(tokenEntity);\r\n                }\r\n            });\r\n        }\r\n        this.saveCredential(credential);\r\n    };\r\n    /**\r\n     * Given account key retrieve an account\r\n     * @param key\r\n     */\r\n    CacheManager.prototype.getAccount = function (key) {\r\n        var account = this.getItem(key, CacheSchemaType.ACCOUNT);\r\n        return account;\r\n    };\r\n    /**\r\n     * retrieve a credential - accessToken, idToken or refreshToken; given the cache key\r\n     * @param key\r\n     */\r\n    CacheManager.prototype.getCredential = function (key) {\r\n        return this.getItem(key, CacheSchemaType.CREDENTIAL);\r\n    };\r\n    /**\r\n     * retrieve accounts matching all provided filters; if no filter is set, get all accounts\r\n     * not checking for casing as keys are all generated in lower case, remember to convert to lower case if object properties are compared\r\n     * @param homeAccountId\r\n     * @param environment\r\n     * @param realm\r\n     */\r\n    CacheManager.prototype.getAccountsFilteredBy = function (accountFilter) {\r\n        return this.getAccountsFilteredByInternal(accountFilter ? accountFilter.homeAccountId : \"\", accountFilter ? accountFilter.environment : \"\", accountFilter ? accountFilter.realm : \"\");\r\n    };\r\n    /**\r\n     * retrieve accounts matching all provided filters; if no filter is set, get all accounts\r\n     * not checking for casing as keys are all generated in lower case, remember to convert to lower case if object properties are compared\r\n     * @param homeAccountId\r\n     * @param environment\r\n     * @param realm\r\n     */\r\n    CacheManager.prototype.getAccountsFilteredByInternal = function (homeAccountId, environment, realm) {\r\n        var _this = this;\r\n        var allCacheKeys = this.getKeys();\r\n        var matchingAccounts = {};\r\n        allCacheKeys.forEach(function (cacheKey) {\r\n            var entity = _this.getAccountEntity(cacheKey);\r\n            if (!entity) {\r\n                return null;\r\n            }\r\n            if (!StringUtils.isEmpty(homeAccountId) && !_this.matchHomeAccountId(entity, homeAccountId)) {\r\n                return;\r\n            }\r\n            if (!StringUtils.isEmpty(environment) && !_this.matchEnvironment(entity, environment)) {\r\n                return;\r\n            }\r\n            if (!StringUtils.isEmpty(realm) && !_this.matchRealm(entity, realm)) {\r\n                return;\r\n            }\r\n            matchingAccounts[cacheKey] = entity;\r\n        });\r\n        return matchingAccounts;\r\n    };\r\n    /**\r\n     * retrieve credentails matching all provided filters; if no filter is set, get all credentials\r\n     * @param homeAccountId\r\n     * @param environment\r\n     * @param credentialType\r\n     * @param clientId\r\n     * @param realm\r\n     * @param target\r\n     */\r\n    CacheManager.prototype.getCredentialsFilteredBy = function (filter) {\r\n        return this.getCredentialsFilteredByInternal(filter.homeAccountId, filter.environment, filter.credentialType, filter.clientId, filter.realm, filter.target);\r\n    };\r\n    /**\r\n     * Support function to help match credentials\r\n     * @param homeAccountId\r\n     * @param environment\r\n     * @param credentialType\r\n     * @param clientId\r\n     * @param realm\r\n     * @param target\r\n     */\r\n    CacheManager.prototype.getCredentialsFilteredByInternal = function (homeAccountId, environment, credentialType, clientId, realm, target) {\r\n        var _this = this;\r\n        var allCacheKeys = this.getKeys();\r\n        var matchingCredentials = {\r\n            idTokens: {},\r\n            accessTokens: {},\r\n            refreshTokens: {}\r\n        };\r\n        allCacheKeys.forEach(function (cacheKey) {\r\n            var entity;\r\n            // don't parse any non-credential type cache entities\r\n            var credType = CredentialEntity.getCredentialType(cacheKey);\r\n            if (credType === Constants.NOT_DEFINED) {\r\n                return;\r\n            }\r\n            // Attempt retrieval\r\n            try {\r\n                entity = _this.getItem(cacheKey, CacheSchemaType.CREDENTIAL);\r\n            }\r\n            catch (e) {\r\n                return;\r\n            }\r\n            if (!StringUtils.isEmpty(homeAccountId) && !_this.matchHomeAccountId(entity, homeAccountId)) {\r\n                return;\r\n            }\r\n            if (!StringUtils.isEmpty(environment) && !_this.matchEnvironment(entity, environment)) {\r\n                return;\r\n            }\r\n            if (!StringUtils.isEmpty(realm) && !_this.matchRealm(entity, realm)) {\r\n                return;\r\n            }\r\n            if (!StringUtils.isEmpty(credentialType) && !_this.matchCredentialType(entity, credentialType)) {\r\n                return;\r\n            }\r\n            if (!StringUtils.isEmpty(clientId) && !_this.matchClientId(entity, clientId)) {\r\n                return;\r\n            }\r\n            // idTokens do not have \"target\", target specific refreshTokens do exist for some types of authentication\r\n            // TODO: Add case for target specific refresh tokens\r\n            if (!StringUtils.isEmpty(target) && !_this.matchTarget(entity, target)) {\r\n                return;\r\n            }\r\n            switch (credType) {\r\n                case CredentialType.ID_TOKEN:\r\n                    matchingCredentials.idTokens[cacheKey] = entity;\r\n                    break;\r\n                case CredentialType.ACCESS_TOKEN:\r\n                    matchingCredentials.accessTokens[cacheKey] = entity;\r\n                    break;\r\n                case CredentialType.REFRESH_TOKEN:\r\n                    matchingCredentials.refreshTokens[cacheKey] = entity;\r\n                    break;\r\n            }\r\n        });\r\n        return matchingCredentials;\r\n    };\r\n    /**\r\n     * Removes all app metadata objects from cache.\r\n     */\r\n    CacheManager.prototype.removeAppMetadata = function () {\r\n        var _this = this;\r\n        var allCacheKeys = this.getKeys();\r\n        allCacheKeys.forEach(function (cacheKey) {\r\n            if (_this.isAppMetadata(cacheKey)) {\r\n                _this.removeItem(cacheKey, CacheSchemaType.APP_META_DATA);\r\n            }\r\n        });\r\n        return true;\r\n    };\r\n    /**\r\n     * Removes all accounts and related tokens from cache.\r\n     */\r\n    CacheManager.prototype.removeAllAccounts = function () {\r\n        var _this = this;\r\n        var allCacheKeys = this.getKeys();\r\n        allCacheKeys.forEach(function (cacheKey) {\r\n            var entity = _this.getAccountEntity(cacheKey);\r\n            if (!entity) {\r\n                return;\r\n            }\r\n            _this.removeAccount(cacheKey);\r\n        });\r\n        return true;\r\n    };\r\n    /**\r\n     * returns a boolean if the given account is removed\r\n     * @param account\r\n     */\r\n    CacheManager.prototype.removeAccount = function (accountKey) {\r\n        var account = this.getAccount(accountKey);\r\n        if (!account) {\r\n            throw ClientAuthError.createNoAccountFoundError();\r\n        }\r\n        return (this.removeAccountContext(account) && this.removeItem(accountKey, CacheSchemaType.ACCOUNT));\r\n    };\r\n    /**\r\n     * returns a boolean if the given account is removed\r\n     * @param account\r\n     */\r\n    CacheManager.prototype.removeAccountContext = function (account) {\r\n        var _this = this;\r\n        var allCacheKeys = this.getKeys();\r\n        var accountId = account.generateAccountId();\r\n        allCacheKeys.forEach(function (cacheKey) {\r\n            // don't parse any non-credential type cache entities\r\n            if (CredentialEntity.getCredentialType(cacheKey) === Constants.NOT_DEFINED) {\r\n                return;\r\n            }\r\n            var cacheEntity = _this.getItem(cacheKey, CacheSchemaType.CREDENTIAL);\r\n            if (!!cacheEntity && accountId === cacheEntity.generateAccountId()) {\r\n                _this.removeCredential(cacheEntity);\r\n            }\r\n        });\r\n        return true;\r\n    };\r\n    /**\r\n     * returns a boolean if the given credential is removed\r\n     * @param credential\r\n     */\r\n    CacheManager.prototype.removeCredential = function (credential) {\r\n        var key = credential.generateCredentialKey();\r\n        return this.removeItem(key, CacheSchemaType.CREDENTIAL);\r\n    };\r\n    /**\r\n     *\r\n     * @param value\r\n     * @param homeAccountId\r\n     */\r\n    CacheManager.prototype.matchHomeAccountId = function (entity, homeAccountId) {\r\n        return entity.homeAccountId && homeAccountId === entity.homeAccountId;\r\n    };\r\n    /**\r\n     *\r\n     * @param value\r\n     * @param environment\r\n     */\r\n    CacheManager.prototype.matchEnvironment = function (entity, environment) {\r\n        var cloudMetadata = TrustedAuthority.getCloudDiscoveryMetadata(environment);\r\n        if (cloudMetadata &&\r\n            cloudMetadata.aliases.indexOf(entity.environment) > -1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *\r\n     * @param entity\r\n     * @param credentialType\r\n     */\r\n    CacheManager.prototype.matchCredentialType = function (entity, credentialType) {\r\n        return entity.credentialType && credentialType.toLowerCase() === entity.credentialType.toLowerCase();\r\n    };\r\n    /**\r\n     *\r\n     * @param entity\r\n     * @param clientId\r\n     */\r\n    CacheManager.prototype.matchClientId = function (entity, clientId) {\r\n        return entity.clientId && clientId === entity.clientId;\r\n    };\r\n    /**\r\n     *\r\n     * @param entity\r\n     * @param realm\r\n     */\r\n    CacheManager.prototype.matchRealm = function (entity, realm) {\r\n        return entity.realm && realm === entity.realm;\r\n    };\r\n    /**\r\n     * Returns true if the target scopes are a subset of the current entity's scopes, false otherwise.\r\n     * @param entity\r\n     * @param target\r\n     */\r\n    CacheManager.prototype.matchTarget = function (entity, target) {\r\n        if (entity.credentialType !== CredentialType.ACCESS_TOKEN || StringUtils.isEmpty(entity.target)) {\r\n            return false;\r\n        }\r\n        var entityScopeSet = ScopeSet.fromString(entity.target);\r\n        var requestTargetScopeSet = ScopeSet.fromString(target);\r\n        return entityScopeSet.containsScopeSet(requestTargetScopeSet);\r\n    };\r\n    /**\r\n     * Returns a valid AccountEntity if key and object contain correct values, null otherwise.\r\n     * @param key\r\n     */\r\n    CacheManager.prototype.getAccountEntity = function (key) {\r\n        // don't parse any non-account type cache entities\r\n        if (CredentialEntity.getCredentialType(key) !== Constants.NOT_DEFINED || this.isAppMetadata(key)) {\r\n            return null;\r\n        }\r\n        // Attempt retrieval\r\n        var entity;\r\n        try {\r\n            entity = this.getItem(key, CacheSchemaType.ACCOUNT);\r\n        }\r\n        catch (e) {\r\n            return null;\r\n        }\r\n        // Authority type is required for accounts, return if it is not available (not an account entity)\r\n        if (!entity || StringUtils.isEmpty(entity.authorityType)) {\r\n            return null;\r\n        }\r\n        return entity;\r\n    };\r\n    /**\r\n     * returns if a given cache entity is of the type appmetadata\r\n     * @param key\r\n     */\r\n    CacheManager.prototype.isAppMetadata = function (key) {\r\n        return key.indexOf(APP_META_DATA) !== -1;\r\n    };\r\n    /**\r\n     * Helper to convert serialized data to object\r\n     * @param obj\r\n     * @param json\r\n     */\r\n    CacheManager.toObject = function (obj, json) {\r\n        for (var propertyName in json) {\r\n            obj[propertyName] = json[propertyName];\r\n        }\r\n        return obj;\r\n    };\r\n    return CacheManager;\r\n}());\r\nvar DefaultStorageClass = /** @class */ (function (_super) {\r\n    __extends$1(DefaultStorageClass, _super);\r\n    function DefaultStorageClass() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    DefaultStorageClass.prototype.setItem = function () {\r\n        var notImplErr = \"Storage interface - setItem() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    DefaultStorageClass.prototype.getItem = function () {\r\n        var notImplErr = \"Storage interface - getItem() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    DefaultStorageClass.prototype.removeItem = function () {\r\n        var notImplErr = \"Storage interface - removeItem() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    DefaultStorageClass.prototype.containsKey = function () {\r\n        var notImplErr = \"Storage interface - containsKey() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    DefaultStorageClass.prototype.getKeys = function () {\r\n        var notImplErr = \"Storage interface - getKeys() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    DefaultStorageClass.prototype.clear = function () {\r\n        var notImplErr = \"Storage interface - clear() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    return DefaultStorageClass;\r\n}(CacheManager));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n// Token renewal offset default in seconds\r\nvar DEFAULT_TOKEN_RENEWAL_OFFSET_SEC = 300;\r\nvar DEFAULT_AUTH_OPTIONS = {\r\n    clientId: \"\",\r\n    authority: null,\r\n    knownAuthorities: [],\r\n    cloudDiscoveryMetadata: \"\"\r\n};\r\nvar DEFAULT_SYSTEM_OPTIONS = {\r\n    tokenRenewalOffsetSeconds: DEFAULT_TOKEN_RENEWAL_OFFSET_SEC\r\n};\r\nvar DEFAULT_LOGGER_IMPLEMENTATION = {\r\n    loggerCallback: function () {\r\n        // allow users to not set loggerCallback\r\n    },\r\n    piiLoggingEnabled: false,\r\n    logLevel: LogLevel.Info\r\n};\r\nvar DEFAULT_NETWORK_IMPLEMENTATION = {\r\n    sendGetRequestAsync: function () {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var notImplErr;\r\n            return __generator$1(this, function (_a) {\r\n                notImplErr = \"Network interface - sendGetRequestAsync() has not been implemented\";\r\n                throw AuthError.createUnexpectedError(notImplErr);\r\n            });\r\n        });\r\n    },\r\n    sendPostRequestAsync: function () {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var notImplErr;\r\n            return __generator$1(this, function (_a) {\r\n                notImplErr = \"Network interface - sendPostRequestAsync() has not been implemented\";\r\n                throw AuthError.createUnexpectedError(notImplErr);\r\n            });\r\n        });\r\n    }\r\n};\r\nvar DEFAULT_CRYPTO_IMPLEMENTATION = {\r\n    createNewGuid: function () {\r\n        var notImplErr = \"Crypto interface - createNewGuid() has not been implemented\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    base64Decode: function () {\r\n        var notImplErr = \"Crypto interface - base64Decode() has not been implemented\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    base64Encode: function () {\r\n        var notImplErr = \"Crypto interface - base64Encode() has not been implemented\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    generatePkceCodes: function () {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var notImplErr;\r\n            return __generator$1(this, function (_a) {\r\n                notImplErr = \"Crypto interface - generatePkceCodes() has not been implemented\";\r\n                throw AuthError.createUnexpectedError(notImplErr);\r\n            });\r\n        });\r\n    }\r\n};\r\nvar DEFAULT_LIBRARY_INFO = {\r\n    sku: Constants.SKU,\r\n    version: version,\r\n    cpu: \"\",\r\n    os: \"\"\r\n};\r\nvar DEFAULT_CLIENT_CREDENTIALS = {\r\n    clientSecret: \"\",\r\n    clientAssertion: null\r\n};\r\n/**\r\n * Function that sets the default options when not explicitly configured from app developer\r\n *\r\n * @param Configuration\r\n *\r\n * @returns Configuration\r\n */\r\nfunction buildClientConfiguration(_a) {\r\n    var userAuthOptions = _a.authOptions, userSystemOptions = _a.systemOptions, userLoggerOption = _a.loggerOptions, storageImplementation = _a.storageInterface, networkImplementation = _a.networkInterface, cryptoImplementation = _a.cryptoInterface, clientCredentials = _a.clientCredentials, libraryInfo = _a.libraryInfo, serverTelemetryManager = _a.serverTelemetryManager;\r\n    return {\r\n        authOptions: __assign$1(__assign$1({}, DEFAULT_AUTH_OPTIONS), userAuthOptions),\r\n        systemOptions: __assign$1(__assign$1({}, DEFAULT_SYSTEM_OPTIONS), userSystemOptions),\r\n        loggerOptions: __assign$1(__assign$1({}, DEFAULT_LOGGER_IMPLEMENTATION), userLoggerOption),\r\n        storageInterface: storageImplementation || new DefaultStorageClass(),\r\n        networkInterface: networkImplementation || DEFAULT_NETWORK_IMPLEMENTATION,\r\n        cryptoInterface: cryptoImplementation || DEFAULT_CRYPTO_IMPLEMENTATION,\r\n        clientCredentials: clientCredentials || DEFAULT_CLIENT_CREDENTIALS,\r\n        libraryInfo: __assign$1(__assign$1({}, DEFAULT_LIBRARY_INFO), libraryInfo),\r\n        serverTelemetryManager: serverTelemetryManager || null\r\n    };\r\n}\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Base application class which will construct requests to send to and handle responses from the Microsoft STS using the authorization code flow.\r\n */\r\nvar BaseClient = /** @class */ (function () {\r\n    function BaseClient(configuration) {\r\n        // Set the configuration\r\n        this.config = buildClientConfiguration(configuration);\r\n        // Initialize the logger\r\n        this.logger = new Logger(this.config.loggerOptions);\r\n        // Initialize crypto\r\n        this.cryptoUtils = this.config.cryptoInterface;\r\n        // Initialize storage interface\r\n        this.cacheManager = this.config.storageInterface;\r\n        // Set the network interface\r\n        this.networkClient = this.config.networkInterface;\r\n        // Set TelemetryManager\r\n        this.serverTelemetryManager = this.config.serverTelemetryManager;\r\n        TrustedAuthority.setTrustedAuthoritiesFromConfig(this.config.authOptions.knownAuthorities, this.config.authOptions.cloudDiscoveryMetadata);\r\n        this.authority = this.config.authOptions.authority;\r\n    }\r\n    /**\r\n     * Creates default headers for requests to token endpoint\r\n     */\r\n    BaseClient.prototype.createDefaultTokenRequestHeaders = function () {\r\n        var headers = this.createDefaultLibraryHeaders();\r\n        headers.set(HeaderNames.CONTENT_TYPE, Constants.URL_FORM_CONTENT_TYPE);\r\n        if (this.serverTelemetryManager) {\r\n            headers.set(HeaderNames.X_CLIENT_CURR_TELEM, this.serverTelemetryManager.generateCurrentRequestHeaderValue());\r\n            headers.set(HeaderNames.X_CLIENT_LAST_TELEM, this.serverTelemetryManager.generateLastRequestHeaderValue());\r\n        }\r\n        return headers;\r\n    };\r\n    /**\r\n     * addLibraryData\r\n     */\r\n    BaseClient.prototype.createDefaultLibraryHeaders = function () {\r\n        var headers = new Map();\r\n        // client info headers\r\n        headers.set(\"\" + AADServerParamKeys.X_CLIENT_SKU, this.config.libraryInfo.sku);\r\n        headers.set(\"\" + AADServerParamKeys.X_CLIENT_VER, this.config.libraryInfo.version);\r\n        headers.set(\"\" + AADServerParamKeys.X_CLIENT_OS, this.config.libraryInfo.os);\r\n        headers.set(\"\" + AADServerParamKeys.X_CLIENT_CPU, this.config.libraryInfo.cpu);\r\n        return headers;\r\n    };\r\n    /**\r\n     * Http post to token endpoint\r\n     * @param tokenEndpoint\r\n     * @param queryString\r\n     * @param headers\r\n     */\r\n    BaseClient.prototype.executePostToTokenEndpoint = function (tokenEndpoint, queryString, headers) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var response;\r\n            return __generator$1(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.networkClient.sendPostRequestAsync(tokenEndpoint, {\r\n                            body: queryString,\r\n                            headers: headers,\r\n                        })];\r\n                    case 1:\r\n                        response = _a.sent();\r\n                        if (this.config.serverTelemetryManager && response.status < 500 && response.status !== 429) {\r\n                            // Telemetry data successfully logged by server, clear Telemetry cache\r\n                            this.config.serverTelemetryManager.clearTelemetryCache();\r\n                        }\r\n                        return [2 /*return*/, response];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return BaseClient;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Validates server consumable params from the \"request\" objects\r\n */\r\nvar RequestValidator = /** @class */ (function () {\r\n    function RequestValidator() {\r\n    }\r\n    /**\r\n     * Utility to check if the `redirectUri` in the request is a non-null value\r\n     * @param redirectUri\r\n     */\r\n    RequestValidator.validateRedirectUri = function (redirectUri) {\r\n        if (StringUtils.isEmpty(redirectUri)) {\r\n            throw ClientConfigurationError.createRedirectUriEmptyError();\r\n        }\r\n    };\r\n    /**\r\n     * Utility to validate prompt sent by the user in the request\r\n     * @param prompt\r\n     */\r\n    RequestValidator.validatePrompt = function (prompt) {\r\n        if ([\r\n            PromptValue.LOGIN,\r\n            PromptValue.SELECT_ACCOUNT,\r\n            PromptValue.CONSENT,\r\n            PromptValue.NONE\r\n        ].indexOf(prompt) < 0) {\r\n            throw ClientConfigurationError.createInvalidPromptError(prompt);\r\n        }\r\n    };\r\n    /**\r\n     * Utility to validate code_challenge and code_challenge_method\r\n     * @param codeChallenge\r\n     * @param codeChallengeMethod\r\n     */\r\n    RequestValidator.validateCodeChallengeParams = function (codeChallenge, codeChallengeMethod) {\r\n        if (StringUtils.isEmpty(codeChallenge) || StringUtils.isEmpty(codeChallengeMethod)) {\r\n            throw ClientConfigurationError.createInvalidCodeChallengeParamsError();\r\n        }\r\n        else {\r\n            this.validateCodeChallengeMethod(codeChallengeMethod);\r\n        }\r\n    };\r\n    /**\r\n     * Utility to validate code_challenge_method\r\n     * @param codeChallengeMethod\r\n     */\r\n    RequestValidator.validateCodeChallengeMethod = function (codeChallengeMethod) {\r\n        if ([\r\n            CodeChallengeMethodValues.PLAIN,\r\n            CodeChallengeMethodValues.S256\r\n        ].indexOf(codeChallengeMethod) < 0) {\r\n            throw ClientConfigurationError.createInvalidCodeChallengeMethodError();\r\n        }\r\n    };\r\n    /**\r\n     * Removes unnecessary or duplicate query parameters from extraQueryParameters\r\n     * @param request\r\n     */\r\n    RequestValidator.sanitizeEQParams = function (eQParams, queryParams) {\r\n        if (!eQParams) {\r\n            return null;\r\n        }\r\n        // Remove any query parameters already included in SSO params\r\n        queryParams.forEach(function (value, key) {\r\n            if (eQParams[key]) {\r\n                delete eQParams[key];\r\n            }\r\n        });\r\n        return eQParams;\r\n    };\r\n    return RequestValidator;\r\n}());\n\n/*\r\n* Copyright (c) Microsoft Corporation. All rights reserved.\r\n* Licensed under the MIT License.\r\n*/\r\nvar RequestParameterBuilder = /** @class */ (function () {\r\n    function RequestParameterBuilder() {\r\n        this.parameters = new Map();\r\n    }\r\n    /**\r\n     * add response_type = code\r\n     */\r\n    RequestParameterBuilder.prototype.addResponseTypeCode = function () {\r\n        this.parameters.set(AADServerParamKeys.RESPONSE_TYPE, encodeURIComponent(Constants.CODE_RESPONSE_TYPE));\r\n    };\r\n    /**\r\n     * add response_mode. defaults to query.\r\n     * @param responseMode\r\n     */\r\n    RequestParameterBuilder.prototype.addResponseMode = function (responseMode) {\r\n        this.parameters.set(AADServerParamKeys.RESPONSE_MODE, encodeURIComponent((responseMode) ? responseMode : ResponseMode.QUERY));\r\n    };\r\n    /**\r\n     * add scopes\r\n     * @param scopeSet\r\n     */\r\n    RequestParameterBuilder.prototype.addScopes = function (scopeSet) {\r\n        this.parameters.set(AADServerParamKeys.SCOPE, encodeURIComponent(scopeSet.printScopes()));\r\n    };\r\n    /**\r\n     * add clientId\r\n     * @param clientId\r\n     */\r\n    RequestParameterBuilder.prototype.addClientId = function (clientId) {\r\n        this.parameters.set(AADServerParamKeys.CLIENT_ID, encodeURIComponent(clientId));\r\n    };\r\n    /**\r\n     * add redirect_uri\r\n     * @param redirectUri\r\n     */\r\n    RequestParameterBuilder.prototype.addRedirectUri = function (redirectUri) {\r\n        RequestValidator.validateRedirectUri(redirectUri);\r\n        this.parameters.set(AADServerParamKeys.REDIRECT_URI, encodeURIComponent(redirectUri));\r\n    };\r\n    /**\r\n     * add domain_hint\r\n     * @param domainHint\r\n     */\r\n    RequestParameterBuilder.prototype.addDomainHint = function (domainHint) {\r\n        this.parameters.set(SSOTypes.DOMAIN_HINT, encodeURIComponent(domainHint));\r\n    };\r\n    /**\r\n     * add login_hint\r\n     * @param loginHint\r\n     */\r\n    RequestParameterBuilder.prototype.addLoginHint = function (loginHint) {\r\n        this.parameters.set(SSOTypes.LOGIN_HINT, encodeURIComponent(loginHint));\r\n    };\r\n    /**\r\n     * add sid\r\n     * @param sid\r\n     */\r\n    RequestParameterBuilder.prototype.addSid = function (sid) {\r\n        this.parameters.set(SSOTypes.SID, encodeURIComponent(sid));\r\n    };\r\n    /**\r\n     * add claims\r\n     * @param claims\r\n     */\r\n    RequestParameterBuilder.prototype.addClaims = function (claims) {\r\n        this.parameters.set(AADServerParamKeys.CLAIMS, encodeURIComponent(claims));\r\n    };\r\n    /**\r\n     * add correlationId\r\n     * @param correlationId\r\n     */\r\n    RequestParameterBuilder.prototype.addCorrelationId = function (correlationId) {\r\n        this.parameters.set(AADServerParamKeys.CLIENT_REQUEST_ID, encodeURIComponent(correlationId));\r\n    };\r\n    /**\r\n     * add library info query params\r\n     * @param libraryInfo\r\n     */\r\n    RequestParameterBuilder.prototype.addLibraryInfo = function (libraryInfo) {\r\n        // Telemetry Info\r\n        this.parameters.set(AADServerParamKeys.X_CLIENT_SKU, libraryInfo.sku);\r\n        this.parameters.set(AADServerParamKeys.X_CLIENT_VER, libraryInfo.version);\r\n        this.parameters.set(AADServerParamKeys.X_CLIENT_OS, libraryInfo.os);\r\n        this.parameters.set(AADServerParamKeys.X_CLIENT_CPU, libraryInfo.cpu);\r\n    };\r\n    /**\r\n     * add prompt\r\n     * @param prompt\r\n     */\r\n    RequestParameterBuilder.prototype.addPrompt = function (prompt) {\r\n        RequestValidator.validatePrompt(prompt);\r\n        this.parameters.set(\"\" + AADServerParamKeys.PROMPT, encodeURIComponent(prompt));\r\n    };\r\n    /**\r\n     * add state\r\n     * @param state\r\n     */\r\n    RequestParameterBuilder.prototype.addState = function (state) {\r\n        if (!StringUtils.isEmpty(state)) {\r\n            this.parameters.set(AADServerParamKeys.STATE, encodeURIComponent(state));\r\n        }\r\n    };\r\n    /**\r\n     * add nonce\r\n     * @param nonce\r\n     */\r\n    RequestParameterBuilder.prototype.addNonce = function (nonce) {\r\n        this.parameters.set(AADServerParamKeys.NONCE, encodeURIComponent(nonce));\r\n    };\r\n    /**\r\n     * add code_challenge and code_challenge_method\r\n     * - throw if either of them are not passed\r\n     * @param codeChallenge\r\n     * @param codeChallengeMethod\r\n     */\r\n    RequestParameterBuilder.prototype.addCodeChallengeParams = function (codeChallenge, codeChallengeMethod) {\r\n        RequestValidator.validateCodeChallengeParams(codeChallenge, codeChallengeMethod);\r\n        if (codeChallenge && codeChallengeMethod) {\r\n            this.parameters.set(AADServerParamKeys.CODE_CHALLENGE, encodeURIComponent(codeChallenge));\r\n            this.parameters.set(AADServerParamKeys.CODE_CHALLENGE_METHOD, encodeURIComponent(codeChallengeMethod));\r\n        }\r\n        else {\r\n            throw ClientConfigurationError.createInvalidCodeChallengeParamsError();\r\n        }\r\n    };\r\n    /**\r\n     * add the `authorization_code` passed by the user to exchange for a token\r\n     * @param code\r\n     */\r\n    RequestParameterBuilder.prototype.addAuthorizationCode = function (code) {\r\n        this.parameters.set(AADServerParamKeys.CODE, encodeURIComponent(code));\r\n    };\r\n    /**\r\n     * add the `authorization_code` passed by the user to exchange for a token\r\n     * @param code\r\n     */\r\n    RequestParameterBuilder.prototype.addDeviceCode = function (code) {\r\n        this.parameters.set(AADServerParamKeys.DEVICE_CODE, encodeURIComponent(code));\r\n    };\r\n    /**\r\n     * add the `refreshToken` passed by the user\r\n     * @param refreshToken\r\n     */\r\n    RequestParameterBuilder.prototype.addRefreshToken = function (refreshToken) {\r\n        this.parameters.set(AADServerParamKeys.REFRESH_TOKEN, encodeURIComponent(refreshToken));\r\n    };\r\n    /**\r\n     * add the `code_verifier` passed by the user to exchange for a token\r\n     * @param codeVerifier\r\n     */\r\n    RequestParameterBuilder.prototype.addCodeVerifier = function (codeVerifier) {\r\n        this.parameters.set(AADServerParamKeys.CODE_VERIFIER, encodeURIComponent(codeVerifier));\r\n    };\r\n    /**\r\n     * add client_secret\r\n     * @param clientSecret\r\n     */\r\n    RequestParameterBuilder.prototype.addClientSecret = function (clientSecret) {\r\n        this.parameters.set(AADServerParamKeys.CLIENT_SECRET, encodeURIComponent(clientSecret));\r\n    };\r\n    /**\r\n     * add clientAssertion for confidential client flows\r\n     * @param clientAssertion\r\n     */\r\n    RequestParameterBuilder.prototype.addClientAssertion = function (clientAssertion) {\r\n        this.parameters.set(AADServerParamKeys.CLIENT_ASSERTION, encodeURIComponent(clientAssertion));\r\n    };\r\n    /**\r\n     * add clientAssertionType for confidential client flows\r\n     * @param clientAssertionType\r\n     */\r\n    RequestParameterBuilder.prototype.addClientAssertionType = function (clientAssertionType) {\r\n        this.parameters.set(AADServerParamKeys.CLIENT_ASSERTION_TYPE, encodeURIComponent(clientAssertionType));\r\n    };\r\n    /**\r\n     * add grant type\r\n     * @param grantType\r\n     */\r\n    RequestParameterBuilder.prototype.addGrantType = function (grantType) {\r\n        this.parameters.set(AADServerParamKeys.GRANT_TYPE, encodeURIComponent(grantType));\r\n    };\r\n    /**\r\n     * add client info\r\n     *\r\n     */\r\n    RequestParameterBuilder.prototype.addClientInfo = function () {\r\n        this.parameters.set(ClientInfo, \"1\");\r\n    };\r\n    /**\r\n     * add extraQueryParams\r\n     * @param eQparams\r\n     */\r\n    RequestParameterBuilder.prototype.addExtraQueryParameters = function (eQparams) {\r\n        var _this = this;\r\n        RequestValidator.sanitizeEQParams(eQparams, this.parameters);\r\n        Object.keys(eQparams).forEach(function (key) {\r\n            _this.parameters.set(key, eQparams[key]);\r\n        });\r\n    };\r\n    /**\r\n     * Utility to create a URL from the params map\r\n     */\r\n    RequestParameterBuilder.prototype.createQueryString = function () {\r\n        var queryParameterArray = new Array();\r\n        this.parameters.forEach(function (value, key) {\r\n            queryParameterArray.push(key + \"=\" + value);\r\n        });\r\n        return queryParameterArray.join(\"&\");\r\n    };\r\n    return RequestParameterBuilder;\r\n}());\n\n/**\r\n * Error thrown when there is an error with the server code, for example, unavailability.\r\n */\r\nvar ServerError = /** @class */ (function (_super) {\r\n    __extends$1(ServerError, _super);\r\n    function ServerError(errorCode, errorMessage, subError) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"ServerError\";\r\n        _this.subError = subError;\r\n        Object.setPrototypeOf(_this, ServerError.prototype);\r\n        return _this;\r\n    }\r\n    return ServerError;\r\n}(AuthError));\n\n/**\r\n * Id Token representation class. Parses id token string and generates claims object.\r\n */\r\nvar IdToken = /** @class */ (function () {\r\n    function IdToken(rawIdToken, crypto) {\r\n        if (StringUtils.isEmpty(rawIdToken)) {\r\n            throw ClientAuthError.createIdTokenNullOrEmptyError(rawIdToken);\r\n        }\r\n        this.rawIdToken = rawIdToken;\r\n        this.claims = IdToken.extractIdToken(rawIdToken, crypto);\r\n    }\r\n    /**\r\n     * Extract IdToken by decoding the RAWIdToken\r\n     *\r\n     * @param encodedIdToken\r\n     */\r\n    IdToken.extractIdToken = function (encodedIdToken, crypto) {\r\n        // id token will be decoded to get the username\r\n        var decodedToken = StringUtils.decodeJwt(encodedIdToken);\r\n        if (!decodedToken) {\r\n            return null;\r\n        }\r\n        try {\r\n            var base64IdTokenPayload = decodedToken.JWSPayload;\r\n            // base64Decode() should throw an error if there is an issue\r\n            var base64Decoded = crypto.base64Decode(base64IdTokenPayload);\r\n            return JSON.parse(base64Decoded);\r\n        }\r\n        catch (err) {\r\n            throw ClientAuthError.createIdTokenParsingError(err);\r\n        }\r\n    };\r\n    return IdToken;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Utility class which exposes functions for managing date and time operations.\r\n */\r\nvar TimeUtils = /** @class */ (function () {\r\n    function TimeUtils() {\r\n    }\r\n    /**\r\n     * return the current time in Unix time (seconds).\r\n     */\r\n    TimeUtils.nowSeconds = function () {\r\n        // Date.getTime() returns in milliseconds.\r\n        return Math.round(new Date().getTime() / 1000.0);\r\n    };\r\n    return TimeUtils;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Authority types supported by MSAL.\r\n */\r\nvar AuthorityType;\r\n(function (AuthorityType) {\r\n    AuthorityType[AuthorityType[\"Default\"] = 0] = \"Default\";\r\n    AuthorityType[AuthorityType[\"Adfs\"] = 1] = \"Adfs\";\r\n})(AuthorityType || (AuthorityType = {}));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * ID_TOKEN Cache\r\n *\r\n * Key:Value Schema:\r\n *\r\n * Key Example: uid.utid-login.microsoftonline.com-idtoken-clientId-contoso.com-\r\n *\r\n * Value Schema:\r\n * {\r\n *      homeAccountId: home account identifier for the auth scheme,\r\n *      environment: entity that issued the token, represented as a full host\r\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\r\n *      clientId: client ID of the application\r\n *      secret: Actual credential as a string\r\n *      realm: Full tenant or organizational identifier that the account belongs to\r\n * }\r\n */\r\nvar IdTokenEntity = /** @class */ (function (_super) {\r\n    __extends$1(IdTokenEntity, _super);\r\n    function IdTokenEntity() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Create IdTokenEntity\r\n     * @param homeAccountId\r\n     * @param authenticationResult\r\n     * @param clientId\r\n     * @param authority\r\n     */\r\n    IdTokenEntity.createIdTokenEntity = function (homeAccountId, environment, idToken, clientId, tenantId) {\r\n        var idTokenEntity = new IdTokenEntity();\r\n        idTokenEntity.credentialType = CredentialType.ID_TOKEN;\r\n        idTokenEntity.homeAccountId = homeAccountId;\r\n        idTokenEntity.environment = environment;\r\n        idTokenEntity.clientId = clientId;\r\n        idTokenEntity.secret = idToken;\r\n        idTokenEntity.realm = tenantId;\r\n        return idTokenEntity;\r\n    };\r\n    return IdTokenEntity;\r\n}(CredentialEntity));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * ACCESS_TOKEN Credential Type\r\n *\r\n * Key:Value Schema:\r\n *\r\n * Key Example: uid.utid-login.microsoftonline.com-accesstoken-clientId-contoso.com-user.read\r\n *\r\n * Value Schema:\r\n * {\r\n *      homeAccountId: home account identifier for the auth scheme,\r\n *      environment: entity that issued the token, represented as a full host\r\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\r\n *      clientId: client ID of the application\r\n *      secret: Actual credential as a string\r\n *      familyId: Family ID identifier, usually only used for refresh tokens\r\n *      realm: Full tenant or organizational identifier that the account belongs to\r\n *      target: Permissions that are included in the token, or for refresh tokens, the resource identifier.\r\n *      cachedAt: Absolute device time when entry was created in the cache.\r\n *      expiresOn: Token expiry time, calculated based on current UTC time in seconds. Represented as a string.\r\n *      extendedExpiresOn: Additional extended expiry time until when token is valid in case of server-side outage. Represented as string in UTC seconds.\r\n *      keyId: used for POP and SSH tokenTypes\r\n *      tokenType: Type of the token issued. Usually \"Bearer\"\r\n * }\r\n */\r\nvar AccessTokenEntity = /** @class */ (function (_super) {\r\n    __extends$1(AccessTokenEntity, _super);\r\n    function AccessTokenEntity() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Create AccessTokenEntity\r\n     * @param homeAccountId\r\n     * @param environment\r\n     * @param accessToken\r\n     * @param clientId\r\n     * @param tenantId\r\n     * @param scopes\r\n     * @param expiresOn\r\n     * @param extExpiresOn\r\n     */\r\n    AccessTokenEntity.createAccessTokenEntity = function (homeAccountId, environment, accessToken, clientId, tenantId, scopes, expiresOn, extExpiresOn) {\r\n        var atEntity = new AccessTokenEntity();\r\n        atEntity.homeAccountId = homeAccountId;\r\n        atEntity.credentialType = CredentialType.ACCESS_TOKEN;\r\n        atEntity.secret = accessToken;\r\n        var currentTime = TimeUtils.nowSeconds();\r\n        atEntity.cachedAt = currentTime.toString();\r\n        // Token expiry time.\r\n        // This value should be  calculated based on the current UTC time measured locally and the value  expires_in Represented as a string in JSON.\r\n        atEntity.expiresOn = expiresOn.toString();\r\n        atEntity.extendedExpiresOn = extExpiresOn.toString();\r\n        atEntity.environment = environment;\r\n        atEntity.clientId = clientId;\r\n        atEntity.realm = tenantId;\r\n        atEntity.target = scopes;\r\n        return atEntity;\r\n    };\r\n    return AccessTokenEntity;\r\n}(CredentialEntity));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * REFRESH_TOKEN Cache\r\n *\r\n * Key:Value Schema:\r\n *\r\n * Key Example: uid.utid-login.microsoftonline.com-refreshtoken-clientId--\r\n *\r\n * Value:\r\n * {\r\n *      homeAccountId: home account identifier for the auth scheme,\r\n *      environment: entity that issued the token, represented as a full host\r\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\r\n *      clientId: client ID of the application\r\n *      secret: Actual credential as a string\r\n *      familyId: Family ID identifier, '1' represents Microsoft Family\r\n *      realm: Full tenant or organizational identifier that the account belongs to\r\n *      target: Permissions that are included in the token, or for refresh tokens, the resource identifier.\r\n * }\r\n */\r\nvar RefreshTokenEntity = /** @class */ (function (_super) {\r\n    __extends$1(RefreshTokenEntity, _super);\r\n    function RefreshTokenEntity() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Create RefreshTokenEntity\r\n     * @param homeAccountId\r\n     * @param authenticationResult\r\n     * @param clientId\r\n     * @param authority\r\n     */\r\n    RefreshTokenEntity.createRefreshTokenEntity = function (homeAccountId, environment, refreshToken, clientId, familyId) {\r\n        var rtEntity = new RefreshTokenEntity();\r\n        rtEntity.clientId = clientId;\r\n        rtEntity.credentialType = CredentialType.REFRESH_TOKEN;\r\n        rtEntity.environment = environment;\r\n        rtEntity.homeAccountId = homeAccountId;\r\n        rtEntity.secret = refreshToken;\r\n        if (familyId)\r\n            rtEntity.familyId = familyId;\r\n        return rtEntity;\r\n    };\r\n    return RefreshTokenEntity;\r\n}(CredentialEntity));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * InteractionRequiredAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nvar InteractionRequiredAuthErrorMessage = [\r\n    \"interaction_required\",\r\n    \"consent_required\",\r\n    \"login_required\"\r\n];\r\nvar InteractionRequiredAuthSubErrorMessage = [\r\n    \"message_only\",\r\n    \"additional_action\",\r\n    \"basic_action\",\r\n    \"user_password_expired\",\r\n    \"consent_required\"\r\n];\r\n/**\r\n * Error thrown when user interaction is required at the auth server.\r\n */\r\nvar InteractionRequiredAuthError = /** @class */ (function (_super) {\r\n    __extends$1(InteractionRequiredAuthError, _super);\r\n    function InteractionRequiredAuthError(errorCode, errorMessage, subError) {\r\n        var _this = _super.call(this, errorCode, errorMessage, subError) || this;\r\n        _this.name = \"InteractionRequiredAuthError\";\r\n        Object.setPrototypeOf(_this, InteractionRequiredAuthError.prototype);\r\n        return _this;\r\n    }\r\n    InteractionRequiredAuthError.isInteractionRequiredError = function (errorCode, errorString, subError) {\r\n        var isInteractionRequiredErrorCode = !StringUtils.isEmpty(errorCode) && InteractionRequiredAuthErrorMessage.indexOf(errorCode) > -1;\r\n        var isInteractionRequiredSubError = !StringUtils.isEmpty(subError) && InteractionRequiredAuthSubErrorMessage.indexOf(subError) > -1;\r\n        var isInteractionRequiredErrorDesc = !StringUtils.isEmpty(errorString) && InteractionRequiredAuthErrorMessage.some(function (irErrorCode) {\r\n            return errorString.indexOf(irErrorCode) > -1;\r\n        });\r\n        return isInteractionRequiredErrorCode || isInteractionRequiredErrorDesc || isInteractionRequiredSubError;\r\n    };\r\n    return InteractionRequiredAuthError;\r\n}(ServerError));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar CacheRecord = /** @class */ (function () {\r\n    function CacheRecord(accountEntity, idTokenEntity, accessTokenEntity, refreshTokenEntity) {\r\n        this.account = accountEntity;\r\n        this.idToken = idTokenEntity;\r\n        this.accessToken = accessTokenEntity;\r\n        this.refreshToken = refreshTokenEntity;\r\n    }\r\n    return CacheRecord;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Class which provides helpers for OAuth 2.0 protocol specific values\r\n */\r\nvar ProtocolUtils = /** @class */ (function () {\r\n    function ProtocolUtils() {\r\n    }\r\n    /**\r\n     * Appends user state with random guid, or returns random guid.\r\n     * @param userState\r\n     * @param randomGuid\r\n     */\r\n    ProtocolUtils.setRequestState = function (cryptoObj, userState, meta) {\r\n        var libraryState = ProtocolUtils.generateLibraryState(cryptoObj, meta);\r\n        return !StringUtils.isEmpty(userState) ? \"\" + libraryState + Constants.RESOURCE_DELIM + userState : libraryState;\r\n    };\r\n    /**\r\n     * Generates the state value used by the common library.\r\n     * @param randomGuid\r\n     * @param cryptoObj\r\n     */\r\n    ProtocolUtils.generateLibraryState = function (cryptoObj, meta) {\r\n        if (!cryptoObj) {\r\n            throw ClientAuthError.createNoCryptoObjectError(\"generateLibraryState\");\r\n        }\r\n        // Create a state object containing a unique id and the timestamp of the request creation\r\n        var stateObj = {\r\n            id: cryptoObj.createNewGuid(),\r\n            ts: TimeUtils.nowSeconds()\r\n        };\r\n        if (meta) {\r\n            stateObj.meta = meta;\r\n        }\r\n        var stateString = JSON.stringify(stateObj);\r\n        return cryptoObj.base64Encode(stateString);\r\n    };\r\n    /**\r\n     * Parses the state into the RequestStateObject, which contains the LibraryState info and the state passed by the user.\r\n     * @param state\r\n     * @param cryptoObj\r\n     */\r\n    ProtocolUtils.parseRequestState = function (cryptoObj, state) {\r\n        if (!cryptoObj) {\r\n            throw ClientAuthError.createNoCryptoObjectError(\"parseRequestState\");\r\n        }\r\n        if (StringUtils.isEmpty(state)) {\r\n            throw ClientAuthError.createInvalidStateError(state, \"Null, undefined or empty state\");\r\n        }\r\n        try {\r\n            // Split the state between library state and user passed state and decode them separately\r\n            var splitState = decodeURIComponent(state).split(Constants.RESOURCE_DELIM);\r\n            var libraryState = splitState[0];\r\n            var userState = splitState.length > 1 ? splitState.slice(1).join(Constants.RESOURCE_DELIM) : \"\";\r\n            var libraryStateString = cryptoObj.base64Decode(libraryState);\r\n            var libraryStateObj = JSON.parse(libraryStateString);\r\n            return {\r\n                userRequestState: !StringUtils.isEmpty(userState) ? userState : \"\",\r\n                libraryState: libraryStateObj\r\n            };\r\n        }\r\n        catch (e) {\r\n            throw ClientAuthError.createInvalidStateError(state, e);\r\n        }\r\n    };\r\n    return ProtocolUtils;\r\n}());\n\n/**\r\n * Class that handles response parsing.\r\n */\r\nvar ResponseHandler = /** @class */ (function () {\r\n    function ResponseHandler(clientId, cacheStorage, cryptoObj, logger) {\r\n        this.clientId = clientId;\r\n        this.cacheStorage = cacheStorage;\r\n        this.cryptoObj = cryptoObj;\r\n        this.logger = logger;\r\n    }\r\n    /**\r\n     * Function which validates server authorization code response.\r\n     * @param serverResponseHash\r\n     * @param cachedState\r\n     * @param cryptoObj\r\n     */\r\n    ResponseHandler.prototype.validateServerAuthorizationCodeResponse = function (serverResponseHash, cachedState, cryptoObj) {\r\n        if (decodeURIComponent(serverResponseHash.state) !== decodeURIComponent(cachedState)) {\r\n            throw ClientAuthError.createStateMismatchError();\r\n        }\r\n        // Check for error\r\n        if (serverResponseHash.error || serverResponseHash.error_description || serverResponseHash.suberror) {\r\n            if (InteractionRequiredAuthError.isInteractionRequiredError(serverResponseHash.error, serverResponseHash.error_description, serverResponseHash.suberror)) {\r\n                throw new InteractionRequiredAuthError(serverResponseHash.error, serverResponseHash.error_description, serverResponseHash.suberror);\r\n            }\r\n            throw new ServerError(serverResponseHash.error, serverResponseHash.error_description, serverResponseHash.suberror);\r\n        }\r\n        if (serverResponseHash.client_info) {\r\n            buildClientInfo(serverResponseHash.client_info, cryptoObj);\r\n        }\r\n    };\r\n    /**\r\n     * Function which validates server authorization token response.\r\n     * @param serverResponse\r\n     */\r\n    ResponseHandler.prototype.validateTokenResponse = function (serverResponse) {\r\n        // Check for error\r\n        if (serverResponse.error || serverResponse.error_description || serverResponse.suberror) {\r\n            if (InteractionRequiredAuthError.isInteractionRequiredError(serverResponse.error, serverResponse.error_description, serverResponse.suberror)) {\r\n                throw new InteractionRequiredAuthError(serverResponse.error, serverResponse.error_description, serverResponse.suberror);\r\n            }\r\n            var errString = serverResponse.error_codes + \" - [\" + serverResponse.timestamp + \"]: \" + serverResponse.error_description + \" - Correlation ID: \" + serverResponse.correlation_id + \" - Trace ID: \" + serverResponse.trace_id;\r\n            throw new ServerError(serverResponse.error, errString);\r\n        }\r\n        // generate homeAccountId\r\n        if (serverResponse.client_info) {\r\n            this.clientInfo = buildClientInfo(serverResponse.client_info, this.cryptoObj);\r\n            if (!StringUtils.isEmpty(this.clientInfo.uid) && !StringUtils.isEmpty(this.clientInfo.utid)) {\r\n                this.homeAccountIdentifier = this.clientInfo.uid + \".\" + this.clientInfo.utid;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a constructed token response based on given string. Also manages the cache updates and cleanups.\r\n     * @param serverTokenResponse\r\n     * @param authority\r\n     */\r\n    ResponseHandler.prototype.handleServerTokenResponse = function (serverTokenResponse, authority, cachedNonce, cachedState) {\r\n        // create an idToken object (not entity)\r\n        var idTokenObj = new IdToken(serverTokenResponse.id_token, this.cryptoObj);\r\n        // token nonce check (TODO: Add a warning if no nonce is given?)\r\n        if (!StringUtils.isEmpty(cachedNonce)) {\r\n            if (idTokenObj.claims.nonce !== cachedNonce) {\r\n                throw ClientAuthError.createNonceMismatchError();\r\n            }\r\n        }\r\n        // save the response tokens\r\n        var requestStateObj = null;\r\n        if (!StringUtils.isEmpty(cachedState)) {\r\n            requestStateObj = ProtocolUtils.parseRequestState(this.cryptoObj, cachedState);\r\n        }\r\n        var cacheRecord = this.generateCacheRecord(serverTokenResponse, idTokenObj, authority, requestStateObj && requestStateObj.libraryState);\r\n        this.cacheStorage.saveCacheRecord(cacheRecord);\r\n        return ResponseHandler.generateAuthenticationResult(cacheRecord, idTokenObj, false, requestStateObj);\r\n    };\r\n    /**\r\n     * Generates CacheRecord\r\n     * @param serverTokenResponse\r\n     * @param idTokenObj\r\n     * @param authority\r\n     */\r\n    ResponseHandler.prototype.generateCacheRecord = function (serverTokenResponse, idTokenObj, authority, libraryState) {\r\n        // Account\r\n        var cachedAccount = this.generateAccountEntity(serverTokenResponse, idTokenObj, authority);\r\n        var reqEnvironment = authority.canonicalAuthorityUrlComponents.HostNameAndPort;\r\n        var env = TrustedAuthority.getCloudDiscoveryMetadata(reqEnvironment) ? TrustedAuthority.getCloudDiscoveryMetadata(reqEnvironment).preferred_cache : \"\";\r\n        if (StringUtils.isEmpty(env)) {\r\n            throw ClientAuthError.createInvalidCacheEnvironmentError();\r\n        }\r\n        // IdToken\r\n        var cachedIdToken = null;\r\n        if (!StringUtils.isEmpty(serverTokenResponse.id_token)) {\r\n            cachedIdToken = IdTokenEntity.createIdTokenEntity(this.homeAccountIdentifier, env, serverTokenResponse.id_token, this.clientId, idTokenObj.claims.tid);\r\n        }\r\n        // AccessToken\r\n        var cachedAccessToken = null;\r\n        if (!StringUtils.isEmpty(serverTokenResponse.access_token)) {\r\n            var responseScopes = ScopeSet.fromString(serverTokenResponse.scope);\r\n            // Expiration calculation\r\n            var currentTime = TimeUtils.nowSeconds();\r\n            // If the request timestamp was sent in the library state, use that timestamp to calculate expiration. Otherwise, use current time.\r\n            var timestamp = libraryState ? libraryState.ts : currentTime;\r\n            var tokenExpirationSeconds = timestamp + serverTokenResponse.expires_in;\r\n            var extendedTokenExpirationSeconds = tokenExpirationSeconds + serverTokenResponse.ext_expires_in;\r\n            cachedAccessToken = AccessTokenEntity.createAccessTokenEntity(this.homeAccountIdentifier, env, serverTokenResponse.access_token, this.clientId, idTokenObj.claims.tid, responseScopes.printScopesLowerCase(), tokenExpirationSeconds, extendedTokenExpirationSeconds);\r\n        }\r\n        // refreshToken\r\n        var cachedRefreshToken = null;\r\n        if (!StringUtils.isEmpty(serverTokenResponse.refresh_token)) {\r\n            cachedRefreshToken = RefreshTokenEntity.createRefreshTokenEntity(this.homeAccountIdentifier, env, serverTokenResponse.refresh_token, this.clientId, serverTokenResponse.foci);\r\n        }\r\n        return new CacheRecord(cachedAccount, cachedIdToken, cachedAccessToken, cachedRefreshToken);\r\n    };\r\n    /**\r\n     * Generate Account\r\n     * @param serverTokenResponse\r\n     * @param idToken\r\n     * @param authority\r\n     */\r\n    ResponseHandler.prototype.generateAccountEntity = function (serverTokenResponse, idToken, authority) {\r\n        var authorityType = authority.authorityType;\r\n        if (StringUtils.isEmpty(serverTokenResponse.client_info)) {\r\n            throw ClientAuthError.createClientInfoEmptyError(serverTokenResponse.client_info);\r\n        }\r\n        return (authorityType === AuthorityType.Adfs) ?\r\n            AccountEntity.createADFSAccount(authority, idToken) :\r\n            AccountEntity.createAccount(serverTokenResponse.client_info, authority, idToken, this.cryptoObj);\r\n    };\r\n    /**\r\n     * Creates an @AuthenticationResult from @CacheRecord , @IdToken , and a boolean that states whether or not the result is from cache.\r\n     *\r\n     * Optionally takes a state string that is set as-is in the response.\r\n     *\r\n     * @param cacheRecord\r\n     * @param idTokenObj\r\n     * @param fromTokenCache\r\n     * @param stateString\r\n     */\r\n    ResponseHandler.generateAuthenticationResult = function (cacheRecord, idTokenObj, fromTokenCache, requestState) {\r\n        var accessToken = \"\";\r\n        var responseScopes = [];\r\n        var expiresOn = null;\r\n        var extExpiresOn = null;\r\n        var familyId = null;\r\n        if (cacheRecord.accessToken) {\r\n            accessToken = cacheRecord.accessToken.secret;\r\n            responseScopes = ScopeSet.fromString(cacheRecord.accessToken.target).asArray();\r\n            expiresOn = new Date(Number(cacheRecord.accessToken.expiresOn) * 1000);\r\n            extExpiresOn = new Date(Number(cacheRecord.accessToken.extendedExpiresOn) * 1000);\r\n        }\r\n        if (cacheRecord.refreshToken) {\r\n            familyId = cacheRecord.refreshToken.familyId || null;\r\n        }\r\n        return {\r\n            uniqueId: idTokenObj.claims.oid || idTokenObj.claims.sub,\r\n            tenantId: idTokenObj.claims.tid,\r\n            scopes: responseScopes,\r\n            account: cacheRecord.account.getAccountInfo(),\r\n            idToken: idTokenObj.rawIdToken,\r\n            idTokenClaims: idTokenObj.claims,\r\n            accessToken: accessToken,\r\n            fromCache: fromTokenCache,\r\n            expiresOn: expiresOn,\r\n            extExpiresOn: extExpiresOn,\r\n            familyId: familyId,\r\n            state: requestState ? requestState.userRequestState : \"\"\r\n        };\r\n    };\r\n    return ResponseHandler;\r\n}());\n\n/**\r\n * Url object class which can perform various transformations on url strings.\r\n */\r\nvar UrlString = /** @class */ (function () {\r\n    function UrlString(url) {\r\n        this._urlString = url;\r\n        if (!StringUtils.isEmpty(this._urlString) && StringUtils.isEmpty(this.getHash())) {\r\n            this._urlString = UrlString.canonicalizeUri(url);\r\n        }\r\n        else if (StringUtils.isEmpty(this._urlString)) {\r\n            // Throws error if url is empty\r\n            throw ClientConfigurationError.createUrlEmptyError();\r\n        }\r\n    }\r\n    Object.defineProperty(UrlString.prototype, \"urlString\", {\r\n        get: function () {\r\n            return this._urlString;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Ensure urls are lower case and end with a / character.\r\n     * @param url\r\n     */\r\n    UrlString.canonicalizeUri = function (url) {\r\n        if (url) {\r\n            url = url.toLowerCase();\r\n        }\r\n        if (url && !StringUtils.endsWith(url, \"/\")) {\r\n            url += \"/\";\r\n        }\r\n        return url;\r\n    };\r\n    /**\r\n     * Throws if urlString passed is not a valid authority URI string.\r\n     */\r\n    UrlString.prototype.validateAsUri = function () {\r\n        // Attempts to parse url for uri components\r\n        var components;\r\n        try {\r\n            components = this.getUrlComponents();\r\n        }\r\n        catch (e) {\r\n            throw ClientConfigurationError.createUrlParseError(e);\r\n        }\r\n        // Throw error if URI or path segments are not parseable.\r\n        if (!components.HostNameAndPort || !components.PathSegments || components.PathSegments.length < 1) {\r\n            throw ClientConfigurationError.createUrlParseError(\"Given url string: \" + this.urlString);\r\n        }\r\n        // Throw error if uri is insecure.\r\n        if (!components.Protocol || components.Protocol.toLowerCase() !== \"https:\") {\r\n            throw ClientConfigurationError.createInsecureAuthorityUriError(this.urlString);\r\n        }\r\n    };\r\n    /**\r\n     * Function to remove query string params from url. Returns the new url.\r\n     * @param url\r\n     * @param name\r\n     */\r\n    UrlString.prototype.urlRemoveQueryStringParameter = function (name) {\r\n        var regex = new RegExp(\"(\\\\&\" + name + \"=)[^\\&]+\");\r\n        this._urlString = this.urlString.replace(regex, \"\");\r\n        // name=value&\r\n        regex = new RegExp(\"(\" + name + \"=)[^\\&]+&\");\r\n        this._urlString = this.urlString.replace(regex, \"\");\r\n        // name=value\r\n        regex = new RegExp(\"(\" + name + \"=)[^\\&]+\");\r\n        this._urlString = this.urlString.replace(regex, \"\");\r\n        return this.urlString;\r\n    };\r\n    UrlString.removeHashFromUrl = function (url) {\r\n        return UrlString.canonicalizeUri(url.split(\"#\")[0]);\r\n    };\r\n    /**\r\n     * Given a url like https://a:b/common/d?e=f#g, and a tenantId, returns https://a:b/tenantId/d\r\n     * @param href The url\r\n     * @param tenantId The tenant id to replace\r\n     */\r\n    UrlString.prototype.replaceTenantPath = function (tenantId) {\r\n        var urlObject = this.getUrlComponents();\r\n        var pathArray = urlObject.PathSegments;\r\n        if (tenantId && (pathArray.length !== 0 && (pathArray[0] === AADAuthorityConstants.COMMON || pathArray[0] === AADAuthorityConstants.ORGANIZATIONS))) {\r\n            pathArray[0] = tenantId;\r\n        }\r\n        return UrlString.constructAuthorityUriFromObject(urlObject);\r\n    };\r\n    /**\r\n     * Returns the anchor part(#) of the URL\r\n     */\r\n    UrlString.prototype.getHash = function () {\r\n        var hashIndex1 = this.urlString.indexOf(\"#\");\r\n        var hashIndex2 = this.urlString.indexOf(\"#/\");\r\n        if (hashIndex2 > -1) {\r\n            return this.urlString.substring(hashIndex2 + 2);\r\n        }\r\n        else if (hashIndex1 > -1) {\r\n            return this.urlString.substring(hashIndex1 + 1);\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Parses out the components from a url string.\r\n     * @returns An object with the various components. Please cache this value insted of calling this multiple times on the same url.\r\n     */\r\n    UrlString.prototype.getUrlComponents = function () {\r\n        // https://gist.github.com/curtisz/11139b2cfcaef4a261e0\r\n        var regEx = RegExp(\"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\");\r\n        // If url string does not match regEx, we throw an error\r\n        var match = this.urlString.match(regEx);\r\n        if (!match) {\r\n            throw ClientConfigurationError.createUrlParseError(\"Given url string: \" + this.urlString);\r\n        }\r\n        // Url component object\r\n        var urlComponents = {\r\n            Protocol: match[1],\r\n            HostNameAndPort: match[4],\r\n            AbsolutePath: match[5]\r\n        };\r\n        var pathSegments = urlComponents.AbsolutePath.split(\"/\");\r\n        pathSegments = pathSegments.filter(function (val) { return val && val.length > 0; }); // remove empty elements\r\n        urlComponents.PathSegments = pathSegments;\r\n        return urlComponents;\r\n    };\r\n    UrlString.constructAuthorityUriFromObject = function (urlObject) {\r\n        return new UrlString(urlObject.Protocol + \"//\" + urlObject.HostNameAndPort + \"/\" + urlObject.PathSegments.join(\"/\"));\r\n    };\r\n    /**\r\n     * Returns deserialized portion of URL hash\r\n     */\r\n    UrlString.getDeserializedHash = function (hash) {\r\n        var deserializedHash = StringUtils.queryStringToObject(hash);\r\n        if (!deserializedHash) {\r\n            throw ClientAuthError.createHashNotDeserializedError(JSON.stringify(deserializedHash));\r\n        }\r\n        return deserializedHash;\r\n    };\r\n    /**\r\n     * Check if the hash of the URL string contains known properties\r\n     */\r\n    UrlString.hashContainsKnownProperties = function (url) {\r\n        if (StringUtils.isEmpty(url)) {\r\n            return false;\r\n        }\r\n        var urlString = new UrlString(url);\r\n        var parameters = UrlString.getDeserializedHash(urlString.getHash());\r\n        return !!(parameters.code ||\r\n            parameters.error_description ||\r\n            parameters.error ||\r\n            parameters.state);\r\n    };\r\n    return UrlString;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Oauth2.0 Authorization Code client\r\n */\r\nvar AuthorizationCodeClient = /** @class */ (function (_super) {\r\n    __extends$1(AuthorizationCodeClient, _super);\r\n    function AuthorizationCodeClient(configuration) {\r\n        return _super.call(this, configuration) || this;\r\n    }\r\n    /**\r\n     * Creates the URL of the authorization request letting the user input credentials and consent to the\r\n     * application. The URL target the /authorize endpoint of the authority configured in the\r\n     * application object.\r\n     *\r\n     * Once the user inputs their credentials and consents, the authority will send a response to the redirect URI\r\n     * sent in the request and should contain an authorization code, which can then be used to acquire tokens via\r\n     * acquireToken(AuthorizationCodeRequest)\r\n     * @param request\r\n     */\r\n    AuthorizationCodeClient.prototype.getAuthCodeUrl = function (request) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var queryString;\r\n            return __generator$1(this, function (_a) {\r\n                queryString = this.createAuthCodeUrlQueryString(request);\r\n                return [2 /*return*/, this.authority.authorizationEndpoint + \"?\" + queryString];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * API to acquire a token in exchange of 'authorization_code` acquired by the user in the first leg of the\r\n     * authorization_code_grant\r\n     * @param request\r\n     */\r\n    AuthorizationCodeClient.prototype.acquireToken = function (request, cachedNonce, cachedState) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var response, responseHandler, tokenResponse;\r\n            return __generator$1(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.info(\"in acquireToken call\");\r\n                        // If no code response is given, we cannot acquire a token.\r\n                        if (!request || StringUtils.isEmpty(request.code)) {\r\n                            throw ClientAuthError.createTokenRequestCannotBeMadeError();\r\n                        }\r\n                        return [4 /*yield*/, this.executeTokenRequest(this.authority, request)];\r\n                    case 1:\r\n                        response = _a.sent();\r\n                        responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger);\r\n                        // Validate response. This function throws a server error if an error is returned by the server.\r\n                        responseHandler.validateTokenResponse(response.body);\r\n                        tokenResponse = responseHandler.handleServerTokenResponse(response.body, this.authority, cachedNonce, cachedState);\r\n                        return [2 /*return*/, tokenResponse];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Handles the hash fragment response from public client code request. Returns a code response used by\r\n     * the client to exchange for a token in acquireToken.\r\n     * @param hashFragment\r\n     */\r\n    AuthorizationCodeClient.prototype.handleFragmentResponse = function (hashFragment, cachedState) {\r\n        // Handle responses.\r\n        var responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger);\r\n        // Create UrlString object to remove leading # using getHash()\r\n        var hashUrlString = new UrlString(hashFragment);\r\n        // Deserialize hash fragment response parameters.\r\n        var serverParams = UrlString.getDeserializedHash(hashUrlString.getHash());\r\n        // Get code response\r\n        responseHandler.validateServerAuthorizationCodeResponse(serverParams, cachedState, this.cryptoUtils);\r\n        return serverParams.code;\r\n    };\r\n    /**\r\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\r\n     * Default behaviour is to redirect the user to `window.location.href`.\r\n     * @param authorityUri\r\n     */\r\n    AuthorizationCodeClient.prototype.getLogoutUri = function (logoutRequest) {\r\n        // Throw error if logoutRequest is null/undefined\r\n        if (!logoutRequest) {\r\n            throw ClientConfigurationError.createEmptyLogoutRequestError();\r\n        }\r\n        if (logoutRequest.account) {\r\n            // Clear given account.\r\n            this.cacheManager.removeAccount(AccountEntity.generateAccountCacheKey(logoutRequest.account));\r\n        }\r\n        else {\r\n            // Clear all accounts and tokens\r\n            this.cacheManager.clear();\r\n        }\r\n        // Get postLogoutRedirectUri.\r\n        var postLogoutUriParam = logoutRequest.postLogoutRedirectUri ?\r\n            \"?\" + AADServerParamKeys.POST_LOGOUT_URI + \"=\" + encodeURIComponent(logoutRequest.postLogoutRedirectUri) : \"\";\r\n        var correlationIdParam = logoutRequest.correlationId ?\r\n            \"&\" + AADServerParamKeys.CLIENT_REQUEST_ID + \"=\" + encodeURIComponent(logoutRequest.correlationId) : \"\";\r\n        // Construct logout URI.\r\n        var logoutUri = \"\" + this.authority.endSessionEndpoint + postLogoutUriParam + correlationIdParam;\r\n        return logoutUri;\r\n    };\r\n    /**\r\n     * Executes POST request to token endpoint\r\n     * @param authority\r\n     * @param request\r\n     */\r\n    AuthorizationCodeClient.prototype.executeTokenRequest = function (authority, request) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var requestBody, headers;\r\n            return __generator$1(this, function (_a) {\r\n                requestBody = this.createTokenRequestBody(request);\r\n                headers = this.createDefaultTokenRequestHeaders();\r\n                return [2 /*return*/, this.executePostToTokenEndpoint(authority.tokenEndpoint, requestBody, headers)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Generates a map for all the params to be sent to the service\r\n     * @param request\r\n     */\r\n    AuthorizationCodeClient.prototype.createTokenRequestBody = function (request) {\r\n        var parameterBuilder = new RequestParameterBuilder();\r\n        parameterBuilder.addClientId(this.config.authOptions.clientId);\r\n        // validate the redirectUri (to be a non null value)\r\n        parameterBuilder.addRedirectUri(request.redirectUri);\r\n        var scopeSet = new ScopeSet(request.scopes || []);\r\n        parameterBuilder.addScopes(scopeSet);\r\n        // add code: user set, not validated\r\n        parameterBuilder.addAuthorizationCode(request.code);\r\n        // add code_verifier if passed\r\n        if (request.codeVerifier) {\r\n            parameterBuilder.addCodeVerifier(request.codeVerifier);\r\n        }\r\n        if (this.config.clientCredentials.clientSecret) {\r\n            parameterBuilder.addClientSecret(this.config.clientCredentials.clientSecret);\r\n        }\r\n        if (this.config.clientCredentials.clientAssertion) {\r\n            var clientAssertion = this.config.clientCredentials.clientAssertion;\r\n            parameterBuilder.addClientAssertion(clientAssertion.assertion);\r\n            parameterBuilder.addClientAssertionType(clientAssertion.assertionType);\r\n        }\r\n        parameterBuilder.addGrantType(GrantType.AUTHORIZATION_CODE_GRANT);\r\n        parameterBuilder.addClientInfo();\r\n        var correlationId = request.correlationId || this.config.cryptoInterface.createNewGuid();\r\n        parameterBuilder.addCorrelationId(correlationId);\r\n        return parameterBuilder.createQueryString();\r\n    };\r\n    /**\r\n     * This API validates the `AuthorizationCodeUrlRequest` and creates a URL\r\n     * @param request\r\n     */\r\n    AuthorizationCodeClient.prototype.createAuthCodeUrlQueryString = function (request) {\r\n        var parameterBuilder = new RequestParameterBuilder();\r\n        parameterBuilder.addClientId(this.config.authOptions.clientId);\r\n        var scopeSet = new ScopeSet(request.scopes || []);\r\n        if (request.extraScopesToConsent) {\r\n            scopeSet.appendScopes(request.extraScopesToConsent);\r\n        }\r\n        parameterBuilder.addScopes(scopeSet);\r\n        // validate the redirectUri (to be a non null value)\r\n        parameterBuilder.addRedirectUri(request.redirectUri);\r\n        // generate the correlationId if not set by the user and add\r\n        var correlationId = request.correlationId || this.config.cryptoInterface.createNewGuid();\r\n        parameterBuilder.addCorrelationId(correlationId);\r\n        // add response_mode. If not passed in it defaults to query.\r\n        parameterBuilder.addResponseMode(request.responseMode);\r\n        // add response_type = code\r\n        parameterBuilder.addResponseTypeCode();\r\n        // add library info parameters\r\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\r\n        // add client_info=1\r\n        parameterBuilder.addClientInfo();\r\n        if (request.codeChallenge) {\r\n            parameterBuilder.addCodeChallengeParams(request.codeChallenge, request.codeChallengeMethod);\r\n        }\r\n        if (request.prompt) {\r\n            parameterBuilder.addPrompt(request.prompt);\r\n        }\r\n        if (request.loginHint) {\r\n            parameterBuilder.addLoginHint(request.loginHint);\r\n        }\r\n        if (request.domainHint) {\r\n            parameterBuilder.addDomainHint(request.domainHint);\r\n        }\r\n        if (request.sid) {\r\n            parameterBuilder.addSid(request.sid);\r\n        }\r\n        if (request.nonce) {\r\n            parameterBuilder.addNonce(request.nonce);\r\n        }\r\n        if (request.state) {\r\n            parameterBuilder.addState(request.state);\r\n        }\r\n        if (request.claims) {\r\n            parameterBuilder.addClaims(request.claims);\r\n        }\r\n        if (request.extraQueryParameters) {\r\n            parameterBuilder.addExtraQueryParameters(request.extraQueryParameters);\r\n        }\r\n        return parameterBuilder.createQueryString();\r\n    };\r\n    return AuthorizationCodeClient;\r\n}(BaseClient));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * OAuth2.0 Device code client\r\n */\r\nvar DeviceCodeClient = /** @class */ (function (_super) {\r\n    __extends$1(DeviceCodeClient, _super);\r\n    function DeviceCodeClient(configuration) {\r\n        return _super.call(this, configuration) || this;\r\n    }\r\n    /**\r\n     * Gets device code from device code endpoint, calls back to with device code response, and\r\n     * polls token endpoint to exchange device code for tokens\r\n     * @param request\r\n     */\r\n    DeviceCodeClient.prototype.acquireToken = function (request) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var deviceCodeResponse, response, responseHandler, tokenResponse;\r\n            return __generator$1(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getDeviceCode(request)];\r\n                    case 1:\r\n                        deviceCodeResponse = _a.sent();\r\n                        request.deviceCodeCallback(deviceCodeResponse);\r\n                        return [4 /*yield*/, this.acquireTokenWithDeviceCode(request, deviceCodeResponse)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger);\r\n                        // Validate response. This function throws a server error if an error is returned by the server.\r\n                        responseHandler.validateTokenResponse(response);\r\n                        tokenResponse = responseHandler.handleServerTokenResponse(response, this.authority);\r\n                        return [2 /*return*/, tokenResponse];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates device code request and executes http GET\r\n     * @param request\r\n     */\r\n    DeviceCodeClient.prototype.getDeviceCode = function (request) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var queryString, headers;\r\n            return __generator$1(this, function (_a) {\r\n                queryString = this.createQueryString(request);\r\n                headers = this.createDefaultLibraryHeaders();\r\n                return [2 /*return*/, this.executePostRequestToDeviceCodeEndpoint(this.authority.deviceCodeEndpoint, queryString, headers)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Executes POST request to device code endpoint\r\n     * @param deviceCodeEndpoint\r\n     * @param queryString\r\n     * @param headers\r\n     */\r\n    DeviceCodeClient.prototype.executePostRequestToDeviceCodeEndpoint = function (deviceCodeEndpoint, queryString, headers) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var _a, userCode, deviceCode, verificationUri, expiresIn, interval, message;\r\n            return __generator$1(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.networkClient.sendPostRequestAsync(deviceCodeEndpoint, {\r\n                            body: queryString,\r\n                            headers: headers\r\n                        })];\r\n                    case 1:\r\n                        _a = (_b.sent()).body, userCode = _a.user_code, deviceCode = _a.device_code, verificationUri = _a.verification_uri, expiresIn = _a.expires_in, interval = _a.interval, message = _a.message;\r\n                        return [2 /*return*/, {\r\n                                userCode: userCode,\r\n                                deviceCode: deviceCode,\r\n                                verificationUri: verificationUri,\r\n                                expiresIn: expiresIn,\r\n                                interval: interval,\r\n                                message: message\r\n                            }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Create device code endpoint query parameters and returns string\r\n     */\r\n    DeviceCodeClient.prototype.createQueryString = function (request) {\r\n        var parameterBuilder = new RequestParameterBuilder();\r\n        var scopeSet = new ScopeSet(request.scopes || []);\r\n        parameterBuilder.addScopes(scopeSet);\r\n        parameterBuilder.addClientId(this.config.authOptions.clientId);\r\n        return parameterBuilder.createQueryString();\r\n    };\r\n    /**\r\n     * Creates token request with device code response and polls token endpoint at interval set by the device code\r\n     * response\r\n     * @param request\r\n     * @param deviceCodeResponse\r\n     */\r\n    DeviceCodeClient.prototype.acquireTokenWithDeviceCode = function (request, deviceCodeResponse) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var requestBody, headers, deviceCodeExpirationTime, pollingIntervalMilli;\r\n            var _this = this;\r\n            return __generator$1(this, function (_a) {\r\n                requestBody = this.createTokenRequestBody(request, deviceCodeResponse);\r\n                headers = this.createDefaultTokenRequestHeaders();\r\n                deviceCodeExpirationTime = TimeUtils.nowSeconds() + deviceCodeResponse.expiresIn;\r\n                pollingIntervalMilli = deviceCodeResponse.interval * 1000;\r\n                // Poll token endpoint while (device code is not expired AND operation has not been cancelled by\r\n                // setting CancellationToken.cancel = true). POST request is sent at interval set by pollingIntervalMilli\r\n                return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                        var intervalId = setInterval(function () { return __awaiter$1(_this, void 0, void 0, function () {\r\n                            var response, error_1;\r\n                            return __generator$1(this, function (_a) {\r\n                                switch (_a.label) {\r\n                                    case 0:\r\n                                        _a.trys.push([0, 5, , 6]);\r\n                                        if (!request.cancel) return [3 /*break*/, 1];\r\n                                        this.logger.error(\"Token request cancelled by setting DeviceCodeRequest.cancel = true\");\r\n                                        clearInterval(intervalId);\r\n                                        reject(ClientAuthError.createDeviceCodeCancelledError());\r\n                                        return [3 /*break*/, 4];\r\n                                    case 1:\r\n                                        if (!(TimeUtils.nowSeconds() > deviceCodeExpirationTime)) return [3 /*break*/, 2];\r\n                                        this.logger.error(\"Device code expired. Expiration time of device code was \" + deviceCodeExpirationTime);\r\n                                        clearInterval(intervalId);\r\n                                        reject(ClientAuthError.createDeviceCodeExpiredError());\r\n                                        return [3 /*break*/, 4];\r\n                                    case 2: return [4 /*yield*/, this.executePostToTokenEndpoint(this.authority.tokenEndpoint, requestBody, headers)];\r\n                                    case 3:\r\n                                        response = _a.sent();\r\n                                        if (response.body && response.body.error == Constants.AUTHORIZATION_PENDING) {\r\n                                            // user authorization is pending. Sleep for polling interval and try again\r\n                                            this.logger.info(response.body.error_description);\r\n                                        }\r\n                                        else {\r\n                                            clearInterval(intervalId);\r\n                                            resolve(response.body);\r\n                                        }\r\n                                        _a.label = 4;\r\n                                    case 4: return [3 /*break*/, 6];\r\n                                    case 5:\r\n                                        error_1 = _a.sent();\r\n                                        clearInterval(intervalId);\r\n                                        reject(error_1);\r\n                                        return [3 /*break*/, 6];\r\n                                    case 6: return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); }, pollingIntervalMilli);\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates query parameters and converts to string.\r\n     * @param request\r\n     * @param deviceCodeResponse\r\n     */\r\n    DeviceCodeClient.prototype.createTokenRequestBody = function (request, deviceCodeResponse) {\r\n        var requestParameters = new RequestParameterBuilder();\r\n        var scopeSet = new ScopeSet(request.scopes || []);\r\n        requestParameters.addScopes(scopeSet);\r\n        requestParameters.addClientId(this.config.authOptions.clientId);\r\n        requestParameters.addGrantType(GrantType.DEVICE_CODE_GRANT);\r\n        requestParameters.addDeviceCode(deviceCodeResponse.deviceCode);\r\n        var correlationId = request.correlationId || this.config.cryptoInterface.createNewGuid();\r\n        requestParameters.addCorrelationId(correlationId);\r\n        requestParameters.addClientInfo();\r\n        return requestParameters.createQueryString();\r\n    };\r\n    return DeviceCodeClient;\r\n}(BaseClient));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * OAuth2.0 refresh token client\r\n */\r\nvar RefreshTokenClient = /** @class */ (function (_super) {\r\n    __extends$1(RefreshTokenClient, _super);\r\n    function RefreshTokenClient(configuration) {\r\n        return _super.call(this, configuration) || this;\r\n    }\r\n    RefreshTokenClient.prototype.acquireToken = function (request) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var response, responseHandler, tokenResponse;\r\n            return __generator$1(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.executeTokenRequest(request, this.authority)];\r\n                    case 1:\r\n                        response = _a.sent();\r\n                        responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger);\r\n                        responseHandler.validateTokenResponse(response.body);\r\n                        tokenResponse = responseHandler.handleServerTokenResponse(response.body, this.authority);\r\n                        return [2 /*return*/, tokenResponse];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RefreshTokenClient.prototype.executeTokenRequest = function (request, authority) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var requestBody, headers;\r\n            return __generator$1(this, function (_a) {\r\n                requestBody = this.createTokenRequestBody(request);\r\n                headers = this.createDefaultTokenRequestHeaders();\r\n                return [2 /*return*/, this.executePostToTokenEndpoint(authority.tokenEndpoint, requestBody, headers)];\r\n            });\r\n        });\r\n    };\r\n    RefreshTokenClient.prototype.createTokenRequestBody = function (request) {\r\n        var parameterBuilder = new RequestParameterBuilder();\r\n        parameterBuilder.addClientId(this.config.authOptions.clientId);\r\n        var scopeSet = new ScopeSet(request.scopes || []);\r\n        parameterBuilder.addScopes(scopeSet);\r\n        parameterBuilder.addGrantType(GrantType.REFRESH_TOKEN_GRANT);\r\n        parameterBuilder.addClientInfo();\r\n        var correlationId = request.correlationId || this.config.cryptoInterface.createNewGuid();\r\n        parameterBuilder.addCorrelationId(correlationId);\r\n        parameterBuilder.addRefreshToken(request.refreshToken);\r\n        if (this.config.clientCredentials.clientSecret) {\r\n            parameterBuilder.addClientSecret(this.config.clientCredentials.clientSecret);\r\n        }\r\n        if (this.config.clientCredentials.clientAssertion) {\r\n            var clientAssertion = this.config.clientCredentials.clientAssertion;\r\n            parameterBuilder.addClientAssertion(clientAssertion.assertion);\r\n            parameterBuilder.addClientAssertionType(clientAssertion.assertionType);\r\n        }\r\n        return parameterBuilder.createQueryString();\r\n    };\r\n    return RefreshTokenClient;\r\n}(BaseClient));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar SilentFlowClient = /** @class */ (function (_super) {\r\n    __extends$1(SilentFlowClient, _super);\r\n    function SilentFlowClient(configuration) {\r\n        return _super.call(this, configuration) || this;\r\n    }\r\n    /**\r\n     * Retrieves a token from cache if it is still valid, or uses the cached refresh token to renew\r\n     * the given token and returns the renewed token\r\n     * @param request\r\n     */\r\n    SilentFlowClient.prototype.acquireToken = function (request) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var requestScopes, accountKey, cachedAccount, homeAccountId, environment, cachedAccessToken, cachedRefreshToken, refreshTokenClient, refreshTokenRequest, cachedIdToken, idTokenObj;\r\n            return __generator$1(this, function (_a) {\r\n                // Cannot renew token if no request object is given.\r\n                if (!request) {\r\n                    throw ClientConfigurationError.createEmptyTokenRequestError();\r\n                }\r\n                // We currently do not support silent flow for account === null use cases; This will be revisited for confidential flow usecases\r\n                if (!request.account) {\r\n                    throw ClientAuthError.createNoAccountInSilentRequestError();\r\n                }\r\n                requestScopes = new ScopeSet(request.scopes || []);\r\n                accountKey = AccountEntity.generateAccountCacheKey(request.account);\r\n                cachedAccount = this.cacheManager.getAccount(accountKey);\r\n                homeAccountId = cachedAccount.homeAccountId;\r\n                environment = cachedAccount.environment;\r\n                cachedAccessToken = this.readAccessTokenFromCache(homeAccountId, environment, requestScopes, cachedAccount.realm);\r\n                cachedRefreshToken = this.readRefreshTokenFromCache(homeAccountId, environment);\r\n                // Check if refresh is forced, or if tokens are expired. If neither are true, return a token response with the found token entry.\r\n                if (request.forceRefresh || !cachedAccessToken || this.isTokenExpired(cachedAccessToken.expiresOn)) {\r\n                    // no refresh Token\r\n                    if (!cachedRefreshToken) {\r\n                        throw ClientAuthError.createNoTokensFoundError();\r\n                    }\r\n                    refreshTokenClient = new RefreshTokenClient(this.config);\r\n                    refreshTokenRequest = __assign$1(__assign$1({}, request), { refreshToken: cachedRefreshToken.secret });\r\n                    return [2 /*return*/, refreshTokenClient.acquireToken(refreshTokenRequest)];\r\n                }\r\n                // Return tokens from cache\r\n                this.config.serverTelemetryManager.incrementCacheHits();\r\n                cachedIdToken = this.readIdTokenFromCache(homeAccountId, environment, cachedAccount.realm);\r\n                idTokenObj = new IdToken(cachedIdToken.secret, this.config.cryptoInterface);\r\n                return [2 /*return*/, ResponseHandler.generateAuthenticationResult({\r\n                        account: cachedAccount,\r\n                        accessToken: cachedAccessToken,\r\n                        idToken: cachedIdToken,\r\n                        refreshToken: cachedRefreshToken\r\n                    }, idTokenObj, true)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * fetches idToken from cache if present\r\n     * @param request\r\n     */\r\n    SilentFlowClient.prototype.readIdTokenFromCache = function (homeAccountId, environment, inputRealm) {\r\n        var idTokenKey = CredentialEntity.generateCredentialCacheKey(homeAccountId, environment, CredentialType.ID_TOKEN, this.config.authOptions.clientId, inputRealm);\r\n        return this.cacheManager.getCredential(idTokenKey);\r\n    };\r\n    /**\r\n     * fetches accessToken from cache if present\r\n     * @param request\r\n     * @param scopes\r\n     */\r\n    SilentFlowClient.prototype.readAccessTokenFromCache = function (homeAccountId, environment, scopes, inputRealm) {\r\n        var accessTokenFilter = {\r\n            homeAccountId: homeAccountId,\r\n            environment: environment,\r\n            credentialType: CredentialType.ACCESS_TOKEN,\r\n            clientId: this.config.authOptions.clientId,\r\n            realm: inputRealm,\r\n            target: scopes.printScopesLowerCase()\r\n        };\r\n        var credentialCache = this.cacheManager.getCredentialsFilteredBy(accessTokenFilter);\r\n        var accessTokens = Object.keys(credentialCache.accessTokens).map(function (key) { return credentialCache.accessTokens[key]; });\r\n        if (accessTokens.length > 1) ;\r\n        else if (accessTokens.length < 1) {\r\n            return null;\r\n        }\r\n        return accessTokens[0];\r\n    };\r\n    /**\r\n     * fetches refreshToken from cache if present\r\n     * @param request\r\n     */\r\n    SilentFlowClient.prototype.readRefreshTokenFromCache = function (homeAccountId, environment) {\r\n        var refreshTokenKey = CredentialEntity.generateCredentialCacheKey(homeAccountId, environment, CredentialType.REFRESH_TOKEN, this.config.authOptions.clientId);\r\n        return this.cacheManager.getCredential(refreshTokenKey);\r\n    };\r\n    /**\r\n     * check if a token is expired based on given UTC time in seconds.\r\n     * @param expiresOn\r\n     */\r\n    SilentFlowClient.prototype.isTokenExpired = function (expiresOn) {\r\n        // check for access token expiry\r\n        var expirationSec = Number(expiresOn) || 0;\r\n        var offsetCurrentTimeSec = TimeUtils.nowSeconds() + this.config.systemOptions.tokenRenewalOffsetSeconds;\r\n        // If current time + offset is greater than token expiration time, then token is expired.\r\n        return (offsetCurrentTimeSec > expirationSec);\r\n    };\r\n    return SilentFlowClient;\r\n}(BaseClient));\n\n/**\r\n * The authority class validates the authority URIs used by the user, and retrieves the OpenID Configuration Data from the\r\n * endpoint. It will store the pertinent config data in this object for use during token calls.\r\n */\r\nvar Authority = /** @class */ (function () {\r\n    function Authority(authority, networkInterface) {\r\n        this.canonicalAuthority = authority;\r\n        this._canonicalAuthority.validateAsUri();\r\n        this.networkInterface = networkInterface;\r\n    }\r\n    Object.defineProperty(Authority.prototype, \"authorityType\", {\r\n        // See above for AuthorityType\r\n        get: function () {\r\n            var pathSegments = this.canonicalAuthorityUrlComponents.PathSegments;\r\n            if (pathSegments.length && pathSegments[0].toLowerCase() === Constants.ADFS) {\r\n                return AuthorityType.Adfs;\r\n            }\r\n            return AuthorityType.Default;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"canonicalAuthority\", {\r\n        /**\r\n         * A URL that is the authority set by the developer\r\n         */\r\n        get: function () {\r\n            return this._canonicalAuthority.urlString;\r\n        },\r\n        /**\r\n         * Sets canonical authority.\r\n         */\r\n        set: function (url) {\r\n            this._canonicalAuthority = new UrlString(url);\r\n            this._canonicalAuthority.validateAsUri();\r\n            this._canonicalAuthorityUrlComponents = null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"canonicalAuthorityUrlComponents\", {\r\n        /**\r\n         * Get authority components.\r\n         */\r\n        get: function () {\r\n            if (!this._canonicalAuthorityUrlComponents) {\r\n                this._canonicalAuthorityUrlComponents = this._canonicalAuthority.getUrlComponents();\r\n            }\r\n            return this._canonicalAuthorityUrlComponents;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"tenant\", {\r\n        /**\r\n         * Get tenant for authority.\r\n         */\r\n        get: function () {\r\n            return this.canonicalAuthorityUrlComponents.PathSegments[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"authorizationEndpoint\", {\r\n        /**\r\n         * OAuth /authorize endpoint for requests\r\n         */\r\n        get: function () {\r\n            if (this.discoveryComplete()) {\r\n                return this.replaceTenant(this.tenantDiscoveryResponse.authorization_endpoint);\r\n            }\r\n            else {\r\n                throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"tokenEndpoint\", {\r\n        /**\r\n         * OAuth /token endpoint for requests\r\n         */\r\n        get: function () {\r\n            if (this.discoveryComplete()) {\r\n                return this.replaceTenant(this.tenantDiscoveryResponse.token_endpoint);\r\n            }\r\n            else {\r\n                throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"deviceCodeEndpoint\", {\r\n        get: function () {\r\n            if (this.discoveryComplete()) {\r\n                return this.tenantDiscoveryResponse.token_endpoint.replace(\"/token\", \"/devicecode\");\r\n            }\r\n            else {\r\n                throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"endSessionEndpoint\", {\r\n        /**\r\n         * OAuth logout endpoint for requests\r\n         */\r\n        get: function () {\r\n            if (this.discoveryComplete()) {\r\n                return this.replaceTenant(this.tenantDiscoveryResponse.end_session_endpoint);\r\n            }\r\n            else {\r\n                throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"selfSignedJwtAudience\", {\r\n        /**\r\n         * OAuth issuer for requests\r\n         */\r\n        get: function () {\r\n            if (this.discoveryComplete()) {\r\n                return this.replaceTenant(this.tenantDiscoveryResponse.issuer);\r\n            }\r\n            else {\r\n                throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Replaces tenant in url path with current tenant. Defaults to common.\r\n     * @param urlString\r\n     */\r\n    Authority.prototype.replaceTenant = function (urlString) {\r\n        return urlString.replace(/{tenant}|{tenantid}/g, this.tenant);\r\n    };\r\n    Object.defineProperty(Authority.prototype, \"defaultOpenIdConfigurationEndpoint\", {\r\n        /**\r\n         * The default open id configuration endpoint for any canonical authority.\r\n         */\r\n        get: function () {\r\n            if (this.authorityType === AuthorityType.Adfs) {\r\n                return this.canonicalAuthority + \".well-known/openid-configuration\";\r\n            }\r\n            return this.canonicalAuthority + \"v2.0/.well-known/openid-configuration\";\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Boolean that returns whethr or not tenant discovery has been completed.\r\n     */\r\n    Authority.prototype.discoveryComplete = function () {\r\n        return !!this.tenantDiscoveryResponse;\r\n    };\r\n    /**\r\n     * Gets OAuth endpoints from the given OpenID configuration endpoint.\r\n     * @param openIdConfigurationEndpoint\r\n     */\r\n    Authority.prototype.discoverEndpoints = function (openIdConfigurationEndpoint) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            return __generator$1(this, function (_a) {\r\n                return [2 /*return*/, this.networkInterface.sendGetRequestAsync(openIdConfigurationEndpoint)];\r\n            });\r\n        });\r\n    };\r\n    Object.defineProperty(Authority.prototype, \"aadInstanceDiscoveryEndpointUrl\", {\r\n        // Default AAD Instance Discovery Endpoint\r\n        get: function () {\r\n            return \"\" + Constants.AAD_INSTANCE_DISCOVERY_ENDPT + this.canonicalAuthority + \"oauth2/v2.0/authorize\";\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Authority.prototype.validateAndSetPreferredNetwork = function () {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var host, preferredNetwork;\r\n            return __generator$1(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        host = this.canonicalAuthorityUrlComponents.HostNameAndPort;\r\n                        if (!(TrustedAuthority.getTrustedHostList().length === 0)) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, TrustedAuthority.setTrustedAuthoritiesFromNetwork(this._canonicalAuthority, this.networkInterface)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        if (!TrustedAuthority.IsInTrustedHostList(host)) {\r\n                            throw ClientConfigurationError.createUntrustedAuthorityError();\r\n                        }\r\n                        preferredNetwork = TrustedAuthority.getCloudDiscoveryMetadata(host).preferred_network;\r\n                        if (host !== preferredNetwork) {\r\n                            this.canonicalAuthority = this.canonicalAuthority.replace(host, preferredNetwork);\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Perform endpoint discovery to discover the /authorize, /token and logout endpoints.\r\n     */\r\n    Authority.prototype.resolveEndpointsAsync = function () {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var openIdConfigEndpoint, response;\r\n            return __generator$1(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.validateAndSetPreferredNetwork()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        openIdConfigEndpoint = this.defaultOpenIdConfigurationEndpoint;\r\n                        return [4 /*yield*/, this.discoverEndpoints(openIdConfigEndpoint)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        this.tenantDiscoveryResponse = response.body;\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return Authority;\r\n}());\n\nvar AuthorityFactory = /** @class */ (function () {\r\n    function AuthorityFactory() {\r\n    }\r\n    /**\r\n     * Create an authority object of the correct type based on the url\r\n     * Performs basic authority validation - checks to see if the authority is of a valid type (i.e. aad, b2c, adfs)\r\n     *\r\n     * Also performs endpoint discovery.\r\n     *\r\n     * @param authorityUri\r\n     * @param networkClient\r\n     */\r\n    AuthorityFactory.createDiscoveredInstance = function (authorityUri, networkClient) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var acquireTokenAuthority, e_1;\r\n            return __generator$1(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        acquireTokenAuthority = AuthorityFactory.createInstance(authorityUri, networkClient);\r\n                        if (acquireTokenAuthority.discoveryComplete()) {\r\n                            return [2 /*return*/, acquireTokenAuthority];\r\n                        }\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, acquireTokenAuthority.resolveEndpointsAsync()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/, acquireTokenAuthority];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        throw ClientAuthError.createEndpointDiscoveryIncompleteError(e_1);\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Create an authority object of the correct type based on the url\r\n     * Performs basic authority validation - checks to see if the authority is of a valid type (i.e. aad, b2c, adfs)\r\n     *\r\n     * Does not perform endpoint discovery.\r\n     *\r\n     * @param authorityUrl\r\n     * @param networkInterface\r\n     */\r\n    AuthorityFactory.createInstance = function (authorityUrl, networkInterface) {\r\n        // Throw error if authority url is empty\r\n        if (StringUtils.isEmpty(authorityUrl)) {\r\n            throw ClientConfigurationError.createUrlEmptyError();\r\n        }\r\n        return new Authority(authorityUrl, networkInterface);\r\n    };\r\n    return AuthorityFactory;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar ServerTelemetryManager = /** @class */ (function () {\r\n    function ServerTelemetryManager(telemetryRequest, cacheManager) {\r\n        this.cacheManager = cacheManager;\r\n        this.apiId = telemetryRequest.apiId;\r\n        this.correlationId = telemetryRequest.correlationId;\r\n        this.forceRefresh = telemetryRequest.forceRefresh || false;\r\n        this.telemetryCacheKey = SERVER_TELEM_CONSTANTS.CACHE_KEY + Separators.CACHE_KEY_SEPARATOR + telemetryRequest.clientId;\r\n    }\r\n    // API to add MSER Telemetry to request\r\n    ServerTelemetryManager.prototype.generateCurrentRequestHeaderValue = function () {\r\n        var forceRefreshInt = this.forceRefresh ? 1 : 0;\r\n        var request = \"\" + this.apiId + SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR + forceRefreshInt;\r\n        var platformFields = \"\"; // TODO: Determine what we want to include\r\n        return [SERVER_TELEM_CONSTANTS.SCHEMA_VERSION, request, platformFields].join(SERVER_TELEM_CONSTANTS.CATEGORY_SEPARATOR);\r\n    };\r\n    // API to add MSER Telemetry for the last failed request\r\n    ServerTelemetryManager.prototype.generateLastRequestHeaderValue = function () {\r\n        var lastRequests = this.getLastRequests();\r\n        var failedRequests = lastRequests.failedRequests.join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\r\n        var errors = lastRequests.errors.join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\r\n        var platformFields = lastRequests.errorCount;\r\n        return [SERVER_TELEM_CONSTANTS.SCHEMA_VERSION, lastRequests.cacheHits, failedRequests, errors, platformFields].join(SERVER_TELEM_CONSTANTS.CATEGORY_SEPARATOR);\r\n    };\r\n    // API to cache token failures for MSER data capture\r\n    ServerTelemetryManager.prototype.cacheFailedRequest = function (error) {\r\n        var lastRequests = this.getLastRequests();\r\n        lastRequests.failedRequests.push(this.apiId, this.correlationId);\r\n        lastRequests.errors.push(error.errorCode);\r\n        lastRequests.errorCount += 1;\r\n        if (lastRequests.errors.length > SERVER_TELEM_CONSTANTS.FAILURE_LIMIT) {\r\n            // Prevent request headers from becoming too large due to excessive failures\r\n            lastRequests.failedRequests.shift(); // Remove apiId\r\n            lastRequests.failedRequests.shift(); // Remove correlationId\r\n            lastRequests.errors.shift();\r\n        }\r\n        this.cacheManager.setItem(this.telemetryCacheKey, lastRequests, CacheSchemaType.TELEMETRY);\r\n        return;\r\n    };\r\n    ServerTelemetryManager.prototype.incrementCacheHits = function () {\r\n        var lastRequests = this.getLastRequests();\r\n        lastRequests.cacheHits += 1;\r\n        this.cacheManager.setItem(this.telemetryCacheKey, lastRequests, CacheSchemaType.TELEMETRY);\r\n        return lastRequests.cacheHits;\r\n    };\r\n    ServerTelemetryManager.prototype.getLastRequests = function () {\r\n        var initialValue = {\r\n            failedRequests: [],\r\n            errors: [],\r\n            errorCount: 0,\r\n            cacheHits: 0\r\n        };\r\n        var lastRequests = this.cacheManager.getItem(this.telemetryCacheKey, CacheSchemaType.TELEMETRY);\r\n        return lastRequests || initialValue;\r\n    };\r\n    ServerTelemetryManager.prototype.clearTelemetryCache = function () {\r\n        this.cacheManager.removeItem(this.telemetryCacheKey);\r\n    };\r\n    return ServerTelemetryManager;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Constants\r\n */\r\nvar BrowserConstants = {\r\n    // Local storage constant string\r\n    CACHE_LOCATION_LOCAL: \"localStorage\",\r\n    // Session storage constant string\r\n    CACHE_LOCATION_SESSION: \"sessionStorage\",\r\n    // Interaction status key (only used for browsers)\r\n    INTERACTION_STATUS_KEY: \"interaction.status\",\r\n    // Interaction in progress cache value\r\n    INTERACTION_IN_PROGRESS_VALUE: \"interaction_in_progress\",\r\n    // Invalid grant error code\r\n    INVALID_GRANT_ERROR: \"invalid_grant\",\r\n    // Default popup window width\r\n    POPUP_WIDTH: 483,\r\n    // Default popup window height\r\n    POPUP_HEIGHT: 600,\r\n    // Default popup monitor poll interval in milliseconds\r\n    POLL_INTERVAL_MS: 50,\r\n    // msal-browser SKU\r\n    MSAL_SKU: \"msal.js.browser\",\r\n};\r\n/**\r\n * HTTP Request types supported by MSAL.\r\n */\r\nvar HTTP_REQUEST_TYPE;\r\n(function (HTTP_REQUEST_TYPE) {\r\n    HTTP_REQUEST_TYPE[\"GET\"] = \"GET\";\r\n    HTTP_REQUEST_TYPE[\"POST\"] = \"POST\";\r\n})(HTTP_REQUEST_TYPE || (HTTP_REQUEST_TYPE = {}));\r\n/**\r\n * Temporary cache keys for MSAL, deleted after any request.\r\n */\r\nvar TemporaryCacheKeys;\r\n(function (TemporaryCacheKeys) {\r\n    TemporaryCacheKeys[\"AUTHORITY\"] = \"authority\";\r\n    TemporaryCacheKeys[\"ACQUIRE_TOKEN_ACCOUNT\"] = \"acquireToken.account\";\r\n    TemporaryCacheKeys[\"SESSION_STATE\"] = \"session.state\";\r\n    TemporaryCacheKeys[\"REQUEST_STATE\"] = \"request.state\";\r\n    TemporaryCacheKeys[\"NONCE_IDTOKEN\"] = \"nonce.id_token\";\r\n    TemporaryCacheKeys[\"ORIGIN_URI\"] = \"request.origin\";\r\n    TemporaryCacheKeys[\"RENEW_STATUS\"] = \"token.renew.status\";\r\n    TemporaryCacheKeys[\"URL_HASH\"] = \"urlHash\";\r\n    TemporaryCacheKeys[\"REQUEST_PARAMS\"] = \"request.params\";\r\n    TemporaryCacheKeys[\"SCOPES\"] = \"scopes\";\r\n})(TemporaryCacheKeys || (TemporaryCacheKeys = {}));\r\n/**\r\n * API Codes for Telemetry purposes.\r\n * Before adding a new code you must claim it in the MSAL Telemetry tracker as these number spaces are shared across all MSALs\r\n * 0-99 Silent Flow\r\n * 800-899 Auth Code Flow\r\n */\r\nvar ApiId;\r\n(function (ApiId) {\r\n    ApiId[ApiId[\"acquireTokenRedirect\"] = 861] = \"acquireTokenRedirect\";\r\n    ApiId[ApiId[\"acquireTokenPopup\"] = 862] = \"acquireTokenPopup\";\r\n    ApiId[ApiId[\"ssoSilent\"] = 863] = \"ssoSilent\";\r\n    ApiId[ApiId[\"acquireTokenSilent_authCode\"] = 864] = \"acquireTokenSilent_authCode\";\r\n    ApiId[ApiId[\"handleRedirectPromise\"] = 865] = \"handleRedirectPromise\";\r\n    ApiId[ApiId[\"acquireTokenSilent_silentFlow\"] = 61] = \"acquireTokenSilent_silentFlow\";\r\n})(ApiId || (ApiId = {}));\r\n/*\r\n * Interaction type of the API - used for state and telemetry\r\n */\r\nvar InteractionType;\r\n(function (InteractionType) {\r\n    InteractionType[\"REDIRECT\"] = \"redirect\";\r\n    InteractionType[\"POPUP\"] = \"popup\";\r\n    InteractionType[\"SILENT\"] = \"silent\";\r\n})(InteractionType || (InteractionType = {}));\r\nvar DEFAULT_REQUEST = {\r\n    scopes: [Constants.OPENID_SCOPE, Constants.PROFILE_SCOPE]\r\n};\n\n/**\r\n * This class implements the Fetch API for GET and POST requests. See more here: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\r\n */\r\nvar FetchClient = /** @class */ (function () {\r\n    function FetchClient() {\r\n    }\r\n    /**\r\n     * Fetch Client for REST endpoints - Get request\r\n     * @param url\r\n     * @param headers\r\n     * @param body\r\n     */\r\n    FetchClient.prototype.sendGetRequestAsync = function (url, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, fetch(url, {\r\n                            method: HTTP_REQUEST_TYPE.GET,\r\n                            headers: this.getFetchHeaders(options)\r\n                        })];\r\n                    case 1:\r\n                        response = _b.sent();\r\n                        _a = {\r\n                            headers: this.getHeaderMap(response.headers)\r\n                        };\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 2: return [2 /*return*/, (_a.body = (_b.sent()),\r\n                            _a.status = response.status,\r\n                            _a)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Fetch Client for REST endpoints - Post request\r\n     * @param url\r\n     * @param headers\r\n     * @param body\r\n     */\r\n    FetchClient.prototype.sendPostRequestAsync = function (url, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var reqBody, response, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        reqBody = (options && options.body) || \"\";\r\n                        return [4 /*yield*/, fetch(url, {\r\n                                method: HTTP_REQUEST_TYPE.POST,\r\n                                headers: this.getFetchHeaders(options),\r\n                                body: reqBody\r\n                            })];\r\n                    case 1:\r\n                        response = _b.sent();\r\n                        _a = {\r\n                            headers: this.getHeaderMap(response.headers)\r\n                        };\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 2: return [2 /*return*/, (_a.body = (_b.sent()),\r\n                            _a.status = response.status,\r\n                            _a)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Get Fetch API Headers object from string map\r\n     * @param inputHeaders\r\n     */\r\n    FetchClient.prototype.getFetchHeaders = function (options) {\r\n        var headers = new Headers();\r\n        if (!(options && options.headers)) {\r\n            return headers;\r\n        }\r\n        options.headers.forEach(function (value, key) {\r\n            headers.append(key, value);\r\n        });\r\n        return headers;\r\n    };\r\n    FetchClient.prototype.getHeaderMap = function (headers) {\r\n        var headerMap = new Map();\r\n        headers.forEach(function (value, key) {\r\n            headerMap.set(key, value);\r\n        });\r\n        return headerMap;\r\n    };\r\n    return FetchClient;\r\n}());\n\n/**\r\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nvar BrowserAuthErrorMessage = {\r\n    noWindowObjectError: {\r\n        code: \"no_window_object\",\r\n        desc: \"No window object detected.\"\r\n    },\r\n    pkceNotGenerated: {\r\n        code: \"pkce_not_created\",\r\n        desc: \"The PKCE code challenge and verifier could not be generated.\"\r\n    },\r\n    cryptoDoesNotExist: {\r\n        code: \"crypto_nonexistent\",\r\n        desc: \"The crypto object or function is not available.\"\r\n    },\r\n    httpMethodNotImplementedError: {\r\n        code: \"http_method_not_implemented\",\r\n        desc: \"The HTTP method given has not been implemented in this library.\"\r\n    },\r\n    emptyNavigateUriError: {\r\n        code: \"empty_navigate_uri\",\r\n        desc: \"Navigation URI is empty. Please check stack trace for more info.\"\r\n    },\r\n    hashEmptyError: {\r\n        code: \"hash_empty_error\",\r\n        desc: \"Hash value cannot be processed because it is empty.\"\r\n    },\r\n    interactionInProgress: {\r\n        code: \"interaction_in_progress\",\r\n        desc: \"Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.\"\r\n    },\r\n    popUpWindowError: {\r\n        code: \"popup_window_error\",\r\n        desc: \"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.\"\r\n    },\r\n    emptyWindowError: {\r\n        code: \"empty_window_error\",\r\n        desc: \"window.open returned null or undefined window object.\"\r\n    },\r\n    userCancelledError: {\r\n        code: \"user_cancelled\",\r\n        desc: \"User cancelled the flow.\"\r\n    },\r\n    monitorWindowTimeoutError: {\r\n        code: \"monitor_window_timeout\",\r\n        desc: \"Token acquisition in popup failed due to timeout.\"\r\n    },\r\n    redirectInIframeError: {\r\n        code: \"redirect_in_iframe\",\r\n        desc: \"Code flow is not supported inside an iframe. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.\"\r\n    },\r\n    blockTokenRequestsInHiddenIframeError: {\r\n        code: \"block_iframe_reload\",\r\n        desc: \"Request was blocked inside an iframe because MSAL detected an authentication response. Please ensure monitorWindowForHash was called.\"\r\n    },\r\n    iframeClosedPrematurelyError: {\r\n        code: \"iframe_closed_prematurely\",\r\n        desc: \"The iframe being monitored was closed prematurely.\"\r\n    },\r\n    silentSSOInsufficientInfoError: {\r\n        code: \"silent_sso_error\",\r\n        desc: \"Silent SSO could not be completed - insufficient information was provided. Please provide either a loginHint or sid.\"\r\n    },\r\n    silentPromptValueError: {\r\n        code: \"silent_prompt_value_error\",\r\n        desc: \"The value given for the prompt value is not valid for silent requests - must be set to 'none'.\"\r\n    },\r\n    tokenRequestCacheError: {\r\n        code: \"token_request_cache_error\",\r\n        desc: \"The token request could not be fetched from the cache correctly.\"\r\n    },\r\n    invalidCacheType: {\r\n        code: \"invalid_cache_type\",\r\n        desc: \"Invalid cache type\"\r\n    }\r\n};\r\n/**\r\n * Browser library error class thrown by the MSAL.js library for SPAs\r\n */\r\nvar BrowserAuthError = /** @class */ (function (_super) {\r\n    __extends(BrowserAuthError, _super);\r\n    function BrowserAuthError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        Object.setPrototypeOf(_this, BrowserAuthError.prototype);\r\n        _this.name = \"BrowserAuthError\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates error thrown when no window object can be found.\r\n     */\r\n    BrowserAuthError.createNoWindowObjectError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.noWindowObjectError.code, BrowserAuthErrorMessage.noWindowObjectError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when PKCE is not implemented.\r\n     * @param errDetail\r\n     */\r\n    BrowserAuthError.createPkceNotGeneratedError = function (errDetail) {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.pkceNotGenerated.code, BrowserAuthErrorMessage.pkceNotGenerated.desc + \" Detail:\" + errDetail);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the crypto object is unavailable.\r\n     * @param errDetail\r\n     */\r\n    BrowserAuthError.createCryptoNotAvailableError = function (errDetail) {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.cryptoDoesNotExist.code, BrowserAuthErrorMessage.cryptoDoesNotExist.desc + \" Detail:\" + errDetail);\r\n    };\r\n    /**\r\n     * Creates an error thrown when an HTTP method hasn't been implemented by the browser class.\r\n     * @param method\r\n     */\r\n    BrowserAuthError.createHttpMethodNotImplementedError = function (method) {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.httpMethodNotImplementedError.code, BrowserAuthErrorMessage.httpMethodNotImplementedError.desc + \" Given Method: \" + method);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the navigation URI is empty.\r\n     */\r\n    BrowserAuthError.createEmptyNavigationUriError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.emptyNavigateUriError.code, BrowserAuthErrorMessage.emptyNavigateUriError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the hash string value is unexpectedly empty.\r\n     * @param hashValue\r\n     */\r\n    BrowserAuthError.createEmptyHashError = function (hashValue) {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.hashEmptyError.code, BrowserAuthErrorMessage.hashEmptyError.desc + \" Given Url: \" + hashValue);\r\n    };\r\n    /**\r\n     * Creates an error thrown when a browser interaction (redirect or popup) is in progress.\r\n     */\r\n    BrowserAuthError.createInteractionInProgressError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.interactionInProgress.code, BrowserAuthErrorMessage.interactionInProgress.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the popup window could not be opened.\r\n     * @param errDetail\r\n     */\r\n    BrowserAuthError.createPopupWindowError = function (errDetail) {\r\n        var errorMessage = BrowserAuthErrorMessage.popUpWindowError.desc;\r\n        errorMessage = !StringUtils.isEmpty(errDetail) ? errorMessage + \" Details: \" + errDetail : errorMessage;\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.popUpWindowError.code, errorMessage);\r\n    };\r\n    /**\r\n     * Creates an error thrown when window.open returns an empty window object.\r\n     * @param errDetail\r\n     */\r\n    BrowserAuthError.createEmptyWindowCreatedError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.emptyWindowError.code, BrowserAuthErrorMessage.emptyWindowError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the user closes a popup.\r\n     */\r\n    BrowserAuthError.createUserCancelledError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.userCancelledError.code, BrowserAuthErrorMessage.userCancelledError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when monitorWindowFromHash times out for a given popup.\r\n     * @param urlNavigate\r\n     */\r\n    BrowserAuthError.createMonitorWindowTimeoutError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.monitorWindowTimeoutError.code, BrowserAuthErrorMessage.monitorWindowTimeoutError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when navigateWindow is called inside an iframe.\r\n     * @param windowParentCheck\r\n     */\r\n    BrowserAuthError.createRedirectInIframeError = function (windowParentCheck) {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.redirectInIframeError.code, BrowserAuthErrorMessage.redirectInIframeError.desc + \" (window.parent !== window) => \" + windowParentCheck);\r\n    };\r\n    /**\r\n     * Creates an error thrown when an auth reload is done inside an iframe.\r\n     */\r\n    BrowserAuthError.createBlockReloadInHiddenIframeError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.blockTokenRequestsInHiddenIframeError.code, BrowserAuthErrorMessage.blockTokenRequestsInHiddenIframeError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when an iframe is found to be closed before the timeout is reached.\r\n     */\r\n    BrowserAuthError.createIframeClosedPrematurelyError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.iframeClosedPrematurelyError.code, BrowserAuthErrorMessage.iframeClosedPrematurelyError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the login_hint, sid or account object is not provided in the ssoSilent API.\r\n     */\r\n    BrowserAuthError.createSilentSSOInsufficientInfoError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.silentSSOInsufficientInfoError.code, BrowserAuthErrorMessage.silentSSOInsufficientInfoError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when a given prompt value is invalid for silent requests.\r\n     */\r\n    BrowserAuthError.createSilentPromptValueError = function (givenPrompt) {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.silentPromptValueError.code, BrowserAuthErrorMessage.silentPromptValueError.desc + \" Given value: \" + givenPrompt);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the token request could not be retrieved from the cache\r\n     * @param errDetail\r\n     */\r\n    BrowserAuthError.createTokenRequestCacheError = function (errDetail) {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.tokenRequestCacheError.code, BrowserAuthErrorMessage.tokenRequestCacheError.desc + \" Error Detail: \" + errDetail);\r\n    };\r\n    /**\r\n    * Creates an error thrown if cache type is invalid.\r\n    */\r\n    BrowserAuthError.createInvalidCacheTypeError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.invalidCacheType.code, \"\" + BrowserAuthErrorMessage.invalidCacheType.desc);\r\n    };\r\n    return BrowserAuthError;\r\n}(AuthError));\n\n/**\r\n * This client implements the XMLHttpRequest class to send GET and POST requests.\r\n */\r\nvar XhrClient = /** @class */ (function () {\r\n    function XhrClient() {\r\n    }\r\n    /**\r\n     * XhrClient for REST endpoints - Get request\r\n     * @param url\r\n     * @param headers\r\n     * @param body\r\n     */\r\n    XhrClient.prototype.sendGetRequestAsync = function (url, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.sendRequestAsync(url, HTTP_REQUEST_TYPE.GET, options)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * XhrClient for REST endpoints - Post request\r\n     * @param url\r\n     * @param headers\r\n     * @param body\r\n     */\r\n    XhrClient.prototype.sendPostRequestAsync = function (url, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.sendRequestAsync(url, HTTP_REQUEST_TYPE.POST, options)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Helper for XhrClient requests.\r\n     * @param url\r\n     * @param method\r\n     * @param options\r\n     */\r\n    XhrClient.prototype.sendRequestAsync = function (url, method, options) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.open(method, url, /* async: */ true);\r\n            _this.setXhrHeaders(xhr, options);\r\n            xhr.onload = function () {\r\n                if (xhr.status < 200 || xhr.status >= 300) {\r\n                    reject(xhr.responseText);\r\n                }\r\n                try {\r\n                    var jsonResponse = JSON.parse(xhr.responseText);\r\n                    var networkResponse = {\r\n                        headers: _this.getHeaderMap(xhr),\r\n                        body: jsonResponse,\r\n                        status: xhr.status\r\n                    };\r\n                    resolve(networkResponse);\r\n                }\r\n                catch (e) {\r\n                    reject(xhr.responseText);\r\n                }\r\n            };\r\n            xhr.onerror = function () {\r\n                reject(xhr.status);\r\n            };\r\n            if (method === \"POST\" && options.body) {\r\n                xhr.send(options.body);\r\n            }\r\n            else if (method === \"GET\") {\r\n                xhr.send();\r\n            }\r\n            else {\r\n                throw BrowserAuthError.createHttpMethodNotImplementedError(method);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Helper to set XHR headers for request.\r\n     * @param xhr\r\n     * @param options\r\n     */\r\n    XhrClient.prototype.setXhrHeaders = function (xhr, options) {\r\n        if (options && options.headers) {\r\n            options.headers.forEach(function (value, key) {\r\n                xhr.setRequestHeader(key, value);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Gets a string map of the headers received in the response.\r\n     *\r\n     * Algorithm comes from https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/getAllResponseHeaders\r\n     * @param xhr\r\n     */\r\n    XhrClient.prototype.getHeaderMap = function (xhr) {\r\n        var headerString = xhr.getAllResponseHeaders();\r\n        var headerArr = headerString.trim().split(/[\\r\\n]+/);\r\n        var headerMap = new Map();\r\n        headerArr.forEach(function (value) {\r\n            var parts = value.split(\": \");\r\n            var headerName = parts.shift();\r\n            var headerVal = parts.join(\": \");\r\n            headerMap.set(headerName, headerVal);\r\n        });\r\n        return headerMap;\r\n    };\r\n    return XhrClient;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Utility class for browser specific functions\r\n */\r\nvar BrowserUtils = /** @class */ (function () {\r\n    function BrowserUtils() {\r\n    }\r\n    // #region Window Navigation and URL management\r\n    /**\r\n     * Used to redirect the browser to the STS authorization endpoint\r\n     * @param {string} urlNavigate - URL of the authorization endpoint\r\n     * @param {boolean} noHistory - boolean flag, uses .replace() instead of .assign() if true\r\n     */\r\n    BrowserUtils.navigateWindow = function (urlNavigate, noHistory) {\r\n        if (noHistory) {\r\n            window.location.replace(urlNavigate);\r\n        }\r\n        else {\r\n            window.location.assign(urlNavigate);\r\n        }\r\n    };\r\n    /**\r\n     * Clears hash from window url.\r\n     */\r\n    BrowserUtils.clearHash = function () {\r\n        window.location.hash = \"\";\r\n    };\r\n    /**\r\n     * Replaces current hash with hash from provided url\r\n     */\r\n    BrowserUtils.replaceHash = function (url) {\r\n        var urlParts = url.split(\"#\");\r\n        urlParts.shift(); // Remove part before the hash\r\n        window.location.hash = urlParts.length > 0 ? urlParts.join(\"#\") : \"\";\r\n    };\r\n    /**\r\n     * Returns boolean of whether the current window is in an iframe or not.\r\n     */\r\n    BrowserUtils.isInIframe = function () {\r\n        return window.parent !== window;\r\n    };\r\n    // #endregion\r\n    /**\r\n     * Returns current window URL as redirect uri\r\n     */\r\n    BrowserUtils.getCurrentUri = function () {\r\n        return window.location.href.split(\"?\")[0].split(\"#\")[0];\r\n    };\r\n    /**\r\n     * Gets the homepage url for the current window location.\r\n     */\r\n    BrowserUtils.getHomepage = function () {\r\n        var currentUrl = new UrlString(window.location.href);\r\n        var urlComponents = currentUrl.getUrlComponents();\r\n        return urlComponents.Protocol + \"//\" + urlComponents.HostNameAndPort + \"/\";\r\n    };\r\n    /**\r\n     * Returns best compatible network client object.\r\n     */\r\n    BrowserUtils.getBrowserNetworkClient = function () {\r\n        if (window.fetch) {\r\n            return new FetchClient();\r\n        }\r\n        else {\r\n            return new XhrClient();\r\n        }\r\n    };\r\n    /**\r\n     * Throws error if we have completed an auth and are\r\n     * attempting another auth request inside an iframe.\r\n     */\r\n    BrowserUtils.blockReloadInHiddenIframes = function () {\r\n        var isResponseHash = UrlString.hashContainsKnownProperties(window.location.hash);\r\n        // return an error if called from the hidden iframe created by the msal js silent calls\r\n        if (isResponseHash && BrowserUtils.isInIframe()) {\r\n            throw BrowserAuthError.createBlockReloadInHiddenIframeError();\r\n        }\r\n    };\r\n    /**\r\n     * Returns boolean of whether current browser is an Internet Explorer or Edge browser.\r\n     */\r\n    BrowserUtils.detectIEOrEdge = function () {\r\n        var ua = window.navigator.userAgent;\r\n        var msie = ua.indexOf(\"MSIE \");\r\n        var msie11 = ua.indexOf(\"Trident/\");\r\n        var msedge = ua.indexOf(\"Edge/\");\r\n        var isIE = msie > 0 || msie11 > 0;\r\n        var isEdge = msedge > 0;\r\n        return isIE || isEdge;\r\n    };\r\n    return BrowserUtils;\r\n}());\n\n// Default timeout for popup windows and iframes in milliseconds\r\nvar DEFAULT_POPUP_TIMEOUT_MS = 60000;\r\nvar DEFAULT_IFRAME_TIMEOUT_MS = 6000;\r\n// Default auth options for browser\r\nvar DEFAULT_AUTH_OPTIONS$1 = {\r\n    clientId: \"\",\r\n    authority: \"\" + Constants.DEFAULT_AUTHORITY,\r\n    knownAuthorities: [],\r\n    cloudDiscoveryMetadata: \"\",\r\n    redirectUri: \"\",\r\n    postLogoutRedirectUri: \"\",\r\n    navigateToLoginRequestUrl: true\r\n};\r\n// Default cache options for browser\r\nvar DEFAULT_CACHE_OPTIONS = {\r\n    cacheLocation: BrowserConstants.CACHE_LOCATION_SESSION,\r\n    storeAuthStateInCookie: false\r\n};\r\n// Default logger options for browser\r\nvar DEFAULT_LOGGER_OPTIONS = {\r\n    loggerCallback: function () { },\r\n    piiLoggingEnabled: false\r\n};\r\n// Default system options for browser\r\nvar DEFAULT_BROWSER_SYSTEM_OPTIONS = __assign(__assign({}, DEFAULT_SYSTEM_OPTIONS), { loggerOptions: DEFAULT_LOGGER_OPTIONS, networkClient: BrowserUtils.getBrowserNetworkClient(), windowHashTimeout: DEFAULT_POPUP_TIMEOUT_MS, iframeHashTimeout: DEFAULT_IFRAME_TIMEOUT_MS, loadFrameTimeout: BrowserUtils.detectIEOrEdge() ? 500 : 0 });\r\n/**\r\n * MSAL function that sets the default options when not explicitly configured from app developer\r\n *\r\n * @param auth\r\n * @param cache\r\n * @param system\r\n *\r\n * @returns Configuration object\r\n */\r\nfunction buildConfiguration(_a) {\r\n    var userInputAuth = _a.auth, userInputCache = _a.cache, userInputSystem = _a.system;\r\n    var overlayedConfig = {\r\n        auth: __assign(__assign({}, DEFAULT_AUTH_OPTIONS$1), userInputAuth),\r\n        cache: __assign(__assign({}, DEFAULT_CACHE_OPTIONS), userInputCache),\r\n        system: __assign(__assign({}, DEFAULT_BROWSER_SYSTEM_OPTIONS), userInputSystem)\r\n    };\r\n    return overlayedConfig;\r\n}\n\n/**\r\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nvar BrowserConfigurationAuthErrorMessage = {\r\n    redirectUriNotSet: {\r\n        code: \"redirect_uri_empty\",\r\n        desc: \"A redirect URI is required for all calls, and none has been set.\"\r\n    },\r\n    postLogoutUriNotSet: {\r\n        code: \"post_logout_uri_empty\",\r\n        desc: \"A post logout redirect has not been set.\"\r\n    },\r\n    storageNotSupportedError: {\r\n        code: \"storage_not_supported\",\r\n        desc: \"Given storage configuration option was not supported.\"\r\n    },\r\n    noRedirectCallbacksSet: {\r\n        code: \"no_redirect_callbacks\",\r\n        desc: \"No redirect callbacks have been set. Please call setRedirectCallbacks() with the appropriate function arguments before continuing. \" +\r\n            \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\r\n    },\r\n    invalidCallbackObject: {\r\n        code: \"invalid_callback_object\",\r\n        desc: \"The object passed for the callback was invalid. \" +\r\n            \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\r\n    },\r\n};\r\n/**\r\n * Browser library error class thrown by the MSAL.js library for SPAs\r\n */\r\nvar BrowserConfigurationAuthError = /** @class */ (function (_super) {\r\n    __extends(BrowserConfigurationAuthError, _super);\r\n    function BrowserConfigurationAuthError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"BrowserConfigurationAuthError\";\r\n        Object.setPrototypeOf(_this, BrowserConfigurationAuthError.prototype);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates an error thrown when the redirect uri is empty (not set by caller)\r\n     */\r\n    BrowserConfigurationAuthError.createRedirectUriEmptyError = function () {\r\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.redirectUriNotSet.code, BrowserConfigurationAuthErrorMessage.redirectUriNotSet.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the post-logout redirect uri is empty (not set by caller)\r\n     */\r\n    BrowserConfigurationAuthError.createPostLogoutRedirectUriEmptyError = function () {\r\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.postLogoutUriNotSet.code, BrowserConfigurationAuthErrorMessage.postLogoutUriNotSet.desc);\r\n    };\r\n    /**\r\n     * Creates error thrown when given storage location is not supported.\r\n     * @param givenStorageLocation\r\n     */\r\n    BrowserConfigurationAuthError.createStorageNotSupportedError = function (givenStorageLocation) {\r\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.storageNotSupportedError.code, BrowserConfigurationAuthErrorMessage.storageNotSupportedError.desc + \" Given Location: \" + givenStorageLocation);\r\n    };\r\n    /**\r\n     * Creates error thrown when callback object is invalid.\r\n     * @param callbackObject\r\n     */\r\n    BrowserConfigurationAuthError.createInvalidCallbackObjectError = function (callbackObject) {\r\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.invalidCallbackObject.code, BrowserConfigurationAuthErrorMessage.invalidCallbackObject.desc + \" Given value for callback function: \" + callbackObject);\r\n    };\r\n    /**\r\n     * Creates error thrown when redirect callbacks are not set before calling loginRedirect() or acquireTokenRedirect().\r\n     */\r\n    BrowserConfigurationAuthError.createRedirectCallbacksNotSetError = function () {\r\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.code, BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.desc);\r\n    };\r\n    return BrowserConfigurationAuthError;\r\n}(AuthError));\n\n// Cookie life calculation (hours * minutes * seconds * ms)\r\nvar COOKIE_LIFE_MULTIPLIER = 24 * 60 * 60 * 1000;\r\n/**\r\n * This class implements the cache storage interface for MSAL through browser local or session storage.\r\n * Cookies are only used if storeAuthStateInCookie is true, and are only used for\r\n * parameters such as state and nonce, generally.\r\n */\r\nvar BrowserStorage = /** @class */ (function (_super) {\r\n    __extends(BrowserStorage, _super);\r\n    function BrowserStorage(clientId, cacheConfig) {\r\n        var _this = _super.call(this) || this;\r\n        // Validate cache location\r\n        _this.validateWindowStorage(cacheConfig.cacheLocation);\r\n        _this.cacheConfig = cacheConfig;\r\n        _this.windowStorage = window[_this.cacheConfig.cacheLocation];\r\n        _this.clientId = clientId;\r\n        // Migrate any cache entries from older versions of MSAL.\r\n        _this.migrateCacheEntries();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Validates the the given cache location string is an expected value:\r\n     * - localStorage\r\n     * - sessionStorage (default)\r\n     * Also validates if given cacheLocation is supported on the browser.\r\n     * @param cacheLocation\r\n     */\r\n    BrowserStorage.prototype.validateWindowStorage = function (cacheLocation) {\r\n        if (typeof window === \"undefined\" || !window) {\r\n            throw BrowserAuthError.createNoWindowObjectError();\r\n        }\r\n        if (cacheLocation !== BrowserConstants.CACHE_LOCATION_LOCAL && cacheLocation !== BrowserConstants.CACHE_LOCATION_SESSION) {\r\n            throw BrowserConfigurationAuthError.createStorageNotSupportedError(cacheLocation);\r\n        }\r\n        var storageSupported = !!window[cacheLocation];\r\n        if (!storageSupported) {\r\n            throw BrowserConfigurationAuthError.createStorageNotSupportedError(cacheLocation);\r\n        }\r\n    };\r\n    /**\r\n     * Migrate all old cache entries to new schema. No rollback supported.\r\n     * @param storeAuthStateInCookie\r\n     */\r\n    BrowserStorage.prototype.migrateCacheEntries = function () {\r\n        var _this = this;\r\n        var idTokenKey = Constants.CACHE_PREFIX + \".\" + PersistentCacheKeys.ID_TOKEN;\r\n        var clientInfoKey = Constants.CACHE_PREFIX + \".\" + PersistentCacheKeys.CLIENT_INFO;\r\n        var errorKey = Constants.CACHE_PREFIX + \".\" + PersistentCacheKeys.ERROR;\r\n        var errorDescKey = Constants.CACHE_PREFIX + \".\" + PersistentCacheKeys.ERROR_DESC;\r\n        var idTokenValue = this.windowStorage.getItem(idTokenKey);\r\n        var clientInfoValue = this.windowStorage.getItem(clientInfoKey);\r\n        var errorValue = this.windowStorage.getItem(errorKey);\r\n        var errorDescValue = this.windowStorage.getItem(errorDescKey);\r\n        var values = [idTokenValue, clientInfoValue, errorValue, errorDescValue];\r\n        var keysToMigrate = [PersistentCacheKeys.ID_TOKEN, PersistentCacheKeys.CLIENT_INFO, PersistentCacheKeys.ERROR, PersistentCacheKeys.ERROR_DESC];\r\n        keysToMigrate.forEach(function (cacheKey, index) { return _this.migrateCacheEntry(cacheKey, values[index]); });\r\n    };\r\n    /**\r\n     * Utility function to help with migration.\r\n     * @param newKey\r\n     * @param value\r\n     * @param storeAuthStateInCookie\r\n     */\r\n    BrowserStorage.prototype.migrateCacheEntry = function (newKey, value) {\r\n        if (value) {\r\n            this.setItem(this.generateCacheKey(newKey), value, CacheSchemaType.TEMPORARY);\r\n        }\r\n    };\r\n    /**\r\n     * Parses key as JSON object, JSON.parse() will throw an error.\r\n     * @param key\r\n     */\r\n    BrowserStorage.prototype.validateObjectKey = function (key) {\r\n        JSON.parse(key);\r\n    };\r\n    /**\r\n     * Sets the cache item with the key and value given.\r\n     * Stores in cookie if storeAuthStateInCookie is set to true.\r\n     * This can cause cookie overflow if used incorrectly.\r\n     * @param key\r\n     * @param value\r\n     */\r\n    BrowserStorage.prototype.setItem = function (key, value, type) {\r\n        // save the cacheItem\r\n        switch (type) {\r\n            case CacheSchemaType.ACCOUNT:\r\n            case CacheSchemaType.CREDENTIAL:\r\n            case CacheSchemaType.APP_META_DATA:\r\n                this.windowStorage.setItem(key, JSON.stringify(value));\r\n                break;\r\n            case CacheSchemaType.TEMPORARY: {\r\n                var stringVal = value;\r\n                this.windowStorage.setItem(key, stringVal);\r\n                if (this.cacheConfig.storeAuthStateInCookie) {\r\n                    this.setItemCookie(key, stringVal);\r\n                }\r\n                break;\r\n            }\r\n            case CacheSchemaType.TELEMETRY: {\r\n                this.windowStorage.setItem(key, JSON.stringify(value));\r\n                break;\r\n            }\r\n            default: {\r\n                throw BrowserAuthError.createInvalidCacheTypeError();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets cache item with given key.\r\n     * Will retrieve frm cookies if storeAuthStateInCookie is set to true.\r\n     * @param key\r\n     */\r\n    BrowserStorage.prototype.getItem = function (key, type) {\r\n        var value = this.windowStorage.getItem(key);\r\n        if (StringUtils.isEmpty(value)) {\r\n            return null;\r\n        }\r\n        switch (type) {\r\n            case CacheSchemaType.ACCOUNT: {\r\n                var account = new AccountEntity();\r\n                return CacheManager.toObject(account, JSON.parse(value));\r\n            }\r\n            case CacheSchemaType.CREDENTIAL: {\r\n                var credentialType = CredentialEntity.getCredentialType(key);\r\n                switch (credentialType) {\r\n                    case CredentialType.ID_TOKEN: {\r\n                        var idTokenEntity = new IdTokenEntity();\r\n                        return CacheManager.toObject(idTokenEntity, JSON.parse(value));\r\n                    }\r\n                    case CredentialType.ACCESS_TOKEN: {\r\n                        var accessTokenEntity = new AccessTokenEntity();\r\n                        return CacheManager.toObject(accessTokenEntity, JSON.parse(value));\r\n                    }\r\n                    case CredentialType.REFRESH_TOKEN: {\r\n                        var refreshTokenEntity = new RefreshTokenEntity();\r\n                        return CacheManager.toObject(refreshTokenEntity, JSON.parse(value));\r\n                    }\r\n                }\r\n            }\r\n            case CacheSchemaType.APP_META_DATA: {\r\n                return JSON.parse(value);\r\n            }\r\n            case CacheSchemaType.TEMPORARY: {\r\n                var itemCookie = this.getItemCookie(key);\r\n                if (this.cacheConfig.storeAuthStateInCookie) {\r\n                    return itemCookie;\r\n                }\r\n                return value;\r\n            }\r\n            case CacheSchemaType.TELEMETRY: {\r\n                return JSON.parse(value);\r\n            }\r\n            default: {\r\n                throw BrowserAuthError.createInvalidCacheTypeError();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Removes the cache item with the given key.\r\n     * Will also clear the cookie item if storeAuthStateInCookie is set to true.\r\n     * @param key\r\n     */\r\n    BrowserStorage.prototype.removeItem = function (key) {\r\n        this.windowStorage.removeItem(key);\r\n        if (this.cacheConfig.storeAuthStateInCookie) {\r\n            this.clearItemCookie(key);\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Checks whether key is in cache.\r\n     * @param key\r\n     */\r\n    BrowserStorage.prototype.containsKey = function (key) {\r\n        return this.windowStorage.hasOwnProperty(key);\r\n    };\r\n    /**\r\n     * Gets all keys in window.\r\n     */\r\n    BrowserStorage.prototype.getKeys = function () {\r\n        return Object.keys(this.windowStorage);\r\n    };\r\n    /**\r\n     * Clears all cache entries created by MSAL (except tokens).\r\n     */\r\n    BrowserStorage.prototype.clear = function () {\r\n        this.removeAllAccounts();\r\n        this.removeAppMetadata();\r\n        var key;\r\n        for (key in this.windowStorage) {\r\n            // Check if key contains msal prefix; For now, we are clearing all the cache items created by MSAL.js\r\n            if (this.windowStorage.hasOwnProperty(key) && ((key.indexOf(Constants.CACHE_PREFIX) !== -1) || (key.indexOf(this.clientId) !== -1))) {\r\n                this.removeItem(key);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Add value to cookies\r\n     * @param cookieName\r\n     * @param cookieValue\r\n     * @param expires\r\n     */\r\n    BrowserStorage.prototype.setItemCookie = function (cookieName, cookieValue, expires) {\r\n        var cookieStr = encodeURIComponent(cookieName) + \"=\" + encodeURIComponent(cookieValue) + \";path=/;\";\r\n        if (expires) {\r\n            var expireTime = this.getCookieExpirationTime(expires);\r\n            cookieStr += \"expires=\" + expireTime + \";\";\r\n        }\r\n        document.cookie = cookieStr;\r\n    };\r\n    /**\r\n     * Get one item by key from cookies\r\n     * @param cookieName\r\n     */\r\n    BrowserStorage.prototype.getItemCookie = function (cookieName) {\r\n        var name = encodeURIComponent(cookieName) + \"=\";\r\n        var cookieList = document.cookie.split(\";\");\r\n        for (var i = 0; i < cookieList.length; i++) {\r\n            var cookie = cookieList[i];\r\n            while (cookie.charAt(0) === \" \") {\r\n                cookie = cookie.substring(1);\r\n            }\r\n            if (cookie.indexOf(name) === 0) {\r\n                return decodeURIComponent(cookie.substring(name.length, cookie.length));\r\n            }\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Clear an item in the cookies by key\r\n     * @param cookieName\r\n     */\r\n    BrowserStorage.prototype.clearItemCookie = function (cookieName) {\r\n        this.setItemCookie(cookieName, \"\", -1);\r\n    };\r\n    /**\r\n     * Clear all msal cookies\r\n     */\r\n    BrowserStorage.prototype.clearMsalCookie = function (state) {\r\n        var nonceKey = state ? TemporaryCacheKeys.NONCE_IDTOKEN + \"|\" + state : TemporaryCacheKeys.NONCE_IDTOKEN;\r\n        this.clearItemCookie(this.generateCacheKey(nonceKey));\r\n        this.clearItemCookie(this.generateCacheKey(TemporaryCacheKeys.REQUEST_STATE));\r\n        this.clearItemCookie(this.generateCacheKey(TemporaryCacheKeys.ORIGIN_URI));\r\n    };\r\n    /**\r\n     * Get cookie expiration time\r\n     * @param cookieLifeDays\r\n     */\r\n    BrowserStorage.prototype.getCookieExpirationTime = function (cookieLifeDays) {\r\n        var today = new Date();\r\n        var expr = new Date(today.getTime() + cookieLifeDays * COOKIE_LIFE_MULTIPLIER);\r\n        return expr.toUTCString();\r\n    };\r\n    /**\r\n     * Gets the cache object referenced by the browser\r\n     */\r\n    BrowserStorage.prototype.getCache = function () {\r\n        return this.windowStorage;\r\n    };\r\n    /**\r\n     * interface compat, we cannot overwrite browser cache; Functionality is supported by individual entities in browser\r\n     */\r\n    BrowserStorage.prototype.setCache = function () {\r\n        // sets nothing\r\n    };\r\n    /**\r\n     * Prepend msal.<client-id> to each key; Skip for any JSON object as Key (defined schemas do not need the key appended: AccessToken Keys or the upcoming schema)\r\n     * @param key\r\n     * @param addInstanceId\r\n     */\r\n    BrowserStorage.prototype.generateCacheKey = function (key) {\r\n        try {\r\n            // Defined schemas do not need the key migrated\r\n            this.validateObjectKey(key);\r\n            return key;\r\n        }\r\n        catch (e) {\r\n            if (StringUtils.startsWith(key, Constants.CACHE_PREFIX) || StringUtils.startsWith(key, PersistentCacheKeys.ADAL_ID_TOKEN)) {\r\n                return key;\r\n            }\r\n            return Constants.CACHE_PREFIX + \".\" + this.clientId + \".\" + key;\r\n        }\r\n    };\r\n    /**\r\n     * Create authorityKey to cache authority\r\n     * @param state\r\n     */\r\n    BrowserStorage.prototype.generateAuthorityKey = function (state) {\r\n        return \"\" + TemporaryCacheKeys.AUTHORITY + Constants.RESOURCE_DELIM + state;\r\n    };\r\n    /**\r\n     * Create Nonce key to cache nonce\r\n     * @param state\r\n     */\r\n    BrowserStorage.prototype.generateNonceKey = function (state) {\r\n        return \"\" + TemporaryCacheKeys.NONCE_IDTOKEN + Constants.RESOURCE_DELIM + state;\r\n    };\r\n    /**\r\n     * Sets the cacheKey for and stores the authority information in cache\r\n     * @param state\r\n     * @param authority\r\n     */\r\n    BrowserStorage.prototype.setAuthorityCache = function (authority, state) {\r\n        // Cache authorityKey\r\n        var authorityKey = this.generateAuthorityKey(state);\r\n        this.setItem(this.generateCacheKey(authorityKey), authority, CacheSchemaType.TEMPORARY);\r\n    };\r\n    /**\r\n     * Gets the cached authority based on the cached state. Returns empty if no cached state found.\r\n     */\r\n    BrowserStorage.prototype.getCachedAuthority = function () {\r\n        var state = this.getItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_STATE), CacheSchemaType.TEMPORARY);\r\n        if (!state) {\r\n            return null;\r\n        }\r\n        return this.getItem(this.generateCacheKey(this.generateAuthorityKey(state)), CacheSchemaType.TEMPORARY);\r\n    };\r\n    /**\r\n     * Updates account, authority, and state in cache\r\n     * @param serverAuthenticationRequest\r\n     * @param account\r\n     */\r\n    BrowserStorage.prototype.updateCacheEntries = function (state, nonce, authorityInstance) {\r\n        // Cache the request state\r\n        this.setItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_STATE), state, CacheSchemaType.TEMPORARY);\r\n        // Cache the nonce\r\n        this.setItem(this.generateCacheKey(this.generateNonceKey(state)), nonce, CacheSchemaType.TEMPORARY);\r\n        // Cache authorityKey\r\n        this.setAuthorityCache(authorityInstance, state);\r\n    };\r\n    /**\r\n     * Reset all temporary cache items\r\n     * @param state\r\n     */\r\n    BrowserStorage.prototype.resetRequestCache = function (state) {\r\n        var _this = this;\r\n        // check state and remove associated cache items\r\n        this.getKeys().forEach(function (key) {\r\n            if (!StringUtils.isEmpty(state) && key.indexOf(state) !== -1) {\r\n                _this.removeItem(key);\r\n            }\r\n        });\r\n        // delete generic interactive request parameters\r\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_STATE));\r\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS));\r\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.ORIGIN_URI));\r\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.URL_HASH));\r\n    };\r\n    BrowserStorage.prototype.cleanRequest = function () {\r\n        // Interaction is completed - remove interaction status.\r\n        this.removeItem(this.generateCacheKey(BrowserConstants.INTERACTION_STATUS_KEY));\r\n        var cachedState = this.getItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_STATE), CacheSchemaType.TEMPORARY);\r\n        this.resetRequestCache(cachedState || \"\");\r\n    };\r\n    BrowserStorage.prototype.cacheCodeRequest = function (authCodeRequest, browserCrypto) {\r\n        this.setItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS), browserCrypto.base64Encode(JSON.stringify(authCodeRequest)), CacheSchemaType.TEMPORARY);\r\n    };\r\n    /**\r\n     * Gets the token exchange parameters from the cache. Throws an error if nothing is found.\r\n     */\r\n    BrowserStorage.prototype.getCachedRequest = function (state, browserCrypto) {\r\n        try {\r\n            // Get token request from cache and parse as TokenExchangeParameters.\r\n            var encodedTokenRequest = this.getItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS), CacheSchemaType.TEMPORARY);\r\n            var parsedRequest = JSON.parse(browserCrypto.base64Decode(encodedTokenRequest));\r\n            this.removeItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS));\r\n            // Get cached authority and use if no authority is cached with request.\r\n            if (StringUtils.isEmpty(parsedRequest.authority)) {\r\n                var authorityKey = this.generateAuthorityKey(state);\r\n                var cachedAuthority = this.getItem(this.generateCacheKey(authorityKey), CacheSchemaType.TEMPORARY);\r\n                parsedRequest.authority = cachedAuthority;\r\n            }\r\n            return parsedRequest;\r\n        }\r\n        catch (err) {\r\n            throw BrowserAuthError.createTokenRequestCacheError(err);\r\n        }\r\n    };\r\n    return BrowserStorage;\r\n}(CacheManager));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Utility class for math specific functions in browser.\r\n */\r\nvar MathUtils = /** @class */ (function () {\r\n    function MathUtils() {\r\n    }\r\n    /**\r\n     * Decimal to Hex\r\n     *\r\n     * @param num\r\n     */\r\n    MathUtils.decimalToHex = function (num) {\r\n        var hex = num.toString(16);\r\n        while (hex.length < 2) {\r\n            hex = \"0\" + hex;\r\n        }\r\n        return hex;\r\n    };\r\n    return MathUtils;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar GuidGenerator = /** @class */ (function () {\r\n    function GuidGenerator(cryptoObj) {\r\n        this.cryptoObj = cryptoObj;\r\n    }\r\n    /*\r\n     * RFC4122: The version 4 UUID is meant for generating UUIDs from truly-random or\r\n     * pseudo-random numbers.\r\n     * The algorithm is as follows:\r\n     *     Set the two most significant bits (bits 6 and 7) of the\r\n     *        clock_seq_hi_and_reserved to zero and one, respectively.\r\n     *     Set the four most significant bits (bits 12 through 15) of the\r\n     *        time_hi_and_version field to the 4-bit version number from\r\n     *        Section 4.1.3. Version4\r\n     *     Set all the other bits to randomly (or pseudo-randomly) chosen\r\n     *     values.\r\n     * UUID                   = time-low \"-\" time-mid \"-\"time-high-and-version \"-\"clock-seq-reserved and low(2hexOctet)\"-\" node\r\n     * time-low               = 4hexOctet\r\n     * time-mid               = 2hexOctet\r\n     * time-high-and-version  = 2hexOctet\r\n     * clock-seq-and-reserved = hexOctet:\r\n     * clock-seq-low          = hexOctet\r\n     * node                   = 6hexOctet\r\n     * Format: xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\r\n     * y could be 1000, 1001, 1010, 1011 since most significant two bits needs to be 10\r\n     * y values are 8, 9, A, B\r\n     */\r\n    GuidGenerator.prototype.generateGuid = function () {\r\n        try {\r\n            var buffer = new Uint8Array(16);\r\n            this.cryptoObj.getRandomValues(buffer);\r\n            // buffer[6] and buffer[7] represents the time_hi_and_version field. We will set the four most significant bits (4 through 7) of buffer[6] to represent decimal number 4 (UUID version number).\r\n            buffer[6] |= 0x40; // buffer[6] | 01000000 will set the 6 bit to 1.\r\n            buffer[6] &= 0x4f; // buffer[6] & 01001111 will set the 4, 5, and 7 bit to 0 such that bits 4-7 == 0100 = \"4\".\r\n            // buffer[8] represents the clock_seq_hi_and_reserved field. We will set the two most significant bits (6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively.\r\n            buffer[8] |= 0x80; // buffer[8] | 10000000 will set the 7 bit to 1.\r\n            buffer[8] &= 0xbf; // buffer[8] & 10111111 will set the 6 bit to 0.\r\n            return MathUtils.decimalToHex(buffer[0]) + MathUtils.decimalToHex(buffer[1])\r\n                + MathUtils.decimalToHex(buffer[2]) + MathUtils.decimalToHex(buffer[3])\r\n                + \"-\" + MathUtils.decimalToHex(buffer[4]) + MathUtils.decimalToHex(buffer[5])\r\n                + \"-\" + MathUtils.decimalToHex(buffer[6]) + MathUtils.decimalToHex(buffer[7])\r\n                + \"-\" + MathUtils.decimalToHex(buffer[8]) + MathUtils.decimalToHex(buffer[9])\r\n                + \"-\" + MathUtils.decimalToHex(buffer[10]) + MathUtils.decimalToHex(buffer[11])\r\n                + MathUtils.decimalToHex(buffer[12]) + MathUtils.decimalToHex(buffer[13])\r\n                + MathUtils.decimalToHex(buffer[14]) + MathUtils.decimalToHex(buffer[15]);\r\n        }\r\n        catch (err) {\r\n            var guidHolder = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\";\r\n            var hex = \"0123456789abcdef\";\r\n            var r = 0;\r\n            var guidResponse = \"\";\r\n            for (var i = 0; i < 36; i++) {\r\n                if (guidHolder[i] !== \"-\" && guidHolder[i] !== \"4\") {\r\n                    // each x and y needs to be random\r\n                    r = Math.random() * 16 | 0;\r\n                }\r\n                if (guidHolder[i] === \"x\") {\r\n                    guidResponse += hex[r];\r\n                }\r\n                else if (guidHolder[i] === \"y\") {\r\n                    // clock-seq-and-reserved first hex is filtered and remaining hex values are random\r\n                    r &= 0x3; // bit and with 0011 to set pos 2 to zero ?0??\r\n                    r |= 0x8; // set pos 3 to 1 as 1???\r\n                    guidResponse += hex[r];\r\n                }\r\n                else {\r\n                    guidResponse += guidHolder[i];\r\n                }\r\n            }\r\n            return guidResponse;\r\n        }\r\n    };\r\n    /**\r\n     * verifies if a string is  GUID\r\n     * @param guid\r\n     */\r\n    GuidGenerator.isGuid = function (guid) {\r\n        var regexGuid = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\r\n        return regexGuid.test(guid);\r\n    };\r\n    return GuidGenerator;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Utility functions for strings in a browser. See here for implementation details:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\r\n */\r\nvar BrowserStringUtils = /** @class */ (function () {\r\n    function BrowserStringUtils() {\r\n    }\r\n    /**\r\n     * Converts string to Uint8Array\r\n     * @param sDOMStr\r\n     */\r\n    BrowserStringUtils.stringToUtf8Arr = function (sDOMStr) {\r\n        var nChr;\r\n        var nArrLen = 0;\r\n        var nStrLen = sDOMStr.length;\r\n        /* mapping... */\r\n        for (var nMapIdx = 0; nMapIdx < nStrLen; nMapIdx++) {\r\n            nChr = sDOMStr.charCodeAt(nMapIdx);\r\n            nArrLen += nChr < 0x80 ? 1 : nChr < 0x800 ? 2 : nChr < 0x10000 ? 3 : nChr < 0x200000 ? 4 : nChr < 0x4000000 ? 5 : 6;\r\n        }\r\n        var aBytes = new Uint8Array(nArrLen);\r\n        /* transcription... */\r\n        for (var nIdx = 0, nChrIdx = 0; nIdx < nArrLen; nChrIdx++) {\r\n            nChr = sDOMStr.charCodeAt(nChrIdx);\r\n            if (nChr < 128) {\r\n                /* one byte */\r\n                aBytes[nIdx++] = nChr;\r\n            }\r\n            else if (nChr < 0x800) {\r\n                /* two bytes */\r\n                aBytes[nIdx++] = 192 + (nChr >>> 6);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            }\r\n            else if (nChr < 0x10000) {\r\n                /* three bytes */\r\n                aBytes[nIdx++] = 224 + (nChr >>> 12);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            }\r\n            else if (nChr < 0x200000) {\r\n                /* four bytes */\r\n                aBytes[nIdx++] = 240 + (nChr >>> 18);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            }\r\n            else if (nChr < 0x4000000) {\r\n                /* five bytes */\r\n                aBytes[nIdx++] = 248 + (nChr >>> 24);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 18 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            }\r\n            else /* if (nChr <= 0x7fffffff) */ {\r\n                /* six bytes */\r\n                aBytes[nIdx++] = 252 + (nChr >>> 30);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 24 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 18 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            }\r\n        }\r\n        return aBytes;\r\n    };\r\n    /**\r\n     * Converts Uint8Array to a string\r\n     * @param aBytes\r\n     */\r\n    BrowserStringUtils.utf8ArrToString = function (aBytes) {\r\n        var sView = \"\";\r\n        for (var nPart = void 0, nLen = aBytes.length, nIdx = 0; nIdx < nLen; nIdx++) {\r\n            nPart = aBytes[nIdx];\r\n            sView += String.fromCharCode(nPart > 251 && nPart < 254 && nIdx + 5 < nLen ? /* six bytes */\r\n                /* (nPart - 252 << 30) may be not so safe in ECMAScript! So...: */\r\n                (nPart - 252) * 1073741824 + (aBytes[++nIdx] - 128 << 24) + (aBytes[++nIdx] - 128 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                : nPart > 247 && nPart < 252 && nIdx + 4 < nLen ? /* five bytes */\r\n                    (nPart - 248 << 24) + (aBytes[++nIdx] - 128 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                    : nPart > 239 && nPart < 248 && nIdx + 3 < nLen ? /* four bytes */\r\n                        (nPart - 240 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                        : nPart > 223 && nPart < 240 && nIdx + 2 < nLen ? /* three bytes */\r\n                            (nPart - 224 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                            : nPart > 191 && nPart < 224 && nIdx + 1 < nLen ? /* two bytes */\r\n                                (nPart - 192 << 6) + aBytes[++nIdx] - 128\r\n                                : /* nPart < 127 ? */ /* one byte */\r\n                                    nPart);\r\n        }\r\n        return sView;\r\n    };\r\n    return BrowserStringUtils;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Class which exposes APIs to encode plaintext to base64 encoded string. See here for implementation details:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\r\n */\r\nvar Base64Encode = /** @class */ (function () {\r\n    function Base64Encode() {\r\n    }\r\n    /**\r\n     * Returns URL Safe b64 encoded string from a plaintext string.\r\n     * @param input\r\n     */\r\n    Base64Encode.prototype.urlEncode = function (input) {\r\n        return encodeURIComponent(this.encode(input)\r\n            .replace(/=/g, \"\")\r\n            .replace(/\\+/g, \"-\")\r\n            .replace(/\\//g, \"_\"));\r\n    };\r\n    /**\r\n     * Returns URL Safe b64 encoded string from an int8Array.\r\n     * @param inputArr\r\n     */\r\n    Base64Encode.prototype.urlEncodeArr = function (inputArr) {\r\n        return this.base64EncArr(inputArr)\r\n            .replace(/=/g, \"\")\r\n            .replace(/\\+/g, \"-\")\r\n            .replace(/\\//g, \"_\");\r\n    };\r\n    /**\r\n     * Returns b64 encoded string from plaintext string.\r\n     * @param input\r\n     */\r\n    Base64Encode.prototype.encode = function (input) {\r\n        var inputUtf8Arr = BrowserStringUtils.stringToUtf8Arr(input);\r\n        return this.base64EncArr(inputUtf8Arr);\r\n    };\r\n    /**\r\n     * Base64 encode byte array\r\n     * @param aBytes\r\n     */\r\n    Base64Encode.prototype.base64EncArr = function (aBytes) {\r\n        var eqLen = (3 - (aBytes.length % 3)) % 3;\r\n        var sB64Enc = \"\";\r\n        for (var nMod3 = void 0, nLen = aBytes.length, nUint24 = 0, nIdx = 0; nIdx < nLen; nIdx++) {\r\n            nMod3 = nIdx % 3;\r\n            /* Uncomment the following line in order to split the output in lines 76-character long: */\r\n            /*\r\n            if (nIdx > 0 && (nIdx * 4 / 3) % 76 === 0) { sB64Enc += \"\\r\\n\"; }\r\n            */\r\n            nUint24 |= aBytes[nIdx] << (16 >>> nMod3 & 24);\r\n            if (nMod3 === 2 || aBytes.length - nIdx === 1) {\r\n                sB64Enc += String.fromCharCode(this.uint6ToB64(nUint24 >>> 18 & 63), this.uint6ToB64(nUint24 >>> 12 & 63), this.uint6ToB64(nUint24 >>> 6 & 63), this.uint6ToB64(nUint24 & 63));\r\n                nUint24 = 0;\r\n            }\r\n        }\r\n        return eqLen === 0 ? sB64Enc : sB64Enc.substring(0, sB64Enc.length - eqLen) + (eqLen === 1 ? \"=\" : \"==\");\r\n    };\r\n    /**\r\n     * Base64 string to array encoding helper\r\n     * @param nUint6\r\n     */\r\n    Base64Encode.prototype.uint6ToB64 = function (nUint6) {\r\n        return nUint6 < 26 ?\r\n            nUint6 + 65\r\n            : nUint6 < 52 ?\r\n                nUint6 + 71\r\n                : nUint6 < 62 ?\r\n                    nUint6 - 4\r\n                    : nUint6 === 62 ?\r\n                        43\r\n                        : nUint6 === 63 ?\r\n                            47\r\n                            :\r\n                                65;\r\n    };\r\n    return Base64Encode;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Class which exposes APIs to decode base64 strings to plaintext. See here for implementation details:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\r\n */\r\nvar Base64Decode = /** @class */ (function () {\r\n    function Base64Decode() {\r\n    }\r\n    /**\r\n     * Returns a URL-safe plaintext decoded string from b64 encoded input.\r\n     * @param input\r\n     */\r\n    Base64Decode.prototype.decode = function (input) {\r\n        var encodedString = input.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n        switch (encodedString.length % 4) {\r\n            case 0:\r\n                break;\r\n            case 2:\r\n                encodedString += \"==\";\r\n                break;\r\n            case 3:\r\n                encodedString += \"=\";\r\n                break;\r\n            default:\r\n                throw new Error(\"Invalid base64 string\");\r\n        }\r\n        var inputUtf8Arr = this.base64DecToArr(encodedString);\r\n        return decodeURIComponent(BrowserStringUtils.utf8ArrToString(inputUtf8Arr));\r\n    };\r\n    /**\r\n     * Decodes base64 into Uint8Array\r\n     * @param base64String\r\n     * @param nBlockSize\r\n     */\r\n    Base64Decode.prototype.base64DecToArr = function (base64String, nBlockSize) {\r\n        var sB64Enc = base64String.replace(/[^A-Za-z0-9\\+\\/]/g, \"\");\r\n        var nInLen = sB64Enc.length;\r\n        var nOutLen = nBlockSize ? Math.ceil((nInLen * 3 + 1 >>> 2) / nBlockSize) * nBlockSize : nInLen * 3 + 1 >>> 2;\r\n        var aBytes = new Uint8Array(nOutLen);\r\n        for (var nMod3 = void 0, nMod4 = void 0, nUint24 = 0, nOutIdx = 0, nInIdx = 0; nInIdx < nInLen; nInIdx++) {\r\n            nMod4 = nInIdx & 3;\r\n            nUint24 |= this.b64ToUint6(sB64Enc.charCodeAt(nInIdx)) << 18 - 6 * nMod4;\r\n            if (nMod4 === 3 || nInLen - nInIdx === 1) {\r\n                for (nMod3 = 0; nMod3 < 3 && nOutIdx < nOutLen; nMod3++, nOutIdx++) {\r\n                    aBytes[nOutIdx] = nUint24 >>> (16 >>> nMod3 & 24) & 255;\r\n                }\r\n                nUint24 = 0;\r\n            }\r\n        }\r\n        return aBytes;\r\n    };\r\n    /**\r\n     * Base64 string to array decoding helper\r\n     * @param charNum\r\n     */\r\n    Base64Decode.prototype.b64ToUint6 = function (charNum) {\r\n        return charNum > 64 && charNum < 91 ?\r\n            charNum - 65\r\n            : charNum > 96 && charNum < 123 ?\r\n                charNum - 71\r\n                : charNum > 47 && charNum < 58 ?\r\n                    charNum + 4\r\n                    : charNum === 43 ?\r\n                        62\r\n                        : charNum === 47 ?\r\n                            63\r\n                            :\r\n                                0;\r\n    };\r\n    return Base64Decode;\r\n}());\n\n// Constant byte array length\r\nvar RANDOM_BYTE_ARR_LENGTH = 32;\r\n/**\r\n * Class which exposes APIs to generate PKCE codes and code verifiers.\r\n */\r\nvar PkceGenerator = /** @class */ (function () {\r\n    function PkceGenerator(cryptoObj) {\r\n        this.base64Encode = new Base64Encode();\r\n        this.cryptoObj = cryptoObj;\r\n    }\r\n    /**\r\n     * Generates PKCE Codes. See the RFC for more information: https://tools.ietf.org/html/rfc7636\r\n     */\r\n    PkceGenerator.prototype.generateCodes = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var codeVerifier, codeChallenge;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        codeVerifier = this.generateCodeVerifier();\r\n                        return [4 /*yield*/, this.generateCodeChallengeFromVerifier(codeVerifier)];\r\n                    case 1:\r\n                        codeChallenge = _a.sent();\r\n                        return [2 /*return*/, {\r\n                                verifier: codeVerifier,\r\n                                challenge: codeChallenge\r\n                            }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Generates a random 32 byte buffer and returns the base64\r\n     * encoded string to be used as a PKCE Code Verifier\r\n     */\r\n    PkceGenerator.prototype.generateCodeVerifier = function () {\r\n        try {\r\n            // Generate random values as utf-8\r\n            var buffer = new Uint8Array(RANDOM_BYTE_ARR_LENGTH);\r\n            this.cryptoObj.getRandomValues(buffer);\r\n            // encode verifier as base64\r\n            var pkceCodeVerifierB64 = this.base64Encode.urlEncodeArr(buffer);\r\n            return pkceCodeVerifierB64;\r\n        }\r\n        catch (e) {\r\n            throw BrowserAuthError.createPkceNotGeneratedError(e);\r\n        }\r\n    };\r\n    /**\r\n     * Creates a base64 encoded PKCE Code Challenge string from the\r\n     * hash created from the PKCE Code Verifier supplied\r\n     */\r\n    PkceGenerator.prototype.generateCodeChallengeFromVerifier = function (pkceCodeVerifier) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var pkceHashedCodeVerifier, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 2, , 3]);\r\n                        return [4 /*yield*/, this.cryptoObj.sha256Digest(pkceCodeVerifier)];\r\n                    case 1:\r\n                        pkceHashedCodeVerifier = _a.sent();\r\n                        // encode hash as base64\r\n                        return [2 /*return*/, this.base64Encode.urlEncodeArr(new Uint8Array(pkceHashedCodeVerifier))];\r\n                    case 2:\r\n                        e_1 = _a.sent();\r\n                        throw BrowserAuthError.createPkceNotGeneratedError(e_1);\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return PkceGenerator;\r\n}());\n\n// SHA-256 hashing algorithm\r\nvar HASH_ALG = \"SHA-256\";\r\n/**\r\n * This class implements functions used by the browser library to perform cryptography operations such as\r\n * hashing and encoding. It also has helper functions to validate the availability of specific APIs.\r\n */\r\nvar BrowserCrypto = /** @class */ (function () {\r\n    function BrowserCrypto() {\r\n        if (!(this.hasCryptoAPI())) {\r\n            throw BrowserAuthError.createCryptoNotAvailableError(\"Browser crypto or msCrypto object not available.\");\r\n        }\r\n    }\r\n    /**\r\n     * Returns a sha-256 hash of the given dataString as an ArrayBuffer.\r\n     * @param dataString\r\n     */\r\n    BrowserCrypto.prototype.sha256Digest = function (dataString) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var data;\r\n            return __generator(this, function (_a) {\r\n                data = BrowserStringUtils.stringToUtf8Arr(dataString);\r\n                return [2 /*return*/, this.hasIECrypto() ? this.getMSCryptoDigest(HASH_ALG, data) : this.getSubtleCryptoDigest(HASH_ALG, data)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Populates buffer with cryptographically random values.\r\n     * @param dataBuffer\r\n     */\r\n    BrowserCrypto.prototype.getRandomValues = function (dataBuffer) {\r\n        var cryptoObj = window[\"msCrypto\"] || window.crypto;\r\n        if (!cryptoObj.getRandomValues) {\r\n            throw BrowserAuthError.createCryptoNotAvailableError(\"getRandomValues does not exist.\");\r\n        }\r\n        cryptoObj.getRandomValues(dataBuffer);\r\n    };\r\n    /**\r\n     * Checks whether IE crypto (AKA msCrypto) is available.\r\n     */\r\n    BrowserCrypto.prototype.hasIECrypto = function () {\r\n        return !!window[\"msCrypto\"];\r\n    };\r\n    /**\r\n     * Check whether browser crypto is available.\r\n     */\r\n    BrowserCrypto.prototype.hasBrowserCrypto = function () {\r\n        return !!window.crypto;\r\n    };\r\n    /**\r\n     * Check whether IE crypto or other browser cryptography is available.\r\n     */\r\n    BrowserCrypto.prototype.hasCryptoAPI = function () {\r\n        return this.hasIECrypto() || this.hasBrowserCrypto();\r\n    };\r\n    /**\r\n     * Helper function for SHA digest.\r\n     * @param algorithm\r\n     * @param data\r\n     */\r\n    BrowserCrypto.prototype.getSubtleCryptoDigest = function (algorithm, data) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, window.crypto.subtle.digest(algorithm, data)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Helper function for SHA digest.\r\n     * @param algorithm\r\n     * @param data\r\n     */\r\n    BrowserCrypto.prototype.getMSCryptoDigest = function (algorithm, data) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                        var digestOperation = window[\"msCrypto\"].subtle.digest(algorithm, data.buffer);\r\n                        digestOperation.addEventListener(\"complete\", function (e) {\r\n                            resolve(e.target.result);\r\n                        });\r\n                        digestOperation.addEventListener(\"error\", function (error) {\r\n                            reject(error);\r\n                        });\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    return BrowserCrypto;\r\n}());\n\n/**\r\n * This class implements MSAL's crypto interface, which allows it to perform base64 encoding and decoding, generating cryptographically random GUIDs and\r\n * implementing Proof Key for Code Exchange specs for the OAuth Authorization Code Flow using PKCE (rfc here: https://tools.ietf.org/html/rfc7636).\r\n */\r\nvar CryptoOps = /** @class */ (function () {\r\n    function CryptoOps() {\r\n        // Browser crypto needs to be validated first before any other classes can be set.\r\n        this.browserCrypto = new BrowserCrypto();\r\n        this.b64Encode = new Base64Encode();\r\n        this.b64Decode = new Base64Decode();\r\n        this.guidGenerator = new GuidGenerator(this.browserCrypto);\r\n        this.pkceGenerator = new PkceGenerator(this.browserCrypto);\r\n    }\r\n    /**\r\n     * Creates a new random GUID - used to populate state and nonce.\r\n     * @returns string (GUID)\r\n     */\r\n    CryptoOps.prototype.createNewGuid = function () {\r\n        return this.guidGenerator.generateGuid();\r\n    };\r\n    /**\r\n     * Encodes input string to base64.\r\n     * @param input\r\n     */\r\n    CryptoOps.prototype.base64Encode = function (input) {\r\n        return this.b64Encode.encode(input);\r\n    };\r\n    /**\r\n     * Decodes input string from base64.\r\n     * @param input\r\n     */\r\n    CryptoOps.prototype.base64Decode = function (input) {\r\n        return this.b64Decode.decode(input);\r\n    };\r\n    /**\r\n     * Generates PKCE codes used in Authorization Code Flow.\r\n     */\r\n    CryptoOps.prototype.generatePkceCodes = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.pkceGenerator.generateCodes()];\r\n            });\r\n        });\r\n    };\r\n    return CryptoOps;\r\n}());\n\n/**\r\n * Abstract class which defines operations for a browser interaction handling class.\r\n */\r\nvar InteractionHandler = /** @class */ (function () {\r\n    function InteractionHandler(authCodeModule, storageImpl) {\r\n        this.authModule = authCodeModule;\r\n        this.browserStorage = storageImpl;\r\n    }\r\n    /**\r\n     * Function to handle response parameters from hash.\r\n     * @param locationHash\r\n     */\r\n    InteractionHandler.prototype.handleCodeResponse = function (locationHash) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var requestState, authCode, cachedNonceKey, cachedNonce, tokenResponse;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // Check that location hash isn't empty.\r\n                        if (StringUtils.isEmpty(locationHash)) {\r\n                            throw BrowserAuthError.createEmptyHashError(locationHash);\r\n                        }\r\n                        requestState = this.browserStorage.getItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.REQUEST_STATE), CacheSchemaType.TEMPORARY);\r\n                        authCode = this.authModule.handleFragmentResponse(locationHash, requestState);\r\n                        cachedNonceKey = this.browserStorage.generateNonceKey(requestState);\r\n                        cachedNonce = this.browserStorage.getItem(this.browserStorage.generateCacheKey(cachedNonceKey), CacheSchemaType.TEMPORARY);\r\n                        // Assign code to request\r\n                        this.authCodeRequest.code = authCode;\r\n                        return [4 /*yield*/, this.authModule.acquireToken(this.authCodeRequest, cachedNonce, requestState)];\r\n                    case 1:\r\n                        tokenResponse = _a.sent();\r\n                        this.browserStorage.cleanRequest();\r\n                        return [2 /*return*/, tokenResponse];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return InteractionHandler;\r\n}());\n\nvar RedirectHandler = /** @class */ (function (_super) {\r\n    __extends(RedirectHandler, _super);\r\n    function RedirectHandler() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Redirects window to given URL.\r\n     * @param urlNavigate\r\n     */\r\n    RedirectHandler.prototype.initiateAuthRequest = function (requestUrl, authCodeRequest, redirectStartPage, browserCrypto) {\r\n        // Navigate if valid URL\r\n        if (!StringUtils.isEmpty(requestUrl)) {\r\n            // Cache start page, returns to this page after redirectUri if navigateToLoginRequestUrl is true\r\n            if (redirectStartPage) {\r\n                this.browserStorage.setItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.ORIGIN_URI), redirectStartPage, CacheSchemaType.TEMPORARY);\r\n            }\r\n            // Set interaction status in the library.\r\n            this.browserStorage.setItem(this.browserStorage.generateCacheKey(BrowserConstants.INTERACTION_STATUS_KEY), BrowserConstants.INTERACTION_IN_PROGRESS_VALUE, CacheSchemaType.TEMPORARY);\r\n            this.browserStorage.cacheCodeRequest(authCodeRequest, browserCrypto);\r\n            this.authModule.logger.infoPii(\"Navigate to:\" + requestUrl);\r\n            var isIframedApp = BrowserUtils.isInIframe();\r\n            if (isIframedApp) {\r\n                // If we are not in top frame, we shouldn't redirect. This is also handled by the service.\r\n                throw BrowserAuthError.createRedirectInIframeError(isIframedApp);\r\n            }\r\n            // Navigate window to request URL\r\n            BrowserUtils.navigateWindow(requestUrl);\r\n        }\r\n        else {\r\n            // Throw error if request URL is empty.\r\n            this.authModule.logger.info(\"Navigate url is empty\");\r\n            throw BrowserAuthError.createEmptyNavigationUriError();\r\n        }\r\n        // Return this window handle. Not used for redirect, but needed for API definition.\r\n        return window;\r\n    };\r\n    /**\r\n     * Handle authorization code response in the window.\r\n     * @param hash\r\n     */\r\n    RedirectHandler.prototype.handleCodeResponse = function (locationHash, browserCrypto) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var requestState, authCode, cachedNonceKey, cachedNonce, tokenResponse;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // Check that location hash isn't empty.\r\n                        if (StringUtils.isEmpty(locationHash)) {\r\n                            throw BrowserAuthError.createEmptyHashError(locationHash);\r\n                        }\r\n                        // Interaction is completed - remove interaction status.\r\n                        this.browserStorage.removeItem(this.browserStorage.generateCacheKey(BrowserConstants.INTERACTION_STATUS_KEY));\r\n                        requestState = this.browserStorage.getItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.REQUEST_STATE), CacheSchemaType.TEMPORARY);\r\n                        authCode = this.authModule.handleFragmentResponse(locationHash, requestState);\r\n                        cachedNonceKey = this.browserStorage.generateNonceKey(requestState);\r\n                        cachedNonce = this.browserStorage.getItem(this.browserStorage.generateCacheKey(cachedNonceKey), CacheSchemaType.TEMPORARY);\r\n                        this.authCodeRequest = this.browserStorage.getCachedRequest(requestState, browserCrypto);\r\n                        this.authCodeRequest.code = authCode;\r\n                        return [4 /*yield*/, this.authModule.acquireToken(this.authCodeRequest, cachedNonce, requestState)];\r\n                    case 1:\r\n                        tokenResponse = _a.sent();\r\n                        this.browserStorage.cleanRequest();\r\n                        return [2 /*return*/, tokenResponse];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return RedirectHandler;\r\n}(InteractionHandler));\n\n/**\r\n * This class implements the interaction handler base class for browsers. It is written specifically for handling\r\n * popup window scenarios. It includes functions for monitoring the popup window for a hash.\r\n */\r\nvar PopupHandler = /** @class */ (function (_super) {\r\n    __extends(PopupHandler, _super);\r\n    function PopupHandler(authCodeModule, storageImpl) {\r\n        var _this = _super.call(this, authCodeModule, storageImpl) || this;\r\n        // Properly sets this reference for the unload event.\r\n        _this.unloadWindow = _this.unloadWindow.bind(_this);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Opens a popup window with given request Url.\r\n     * @param requestUrl\r\n     */\r\n    PopupHandler.prototype.initiateAuthRequest = function (requestUrl, authCodeRequest) {\r\n        // Check that request url is not empty.\r\n        if (!StringUtils.isEmpty(requestUrl)) {\r\n            // Save auth code request\r\n            this.authCodeRequest = authCodeRequest;\r\n            // Set interaction status in the library.\r\n            this.browserStorage.setItem(this.browserStorage.generateCacheKey(BrowserConstants.INTERACTION_STATUS_KEY), BrowserConstants.INTERACTION_IN_PROGRESS_VALUE, CacheSchemaType.TEMPORARY);\r\n            this.authModule.logger.infoPii(\"Navigate to:\" + requestUrl);\r\n            // Open the popup window to requestUrl.\r\n            return this.openPopup(requestUrl, Constants.LIBRARY_NAME, BrowserConstants.POPUP_WIDTH, BrowserConstants.POPUP_HEIGHT);\r\n        }\r\n        else {\r\n            // Throw error if request URL is empty.\r\n            this.authModule.logger.error(\"Navigate url is empty\");\r\n            throw BrowserAuthError.createEmptyNavigationUriError();\r\n        }\r\n    };\r\n    /**\r\n     * Monitors a window until it loads a url with a known hash, or hits a specified timeout.\r\n     * @param popupWindow - window that is being monitored\r\n     * @param timeout - milliseconds until timeout\r\n     * @param urlNavigate - url that was navigated to\r\n     */\r\n    PopupHandler.prototype.monitorPopupForHash = function (popupWindow, timeout) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var maxTicks = timeout / BrowserConstants.POLL_INTERVAL_MS;\r\n            var ticks = 0;\r\n            var intervalId = setInterval(function () {\r\n                if (popupWindow.closed) {\r\n                    // Window is closed\r\n                    _this.cleanPopup();\r\n                    clearInterval(intervalId);\r\n                    reject(BrowserAuthError.createUserCancelledError());\r\n                    return;\r\n                }\r\n                var href;\r\n                try {\r\n                    /*\r\n                     * Will throw if cross origin,\r\n                     * which should be caught and ignored\r\n                     * since we need the interval to keep running while on STS UI.\r\n                     */\r\n                    href = popupWindow.location.href;\r\n                }\r\n                catch (e) { }\r\n                // Don't process blank pages or cross domain\r\n                if (!href || href === \"about:blank\") {\r\n                    return;\r\n                }\r\n                // Only run clock when we are on same domain\r\n                ticks++;\r\n                if (UrlString.hashContainsKnownProperties(href)) {\r\n                    // Success case\r\n                    var contentHash = popupWindow.location.hash;\r\n                    _this.cleanPopup(popupWindow);\r\n                    clearInterval(intervalId);\r\n                    resolve(contentHash);\r\n                    return;\r\n                }\r\n                else if (ticks > maxTicks) {\r\n                    // Timeout error\r\n                    _this.cleanPopup(popupWindow);\r\n                    clearInterval(intervalId);\r\n                    reject(BrowserAuthError.createMonitorWindowTimeoutError());\r\n                    return;\r\n                }\r\n            }, BrowserConstants.POLL_INTERVAL_MS);\r\n        });\r\n    };\r\n    /**\r\n     * @hidden\r\n     *\r\n     * Configures popup window for login.\r\n     *\r\n     * @param urlNavigate\r\n     * @param title\r\n     * @param popUpWidth\r\n     * @param popUpHeight\r\n     * @ignore\r\n     * @hidden\r\n     */\r\n    PopupHandler.prototype.openPopup = function (urlNavigate, title, popUpWidth, popUpHeight) {\r\n        try {\r\n            /**\r\n             * adding winLeft and winTop to account for dual monitor\r\n             * using screenLeft and screenTop for IE8 and earlier\r\n             */\r\n            var winLeft = window.screenLeft ? window.screenLeft : window.screenX;\r\n            var winTop = window.screenTop ? window.screenTop : window.screenY;\r\n            /**\r\n             * window.innerWidth displays browser window\"s height and width excluding toolbars\r\n             * using document.documentElement.clientWidth for IE8 and earlier\r\n             */\r\n            var width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n            var height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\r\n            var left = Math.max(0, ((width / 2) - (popUpWidth / 2)) + winLeft);\r\n            var top_1 = Math.max(0, ((height / 2) - (popUpHeight / 2)) + winTop);\r\n            // open the window\r\n            var popupWindow = window.open(urlNavigate, title, \"width=\" + popUpWidth + \", height=\" + popUpHeight + \", top=\" + top_1 + \", left=\" + left);\r\n            if (!popupWindow) {\r\n                throw BrowserAuthError.createEmptyWindowCreatedError();\r\n            }\r\n            if (popupWindow.focus) {\r\n                popupWindow.focus();\r\n            }\r\n            this.currentWindow = popupWindow;\r\n            window.addEventListener(\"beforeunload\", this.unloadWindow);\r\n            return popupWindow;\r\n        }\r\n        catch (e) {\r\n            this.authModule.logger.error(\"error opening popup \" + e.message);\r\n            this.browserStorage.removeItem(this.browserStorage.generateCacheKey(BrowserConstants.INTERACTION_STATUS_KEY));\r\n            throw BrowserAuthError.createPopupWindowError(e.toString());\r\n        }\r\n    };\r\n    /**\r\n     * Event callback to unload main window.\r\n     */\r\n    PopupHandler.prototype.unloadWindow = function (e) {\r\n        this.browserStorage.cleanRequest();\r\n        this.currentWindow.close();\r\n        // Guarantees browser unload will happen, so no other errors will be thrown.\r\n        delete e[\"returnValue\"];\r\n    };\r\n    /**\r\n     * Closes popup, removes any state vars created during popup calls.\r\n     * @param popupWindow\r\n     */\r\n    PopupHandler.prototype.cleanPopup = function (popupWindow) {\r\n        if (popupWindow) {\r\n            // Close window.\r\n            popupWindow.close();\r\n        }\r\n        // Remove window unload function\r\n        window.removeEventListener(\"beforeunload\", this.unloadWindow);\r\n        // Interaction is completed - remove interaction status.\r\n        this.browserStorage.removeItem(this.browserStorage.generateCacheKey(BrowserConstants.INTERACTION_STATUS_KEY));\r\n    };\r\n    return PopupHandler;\r\n}(InteractionHandler));\n\nvar SilentHandler = /** @class */ (function (_super) {\r\n    __extends(SilentHandler, _super);\r\n    function SilentHandler(authCodeModule, storageImpl, configuredLoadFrameTimeout) {\r\n        var _this = _super.call(this, authCodeModule, storageImpl) || this;\r\n        _this.loadFrameTimeout = configuredLoadFrameTimeout;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a hidden iframe to given URL using user-requested scopes as an id.\r\n     * @param urlNavigate\r\n     * @param userRequestScopes\r\n     */\r\n    SilentHandler.prototype.initiateAuthRequest = function (requestUrl, authCodeRequest, userRequestScopes) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var frameName, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (StringUtils.isEmpty(requestUrl)) {\r\n                            // Throw error if request URL is empty.\r\n                            this.authModule.logger.info(\"Navigate url is empty\");\r\n                            throw BrowserAuthError.createEmptyNavigationUriError();\r\n                        }\r\n                        // Save auth code request\r\n                        this.authCodeRequest = authCodeRequest;\r\n                        frameName = userRequestScopes ? \"msalTokenFrame\" + userRequestScopes : \"msalTokenFrame\";\r\n                        if (!this.loadFrameTimeout) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.loadFrame(requestUrl, frameName)];\r\n                    case 1:\r\n                        _a = _b.sent();\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        _a = this.loadFrameSync(requestUrl, frameName);\r\n                        _b.label = 3;\r\n                    case 3: return [2 /*return*/, _a];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Monitors an iframe content window until it loads a url with a known hash, or hits a specified timeout.\r\n     * @param iframe\r\n     * @param timeout\r\n     */\r\n    SilentHandler.prototype.monitorIframeForHash = function (iframe, timeout) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            /*\r\n             * Polling for iframes can be purely timing based,\r\n             * since we don't need to account for interaction.\r\n             */\r\n            var nowMark = window.performance.now();\r\n            var timeoutMark = nowMark + timeout;\r\n            var intervalId = setInterval(function () {\r\n                if (window.performance.now() > timeoutMark) {\r\n                    _this.removeHiddenIframe(iframe);\r\n                    clearInterval(intervalId);\r\n                    reject(BrowserAuthError.createMonitorWindowTimeoutError());\r\n                    return;\r\n                }\r\n                var href;\r\n                try {\r\n                    /*\r\n                     * Will throw if cross origin,\r\n                     * which should be caught and ignored\r\n                     * since we need the interval to keep running while on STS UI.\r\n                     */\r\n                    href = iframe.contentWindow.location.href;\r\n                }\r\n                catch (e) { }\r\n                if (UrlString.hashContainsKnownProperties(href)) {\r\n                    // Success case\r\n                    var contentHash = iframe.contentWindow.location.hash;\r\n                    _this.removeHiddenIframe(iframe);\r\n                    clearInterval(intervalId);\r\n                    resolve(contentHash);\r\n                    return;\r\n                }\r\n            }, BrowserConstants.POLL_INTERVAL_MS);\r\n        });\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Loads iframe with authorization endpoint URL\r\n     * @ignore\r\n     */\r\n    SilentHandler.prototype.loadFrame = function (urlNavigate, frameName) {\r\n        /*\r\n         * This trick overcomes iframe navigation in IE\r\n         * IE does not load the page consistently in iframe\r\n         */\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            setTimeout(function () {\r\n                var frameHandle = _this.loadFrameSync(urlNavigate, frameName);\r\n                if (!frameHandle) {\r\n                    reject(\"Unable to load iframe with name: \" + frameName);\r\n                    return;\r\n                }\r\n                resolve(frameHandle);\r\n            }, _this.loadFrameTimeout);\r\n        });\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Loads the iframe synchronously when the navigateTimeFrame is set to `0`\r\n     * @param urlNavigate\r\n     * @param frameName\r\n     * @param logger\r\n     */\r\n    SilentHandler.prototype.loadFrameSync = function (urlNavigate, frameName) {\r\n        var frameHandle = this.getHiddenIframe(frameName);\r\n        // returning to handle null in loadFrame, also to avoid null object access errors\r\n        if (!frameHandle) {\r\n            return null;\r\n        }\r\n        else if (frameHandle.src === \"\" || frameHandle.src === \"about:blank\") {\r\n            frameHandle.src = urlNavigate;\r\n        }\r\n        return frameHandle;\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Creates a new hidden iframe or gets an existing one for silent token renewal.\r\n     * @ignore\r\n     */\r\n    SilentHandler.prototype.getHiddenIframe = function (iframeId) {\r\n        if (typeof iframeId === \"undefined\") {\r\n            return null;\r\n        }\r\n        var authFrame = document.getElementById(iframeId);\r\n        if (!authFrame) {\r\n            if (document.createElement &&\r\n                document.documentElement &&\r\n                (window.navigator.userAgent.indexOf(\"MSIE 5.0\") === -1)) {\r\n                var ifr = document.createElement(\"iframe\");\r\n                ifr.setAttribute(\"id\", iframeId);\r\n                ifr.style.visibility = \"hidden\";\r\n                ifr.style.position = \"absolute\";\r\n                ifr.style.width = ifr.style.height = \"0\";\r\n                ifr.style.border = \"0\";\r\n                ifr.setAttribute(\"sandbox\", \"allow-scripts allow-same-origin allow-forms\");\r\n                authFrame = document.getElementsByTagName(\"body\")[0].appendChild(ifr);\r\n            }\r\n            else if (document.body && document.body.insertAdjacentHTML) {\r\n                document.body.insertAdjacentHTML(\"beforeend\", \"<iframe name='\" + iframeId + \"' id='\" + iframeId + \"' style='display:none'></iframe>\");\r\n            }\r\n            if (window.frames && window.frames[iframeId]) {\r\n                authFrame = window.frames[iframeId];\r\n            }\r\n        }\r\n        return authFrame;\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Removes a hidden iframe from the page.\r\n     * @ignore\r\n     */\r\n    SilentHandler.prototype.removeHiddenIframe = function (iframe) {\r\n        if (document.body === iframe.parentNode) {\r\n            document.body.removeChild(iframe);\r\n        }\r\n    };\r\n    return SilentHandler;\r\n}(InteractionHandler));\n\nvar version$1 = \"2.0.1\";\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar BrowserProtocolUtils = /** @class */ (function () {\r\n    function BrowserProtocolUtils() {\r\n    }\r\n    /**\r\n     * Extracts the BrowserStateObject from the state string.\r\n     * @param browserCrypto\r\n     * @param state\r\n     */\r\n    BrowserProtocolUtils.extractBrowserRequestState = function (browserCrypto, state) {\r\n        if (StringUtils.isEmpty(state)) {\r\n            return null;\r\n        }\r\n        try {\r\n            var requestStateObj = ProtocolUtils.parseRequestState(browserCrypto, state);\r\n            return requestStateObj.libraryState.meta;\r\n        }\r\n        catch (e) {\r\n            throw ClientAuthError.createInvalidStateError(state, e);\r\n        }\r\n    };\r\n    return BrowserProtocolUtils;\r\n}());\n\n/**\r\n * The PublicClientApplication class is the object exposed by the library to perform authentication and authorization functions in Single Page Applications\r\n * to obtain JWT tokens as described in the OAuth 2.0 Authorization Code Flow with PKCE specification.\r\n */\r\nvar PublicClientApplication = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * Constructor for the PublicClientApplication used to instantiate the PublicClientApplication object\r\n     *\r\n     * Important attributes in the Configuration object for auth are:\r\n     * - clientID: the application ID of your application. You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\r\n     * - authority: the authority URL for your application.\r\n     * - redirect_uri: the uri of your application registered in the portal.\r\n     *\r\n     * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\r\n     * It is of the form https://login.microsoftonline.com/{Enter_the_Tenant_Info_Here}\r\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\r\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\r\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\r\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\r\n     *\r\n     * In Azure B2C, authority is of the form https://{instance}/tfp/{tenant}/{policyName}/\r\n     * Full B2C functionality will be available in this library in future versions.\r\n     *\r\n     * @param {@link (Configuration:type)} configuration object for the MSAL PublicClientApplication instance\r\n     */\r\n    function PublicClientApplication(configuration) {\r\n        // Set the configuration.\r\n        this.config = buildConfiguration(configuration);\r\n        // Initialize the crypto class.\r\n        this.browserCrypto = new CryptoOps();\r\n        // Initialize the network module class.\r\n        this.networkClient = this.config.system.networkClient;\r\n        // Initialize the browser storage class.\r\n        this.browserStorage = new BrowserStorage(this.config.auth.clientId, this.config.cache);\r\n        // Initialize logger\r\n        this.logger = new Logger(this.config.system.loggerOptions);\r\n        // Initialize default authority instance\r\n        TrustedAuthority.setTrustedAuthoritiesFromConfig(this.config.auth.knownAuthorities, this.config.auth.cloudDiscoveryMetadata);\r\n        this.defaultAuthority = null;\r\n    }\r\n    // #region Redirect Flow\r\n    /**\r\n     * Event handler function which allows users to fire events after the PublicClientApplication object\r\n     * has loaded during redirect flows. This should be invoked on all page loads involved in redirect\r\n     * auth flows.\r\n     * @returns {Promise.<AuthenticationResult | null>} token response or null. If the return value is null, then no auth redirect was detected.\r\n     */\r\n    PublicClientApplication.prototype.handleRedirectPromise = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.handleRedirectResponse()];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Checks if navigateToLoginRequestUrl is set, and:\r\n     * - if true, performs logic to cache and navigate\r\n     * - if false, handles hash string and parses response\r\n     */\r\n    PublicClientApplication.prototype.handleRedirectResponse = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var responseHash, loginRequestUrl, loginRequestUrlNormalized, currentUrlNormalized, hashKey, homepage;\r\n            return __generator(this, function (_a) {\r\n                responseHash = this.getRedirectResponseHash();\r\n                if (!responseHash) {\r\n                    // Not a recognized server response hash or hash not associated with a redirect request\r\n                    return [2 /*return*/, null];\r\n                }\r\n                loginRequestUrl = this.browserStorage.getItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.ORIGIN_URI), CacheSchemaType.TEMPORARY);\r\n                loginRequestUrlNormalized = UrlString.removeHashFromUrl(loginRequestUrl || \"\");\r\n                currentUrlNormalized = UrlString.removeHashFromUrl(window.location.href);\r\n                if (loginRequestUrlNormalized === currentUrlNormalized && this.config.auth.navigateToLoginRequestUrl) {\r\n                    if (loginRequestUrl.indexOf(\"#\") > -1) {\r\n                        // Replace current hash with non-msal hash, if present\r\n                        BrowserUtils.replaceHash(loginRequestUrl);\r\n                    }\r\n                    // We are on the page we need to navigate to - handle hash\r\n                    return [2 /*return*/, this.handleHash(responseHash)];\r\n                }\r\n                else if (!this.config.auth.navigateToLoginRequestUrl) {\r\n                    return [2 /*return*/, this.handleHash(responseHash)];\r\n                }\r\n                else if (!BrowserUtils.isInIframe()) {\r\n                    hashKey = this.browserStorage.generateCacheKey(TemporaryCacheKeys.URL_HASH);\r\n                    this.browserStorage.setItem(hashKey, responseHash, CacheSchemaType.TEMPORARY);\r\n                    if (!loginRequestUrl || loginRequestUrl === \"null\") {\r\n                        homepage = BrowserUtils.getHomepage();\r\n                        // Cache the homepage under ORIGIN_URI to ensure cached hash is processed on homepage\r\n                        this.browserStorage.setItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.ORIGIN_URI), homepage, CacheSchemaType.TEMPORARY);\r\n                        this.logger.warning(\"Unable to get valid login request url from cache, redirecting to home page\");\r\n                        BrowserUtils.navigateWindow(homepage, true);\r\n                    }\r\n                    else {\r\n                        // Navigate to page that initiated the redirect request\r\n                        BrowserUtils.navigateWindow(loginRequestUrl, true);\r\n                    }\r\n                }\r\n                return [2 /*return*/, null];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets the response hash for a redirect request\r\n     * Returns null if interactionType in the state value is not \"redirect\" or the hash does not contain known properties\r\n     * @returns {string}\r\n     */\r\n    PublicClientApplication.prototype.getRedirectResponseHash = function () {\r\n        // Get current location hash from window or cache.\r\n        var hash = window.location.hash;\r\n        var isResponseHash = UrlString.hashContainsKnownProperties(hash);\r\n        var cachedHash = this.browserStorage.getItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.URL_HASH), CacheSchemaType.TEMPORARY);\r\n        this.browserStorage.removeItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.URL_HASH));\r\n        var responseHash = isResponseHash ? hash : cachedHash;\r\n        if (responseHash) {\r\n            // Deserialize hash fragment response parameters.\r\n            var serverParams = UrlString.getDeserializedHash(responseHash);\r\n            var platformStateObj = BrowserProtocolUtils.extractBrowserRequestState(this.browserCrypto, serverParams.state);\r\n            if (platformStateObj.interactionType !== InteractionType.REDIRECT) {\r\n                return null;\r\n            }\r\n            else {\r\n                BrowserUtils.clearHash();\r\n                return responseHash;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Checks if hash exists and handles in window.\r\n     * @param responseHash\r\n     * @param interactionHandler\r\n     */\r\n    PublicClientApplication.prototype.handleHash = function (responseHash) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var encodedTokenRequest, cachedRequest, serverTelemetryManager, currentAuthority, authClient, interactionHandler, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // There is no hash - clean cache and return null.\r\n                        if (StringUtils.isEmpty(responseHash)) {\r\n                            this.browserStorage.cleanRequest();\r\n                            return [2 /*return*/, null];\r\n                        }\r\n                        encodedTokenRequest = this.browserStorage.getItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS), CacheSchemaType.TEMPORARY);\r\n                        cachedRequest = JSON.parse(this.browserCrypto.base64Decode(encodedTokenRequest));\r\n                        serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.handleRedirectPromise, cachedRequest.correlationId);\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        currentAuthority = this.browserStorage.getCachedAuthority();\r\n                        return [4 /*yield*/, this.createAuthCodeClient(serverTelemetryManager, currentAuthority)];\r\n                    case 2:\r\n                        authClient = _a.sent();\r\n                        interactionHandler = new RedirectHandler(authClient, this.browserStorage);\r\n                        return [2 /*return*/, interactionHandler.handleCodeResponse(responseHash, this.browserCrypto)];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        serverTelemetryManager.cacheFailedRequest(e_1);\r\n                        this.browserStorage.cleanRequest();\r\n                        throw e_1;\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Use when initiating the login process by redirecting the user's browser to the authorization endpoint. This function redirects the page, so\r\n     * any code that follows this function will not execute.\r\n     *\r\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\r\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\r\n     *\r\n     * @param {@link (RedirectRequest:type)}\r\n     */\r\n    PublicClientApplication.prototype.loginRedirect = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.acquireTokenRedirect(request || DEFAULT_REQUEST)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Use when you want to obtain an access_token for your API by redirecting the user's browser window to the authorization endpoint. This function redirects\r\n     * the page, so any code that follows this function will not execute.\r\n     *\r\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\r\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\r\n     *\r\n     * @param {@link (RedirectRequest:type)}\r\n     */\r\n    PublicClientApplication.prototype.acquireTokenRedirect = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var validRequest, serverTelemetryManager, authCodeRequest, authClient, interactionHandler, navigateUrl, redirectStartPage, e_2;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        validRequest = this.preflightInteractiveRequest(request, InteractionType.REDIRECT);\r\n                        serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenRedirect, validRequest.correlationId);\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 5, , 6]);\r\n                        return [4 /*yield*/, this.initializeAuthorizationCodeRequest(validRequest)];\r\n                    case 2:\r\n                        authCodeRequest = _a.sent();\r\n                        return [4 /*yield*/, this.createAuthCodeClient(serverTelemetryManager, validRequest.authority)];\r\n                    case 3:\r\n                        authClient = _a.sent();\r\n                        interactionHandler = new RedirectHandler(authClient, this.browserStorage);\r\n                        return [4 /*yield*/, authClient.getAuthCodeUrl(validRequest)];\r\n                    case 4:\r\n                        navigateUrl = _a.sent();\r\n                        redirectStartPage = (request && request.redirectStartPage) || window.location.href;\r\n                        // Show the UI once the url has been created. Response will come back in the hash, which will be handled in the handleRedirectCallback function.\r\n                        interactionHandler.initiateAuthRequest(navigateUrl, authCodeRequest, redirectStartPage, this.browserCrypto);\r\n                        return [3 /*break*/, 6];\r\n                    case 5:\r\n                        e_2 = _a.sent();\r\n                        serverTelemetryManager.cacheFailedRequest(e_2);\r\n                        this.browserStorage.cleanRequest();\r\n                        throw e_2;\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // #endregion\r\n    // #region Popup Flow\r\n    /**\r\n     * Use when initiating the login process via opening a popup window in the user's browser\r\n     *\r\n     * @param {@link (PopupRequest:type)}\r\n     *\r\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n     */\r\n    PublicClientApplication.prototype.loginPopup = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.acquireTokenPopup(request || DEFAULT_REQUEST)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Use when you want to obtain an access_token for your API via opening a popup window in the user's browser\r\n     * @param {@link (PopupRequest:type)}\r\n     *\r\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n     */\r\n    PublicClientApplication.prototype.acquireTokenPopup = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var validRequest, serverTelemetryManager, authCodeRequest, authClient, navigateUrl, interactionHandler, popupWindow, hash, e_3;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        validRequest = this.preflightInteractiveRequest(request, InteractionType.POPUP);\r\n                        serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenPopup, validRequest.correlationId);\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 7, , 8]);\r\n                        return [4 /*yield*/, this.initializeAuthorizationCodeRequest(validRequest)];\r\n                    case 2:\r\n                        authCodeRequest = _a.sent();\r\n                        return [4 /*yield*/, this.createAuthCodeClient(serverTelemetryManager, validRequest.authority)];\r\n                    case 3:\r\n                        authClient = _a.sent();\r\n                        return [4 /*yield*/, authClient.getAuthCodeUrl(validRequest)];\r\n                    case 4:\r\n                        navigateUrl = _a.sent();\r\n                        interactionHandler = new PopupHandler(authClient, this.browserStorage);\r\n                        popupWindow = interactionHandler.initiateAuthRequest(navigateUrl, authCodeRequest);\r\n                        return [4 /*yield*/, interactionHandler.monitorPopupForHash(popupWindow, this.config.system.windowHashTimeout)];\r\n                    case 5:\r\n                        hash = _a.sent();\r\n                        return [4 /*yield*/, interactionHandler.handleCodeResponse(hash)];\r\n                    case 6: \r\n                    // Handle response from hash string.\r\n                    return [2 /*return*/, _a.sent()];\r\n                    case 7:\r\n                        e_3 = _a.sent();\r\n                        serverTelemetryManager.cacheFailedRequest(e_3);\r\n                        this.browserStorage.cleanRequest();\r\n                        throw e_3;\r\n                    case 8: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // #endregion\r\n    // #region Silent Flow\r\n    /**\r\n     * This function uses a hidden iframe to fetch an authorization code from the eSTS. There are cases where this may not work:\r\n     * - Any browser using a form of Intelligent Tracking Prevention\r\n     * - If there is not an established session with the service\r\n     *\r\n     * In these cases, the request must be done inside a popup or full frame redirect.\r\n     *\r\n     * For the cases where interaction is required, you cannot send a request with prompt=none.\r\n     *\r\n     * If your refresh token has expired, you can use this function to fetch a new set of tokens silently as long as\r\n     * you session on the server still exists.\r\n     * @param {@link AuthorizationUrlRequest}\r\n     *\r\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n     */\r\n    PublicClientApplication.prototype.ssoSilent = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var silentRequest, serverTelemetryManager, authCodeRequest, scopeString, authClient, navigateUrl, e_4;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // block the reload if it occurred inside a hidden iframe\r\n                        BrowserUtils.blockReloadInHiddenIframes();\r\n                        // Check that we have some SSO data\r\n                        if (StringUtils.isEmpty(request.loginHint) && StringUtils.isEmpty(request.sid)) {\r\n                            throw BrowserAuthError.createSilentSSOInsufficientInfoError();\r\n                        }\r\n                        // Check that prompt is set to none, throw error if it is set to anything else.\r\n                        if (request.prompt && request.prompt !== PromptValue.NONE) {\r\n                            throw BrowserAuthError.createSilentPromptValueError(request.prompt);\r\n                        }\r\n                        silentRequest = this.initializeAuthorizationRequest(__assign(__assign({}, request), { prompt: PromptValue.NONE }), InteractionType.SILENT);\r\n                        serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.ssoSilent, silentRequest.correlationId);\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 6, , 7]);\r\n                        return [4 /*yield*/, this.initializeAuthorizationCodeRequest(silentRequest)];\r\n                    case 2:\r\n                        authCodeRequest = _a.sent();\r\n                        scopeString = silentRequest.scopes ? silentRequest.scopes.join(\" \") : \"\";\r\n                        return [4 /*yield*/, this.createAuthCodeClient(serverTelemetryManager, silentRequest.authority)];\r\n                    case 3:\r\n                        authClient = _a.sent();\r\n                        return [4 /*yield*/, authClient.getAuthCodeUrl(silentRequest)];\r\n                    case 4:\r\n                        navigateUrl = _a.sent();\r\n                        return [4 /*yield*/, this.silentTokenHelper(navigateUrl, authCodeRequest, authClient, scopeString)];\r\n                    case 5: return [2 /*return*/, _a.sent()];\r\n                    case 6:\r\n                        e_4 = _a.sent();\r\n                        serverTelemetryManager.cacheFailedRequest(e_4);\r\n                        this.browserStorage.cleanRequest();\r\n                        throw e_4;\r\n                    case 7: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Use this function to obtain a token before every call to the API / resource provider\r\n     *\r\n     * MSAL return's a cached token when available\r\n     * Or it send's a request to the STS to obtain a new token using a refresh token.\r\n     *\r\n     * @param {@link (SilentRequest:type)}\r\n     *\r\n     * To renew idToken, please pass clientId as the only scope in the Authentication Parameters\r\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n     *\r\n     */\r\n    PublicClientApplication.prototype.acquireTokenSilent = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var silentRequest, serverTelemetryManager, silentAuthClient, e_5, isServerError, isInteractionRequiredError, isInvalidGrantError, silentAuthUrlRequest, authCodeRequest, authClient, navigateUrl, scopeString, e_6;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // block the reload if it occurred inside a hidden iframe\r\n                        BrowserUtils.blockReloadInHiddenIframes();\r\n                        silentRequest = __assign(__assign({}, request), this.initializeBaseRequest(request));\r\n                        serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenSilent_silentFlow, silentRequest.correlationId);\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 4, , 12]);\r\n                        return [4 /*yield*/, this.createSilentFlowClient(serverTelemetryManager, silentRequest.authority)];\r\n                    case 2:\r\n                        silentAuthClient = _a.sent();\r\n                        return [4 /*yield*/, silentAuthClient.acquireToken(silentRequest)];\r\n                    case 3: \r\n                    // Send request to renew token. Auth module will throw errors if token cannot be renewed.\r\n                    return [2 /*return*/, _a.sent()];\r\n                    case 4:\r\n                        e_5 = _a.sent();\r\n                        serverTelemetryManager.cacheFailedRequest(e_5);\r\n                        isServerError = e_5 instanceof ServerError;\r\n                        isInteractionRequiredError = e_5 instanceof InteractionRequiredAuthError;\r\n                        isInvalidGrantError = (e_5.errorCode === BrowserConstants.INVALID_GRANT_ERROR);\r\n                        if (!(isServerError && isInvalidGrantError && !isInteractionRequiredError)) return [3 /*break*/, 11];\r\n                        silentAuthUrlRequest = this.initializeAuthorizationRequest(__assign(__assign({}, silentRequest), { redirectUri: request.redirectUri, prompt: PromptValue.NONE }), InteractionType.SILENT);\r\n                        serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenSilent_authCode, silentAuthUrlRequest.correlationId);\r\n                        _a.label = 5;\r\n                    case 5:\r\n                        _a.trys.push([5, 10, , 11]);\r\n                        return [4 /*yield*/, this.initializeAuthorizationCodeRequest(silentAuthUrlRequest)];\r\n                    case 6:\r\n                        authCodeRequest = _a.sent();\r\n                        return [4 /*yield*/, this.createAuthCodeClient(serverTelemetryManager, silentAuthUrlRequest.authority)];\r\n                    case 7:\r\n                        authClient = _a.sent();\r\n                        return [4 /*yield*/, authClient.getAuthCodeUrl(silentAuthUrlRequest)];\r\n                    case 8:\r\n                        navigateUrl = _a.sent();\r\n                        scopeString = silentAuthUrlRequest.scopes ? silentAuthUrlRequest.scopes.join(\" \") : \"\";\r\n                        return [4 /*yield*/, this.silentTokenHelper(navigateUrl, authCodeRequest, authClient, scopeString)];\r\n                    case 9: return [2 /*return*/, _a.sent()];\r\n                    case 10:\r\n                        e_6 = _a.sent();\r\n                        serverTelemetryManager.cacheFailedRequest(e_6);\r\n                        this.browserStorage.cleanRequest();\r\n                        throw e_6;\r\n                    case 11: throw e_5;\r\n                    case 12: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Helper which acquires an authorization code silently using a hidden iframe from given url\r\n     * using the scopes requested as part of the id, and exchanges the code for a set of OAuth tokens.\r\n     * @param navigateUrl\r\n     * @param userRequestScopes\r\n     */\r\n    PublicClientApplication.prototype.silentTokenHelper = function (navigateUrl, authCodeRequest, authClient, userRequestScopes) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var silentHandler, msalFrame, hash;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        silentHandler = new SilentHandler(authClient, this.browserStorage, this.config.system.loadFrameTimeout);\r\n                        return [4 /*yield*/, silentHandler.initiateAuthRequest(navigateUrl, authCodeRequest, userRequestScopes)];\r\n                    case 1:\r\n                        msalFrame = _a.sent();\r\n                        return [4 /*yield*/, silentHandler.monitorIframeForHash(msalFrame, this.config.system.iframeHashTimeout)];\r\n                    case 2:\r\n                        hash = _a.sent();\r\n                        // Handle response from hash string.\r\n                        return [2 /*return*/, silentHandler.handleCodeResponse(hash)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // #endregion\r\n    // #region Logout\r\n    /**\r\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\r\n     * Default behaviour is to redirect the user to `window.location.href`.\r\n     * @param {@link (EndSessionRequest:type)}\r\n     */\r\n    PublicClientApplication.prototype.logout = function (logoutRequest) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var validLogoutRequest, authClient, logoutUri;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\r\n                        return [4 /*yield*/, this.createAuthCodeClient(null, validLogoutRequest && validLogoutRequest.authority)];\r\n                    case 1:\r\n                        authClient = _a.sent();\r\n                        logoutUri = authClient.getLogoutUri(validLogoutRequest);\r\n                        BrowserUtils.navigateWindow(logoutUri);\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // #endregion\r\n    // #region Account APIs\r\n    /**\r\n     * Returns all accounts that MSAL currently has data for.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no state is found\r\n     * @returns {@link AccountInfo[]} - Array of account objects in cache\r\n     */\r\n    PublicClientApplication.prototype.getAllAccounts = function () {\r\n        return this.browserStorage.getAllAccounts();\r\n    };\r\n    /**\r\n     * Returns the signed in account matching username.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no state is found\r\n     * @returns {@link AccountInfo} - the account object stored in MSAL\r\n     */\r\n    PublicClientApplication.prototype.getAccountByUsername = function (userName) {\r\n        var allAccounts = this.getAllAccounts();\r\n        return allAccounts && allAccounts.length ? allAccounts.filter(function (accountObj) { return accountObj.username.toLowerCase() === userName.toLowerCase(); })[0] : null;\r\n    };\r\n    // #endregion\r\n    // #region Helpers\r\n    /**\r\n     *\r\n     * Use to get the redirect uri configured in MSAL or null.\r\n     * @returns {string} redirect URL\r\n     *\r\n     */\r\n    PublicClientApplication.prototype.getRedirectUri = function (requestRedirectUri) {\r\n        return requestRedirectUri || this.config.auth.redirectUri || BrowserUtils.getCurrentUri();\r\n    };\r\n    /**\r\n     * Use to get the post logout redirect uri configured in MSAL or null.\r\n     *\r\n     * @returns {string} post logout redirect URL\r\n     */\r\n    PublicClientApplication.prototype.getPostLogoutRedirectUri = function (requestPostLogoutRedirectUri) {\r\n        return requestPostLogoutRedirectUri || this.config.auth.postLogoutRedirectUri || BrowserUtils.getCurrentUri();\r\n    };\r\n    /**\r\n     * Used to get a discovered version of the default authority.\r\n     */\r\n    PublicClientApplication.prototype.getDiscoveredDefaultAuthority = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (!!this.defaultAuthority) return [3 /*break*/, 2];\r\n                        _a = this;\r\n                        return [4 /*yield*/, AuthorityFactory.createDiscoveredInstance(this.config.auth.authority, this.config.system.networkClient)];\r\n                    case 1:\r\n                        _a.defaultAuthority = _b.sent();\r\n                        _b.label = 2;\r\n                    case 2: return [2 /*return*/, this.defaultAuthority];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Helper to check whether interaction is in progress.\r\n     */\r\n    PublicClientApplication.prototype.interactionInProgress = function () {\r\n        // Check whether value in cache is present and equal to expected value\r\n        return this.browserStorage.getItem(this.browserStorage.generateCacheKey(BrowserConstants.INTERACTION_STATUS_KEY), CacheSchemaType.TEMPORARY) === BrowserConstants.INTERACTION_IN_PROGRESS_VALUE;\r\n    };\r\n    /**\r\n     * Creates an Authorization Code Client with the given authority, or the default authority.\r\n     * @param authorityUrl\r\n     */\r\n    PublicClientApplication.prototype.createAuthCodeClient = function (serverTelemetryManager, authorityUrl) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var clientConfig;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getClientConfiguration(serverTelemetryManager, authorityUrl)];\r\n                    case 1:\r\n                        clientConfig = _a.sent();\r\n                        return [2 /*return*/, new AuthorizationCodeClient(clientConfig)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates an Silent Flow Client with the given authority, or the default authority.\r\n     * @param authorityUrl\r\n     */\r\n    PublicClientApplication.prototype.createSilentFlowClient = function (serverTelemetryManager, authorityUrl) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var clientConfig;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getClientConfiguration(serverTelemetryManager, authorityUrl)];\r\n                    case 1:\r\n                        clientConfig = _a.sent();\r\n                        return [2 /*return*/, new SilentFlowClient(clientConfig)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates a Client Configuration object with the given request authority, or the default authority.\r\n     * @param requestAuthority\r\n     */\r\n    PublicClientApplication.prototype.getClientConfiguration = function (serverTelemetryManager, requestAuthority) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var discoveredAuthority, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (!(!StringUtils.isEmpty(requestAuthority) && requestAuthority !== this.config.auth.authority)) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, AuthorityFactory.createDiscoveredInstance(requestAuthority, this.config.system.networkClient)];\r\n                    case 1:\r\n                        _a = _b.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 2: return [4 /*yield*/, this.getDiscoveredDefaultAuthority()];\r\n                    case 3:\r\n                        _a = _b.sent();\r\n                        _b.label = 4;\r\n                    case 4:\r\n                        discoveredAuthority = _a;\r\n                        return [2 /*return*/, {\r\n                                authOptions: {\r\n                                    clientId: this.config.auth.clientId,\r\n                                    authority: discoveredAuthority,\r\n                                    knownAuthorities: this.config.auth.knownAuthorities,\r\n                                    cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata\r\n                                },\r\n                                systemOptions: {\r\n                                    tokenRenewalOffsetSeconds: this.config.system.tokenRenewalOffsetSeconds\r\n                                },\r\n                                loggerOptions: {\r\n                                    loggerCallback: this.config.system.loggerOptions.loggerCallback,\r\n                                    piiLoggingEnabled: this.config.system.loggerOptions.piiLoggingEnabled\r\n                                },\r\n                                cryptoInterface: this.browserCrypto,\r\n                                networkInterface: this.networkClient,\r\n                                storageInterface: this.browserStorage,\r\n                                serverTelemetryManager: serverTelemetryManager,\r\n                                libraryInfo: {\r\n                                    sku: BrowserConstants.MSAL_SKU,\r\n                                    version: version$1,\r\n                                    cpu: \"\",\r\n                                    os: \"\"\r\n                                }\r\n                            }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Helper to validate app environment before making a request.\r\n     */\r\n    PublicClientApplication.prototype.preflightInteractiveRequest = function (request, interactionType) {\r\n        // block the reload if it occurred inside a hidden iframe\r\n        BrowserUtils.blockReloadInHiddenIframes();\r\n        // Check if interaction is in progress. Throw error if true.\r\n        if (this.interactionInProgress()) {\r\n            throw BrowserAuthError.createInteractionInProgressError();\r\n        }\r\n        return this.initializeAuthorizationRequest(request, interactionType);\r\n    };\r\n    /**\r\n     * Initializer function for all request APIs\r\n     * @param request\r\n     */\r\n    PublicClientApplication.prototype.initializeBaseRequest = function (request) {\r\n        var validatedRequest = __assign({}, request);\r\n        if (StringUtils.isEmpty(validatedRequest.authority)) {\r\n            validatedRequest.authority = this.config.auth.authority;\r\n        }\r\n        validatedRequest.correlationId = (request && request.correlationId) || this.browserCrypto.createNewGuid();\r\n        return validatedRequest;\r\n    };\r\n    PublicClientApplication.prototype.initializeServerTelemetryManager = function (apiId, correlationId, forceRefresh) {\r\n        var telemetryPayload = {\r\n            clientId: this.config.auth.clientId,\r\n            correlationId: correlationId,\r\n            apiId: apiId,\r\n            forceRefresh: forceRefresh || false\r\n        };\r\n        return new ServerTelemetryManager(telemetryPayload, this.browserStorage);\r\n    };\r\n    /**\r\n     * Generates a request that will contain the openid and profile scopes.\r\n     * @param request\r\n     */\r\n    PublicClientApplication.prototype.setDefaultScopes = function (request) {\r\n        return __assign(__assign({}, request), { scopes: __spreadArrays(((request && request.scopes) || []), DEFAULT_REQUEST.scopes) });\r\n    };\r\n    /**\r\n     * Helper to initialize required request parameters for interactive APIs and ssoSilent()\r\n     * @param request\r\n     */\r\n    PublicClientApplication.prototype.initializeAuthorizationRequest = function (request, interactionType) {\r\n        var validatedRequest = __assign({}, request);\r\n        validatedRequest.redirectUri = this.getRedirectUri(validatedRequest.redirectUri);\r\n        // Check for ADAL SSO\r\n        if (StringUtils.isEmpty(validatedRequest.loginHint)) {\r\n            // Only check for adal token if no SSO params are being used\r\n            var adalIdTokenString = this.browserStorage.getItem(PersistentCacheKeys.ADAL_ID_TOKEN, CacheSchemaType.TEMPORARY);\r\n            if (!StringUtils.isEmpty(adalIdTokenString)) {\r\n                var adalIdToken = new IdToken(adalIdTokenString, this.browserCrypto);\r\n                this.browserStorage.removeItem(PersistentCacheKeys.ADAL_ID_TOKEN);\r\n                if (adalIdToken.claims && adalIdToken.claims.upn) {\r\n                    validatedRequest.loginHint = adalIdToken.claims.upn;\r\n                }\r\n            }\r\n        }\r\n        var browserState = {\r\n            interactionType: interactionType\r\n        };\r\n        validatedRequest.state = ProtocolUtils.setRequestState(this.browserCrypto, (request && request.state) || \"\", browserState);\r\n        if (StringUtils.isEmpty(validatedRequest.nonce)) {\r\n            validatedRequest.nonce = this.browserCrypto.createNewGuid();\r\n        }\r\n        validatedRequest.responseMode = ResponseMode.FRAGMENT;\r\n        validatedRequest = __assign(__assign({}, validatedRequest), this.initializeBaseRequest(validatedRequest));\r\n        this.browserStorage.updateCacheEntries(validatedRequest.state, validatedRequest.nonce, validatedRequest.authority);\r\n        return __assign(__assign({}, validatedRequest), this.setDefaultScopes(validatedRequest));\r\n    };\r\n    /**\r\n     * Generates an auth code request tied to the url request.\r\n     * @param request\r\n     */\r\n    PublicClientApplication.prototype.initializeAuthorizationCodeRequest = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var generatedPkceParams, authCodeRequest;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.browserCrypto.generatePkceCodes()];\r\n                    case 1:\r\n                        generatedPkceParams = _a.sent();\r\n                        authCodeRequest = __assign(__assign({}, request), { redirectUri: request.redirectUri, code: \"\", codeVerifier: generatedPkceParams.verifier });\r\n                        request.codeChallenge = generatedPkceParams.challenge;\r\n                        request.codeChallengeMethod = Constants.S256_CODE_CHALLENGE_METHOD;\r\n                        return [2 /*return*/, authCodeRequest];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Initializer for the logout request.\r\n     * @param logoutRequest\r\n     */\r\n    PublicClientApplication.prototype.initializeLogoutRequest = function (logoutRequest) {\r\n        var validLogoutRequest = __assign({}, logoutRequest);\r\n        if (StringUtils.isEmpty(validLogoutRequest.authority)) {\r\n            validLogoutRequest.authority = this.config.auth.authority;\r\n        }\r\n        validLogoutRequest.correlationId = (validLogoutRequest && validLogoutRequest.correlationId) || this.browserCrypto.createNewGuid();\r\n        validLogoutRequest.postLogoutRedirectUri = this.getPostLogoutRedirectUri(logoutRequest ? logoutRequest.postLogoutRedirectUri : \"\");\r\n        return validLogoutRequest;\r\n    };\r\n    return PublicClientApplication;\r\n}());\n\nexport { AuthError, AuthErrorMessage, BrowserAuthError, BrowserAuthErrorMessage, BrowserConfigurationAuthError, BrowserConfigurationAuthErrorMessage, InteractionRequiredAuthError, LogLevel, Logger, PublicClientApplication };\n//# sourceMappingURL=index.es.js.map\n"],"sourceRoot":""}