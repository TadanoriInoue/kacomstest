{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/app/scripts/auth/client.ts","webpack:///./src/app/scripts/utils.ts","webpack:///./src/app/scripts/auth/end.ts","webpack:///./node_modules/@microsoft/teams-js/dist/MicrosoftTeams.min.js","webpack:///./node_modules/@azure/msal-browser/dist/index.es.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","client","PublicClientApplication","auth","clientId","authority","navigateToLoginRequestUrl","cache","cacheLocation","html","el","document","createElement","innerHTML","innerText","Error","type","OperationCancelled","super","cancelled","seen","WeakSet","replacer","_","has","add","JSON","stringify","error","delay","ms","cancel","Promise","resolve","reject","timeout","interval","done","cleanup","clearTimeout","clearInterval","checkCancel","setInterval","setTimeout","url","a","URL","pathname","decodeURIComponent","toString","x","teams","initialize","async","response","handleRedirectPromise","authentication","notifyFailure","notifySuccess","err","isUnknownObject","message","e","default","initializeCalled","initializeCompleted","additionalValidOrigins","additionalValidOriginsRegexp","initializeCallbacks","isFramelessWindow","parentMessageQueue","childMessageQueue","nextMessageId","handlers","callbacks","printCapabilityEnabled","GlobalVars","u","data","id","apply","args","func","this","parentWindow","childWindow","f","parentOrigin","childOrigin","g","length","postMessage","shift","b","v","currentWindow","nativeInterface","framelessPostMessage","push","V","h","G","themeChange","themeChangeHandler","fullScreenChange","fullScreenChangeHandler","backButtonPress","backButtonPressHandler","navigateBack","load","loadHandler","beforeUnload","beforeUnloadHandler","changeSettings","changeSettingsHandler","startConversation","onStartConversationHandler","subEntityId","conversationId","channelId","entityId","closeConversation","onCloseConversationHandler","ensureInitialized","arguments","frameContext","processMessage","source","originalEvent","origin","location","validOriginRegExp","test","toLowerCase","closed","Array","isArray","handleParentMessage","processAdditionalValidOrigins","concat","filter","userOriginUrlValidationRegExp","generateRegExpFromUrls","waitForMessageQueue","sendMessageRequestToParent","sendMessageEventToChild","version","validOrigins","frameContexts","settings","content","remove","task","split","replace","RegExp","getGenericOnCompleteHandler","parent","self","opener","addEventListener","onNativeMessage","hostClientType","forEach","_uninitialize","logs","registerGetLogHandler","registerOnSaveHandler","registerOnRemoveHandler","removeEventListener","print","_initialize","enablePrintCapability","ctrlKey","metaKey","keyCode","cancelBubble","preventDefault","stopImmediatePropagation","getContext","registerOnThemeChangeHandler","registerFullScreenHandler","registerBackButtonHandler","registerOnLoadHandler","registerBeforeUnloadHandler","registerChangeSettingsHandler","navigateCrossDomain","getTabInstances","getMruTabInstances","shareDeepLink","subEntityLabel","subEntityWebUrl","executeDeepLink","navigateToTab","setFrameContext","initializeWithFrameContext","setValidityState","getSettings","setSettings","notified","result","ensureNotNotified","getLogHandler","messageForParent","ChildAppWindow","_instance","configurable","messageForChild","ParentAppWindow","bot","menus","enterFullscreen","exitFullscreen","getChatMembers","getConfigSetting","getUserJoinedTeams","openFilePreview","sendCustomMessage","showNotification","sendCustomEvent","registerCustomHandler","uploadCustomApp","conversations","sendQuery","getSupportedCommands","authenticate","Results","Auth","ResponseType","enabled","MenuItem","dropDown","popOver","MenuListType","navBarMenuItemPress","actionMenuItemPress","setModuleView","setUpViews","setNavBarMenu","showActionMenu","title","description","objectUrl","downloadUrl","webPreviewUrl","webEditUrl","baseUrl","editFile","notificationType","openConversation","onCloseConversation","onStartConversation","appInitialization","tasks","notifyAppLoaded","reason","close","width","height","Math","min","outerWidth","outerHeight","href","screenLeft","screenX","screenTop","screenY","open","failureCallback","host","search","indexOf","assign","substr","successCallback","registerAuthenticationHandlers","getAuthToken","resources","getUser","__rest","getOwnPropertySymbols","startTask","updateTask","keys","submitTask","extendStatics","setPrototypeOf","__proto__","__extends","__","constructor","__assign","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","next","rejected","then","__generator","body","y","label","sent","trys","ops","verb","iterator","op","TypeError","pop","__spreadArrays","il","k","j","jl","extendStatics$1","__extends$1","__assign$1","__awaiter$1","__generator$1","LogLevel","AuthErrorMessage","unexpectedError","code","desc","AuthError","_super","errorCode","errorMessage","_this","errorString","createUnexpectedError","errDesc","pkg","ClientAuthErrorMessage","ClientAuthError","createClientInfoDecodingError","caughtError","createClientInfoEmptyError","rawClientInfo","createIdTokenParsingError","caughtExtractionError","createIdTokenNullOrEmptyError","invalidRawTokenString","createEndpointDiscoveryIncompleteError","errDetail","createInvalidAuthorityTypeError","givenUrl","createHashNotDeserializedError","hashParamObj","createInvalidStateError","invalidState","createStateMismatchError","createNonceMismatchError","createAccountMismatchError","createInvalidIdTokenError","idToken","createNoTokensFoundError","createCacheParseError","cacheKey","createUserLoginRequiredError","createMultipleMatchingTokensInCacheError","scope","createMultipleMatchingAccountsInCacheError","createTokenRequestCannotBeMadeError","createAppendEmptyScopeToSetError","givenScope","createRemoveEmptyScopeFromSetError","createAppendScopeSetError","appendError","createEmptyInputScopeSetError","givenScopeSet","createDeviceCodeCancelledError","createDeviceCodeExpiredError","createNoAccountInSilentRequestError","createNullOrUndefinedCacheRecord","createInvalidCacheEnvironmentError","createNoAccountFoundError","createCachePluginError","createNoCryptoObjectError","operationName","createInvalidCacheTypeError","createUnexpectedAccountTypeError","createUnexpectedCredentialTypeError","createInvalidAssertionError","createInvalidCredentialError","StringUtils","decodeJwt","jwtToken","isEmpty","matches","exec","header","JWSPayload","JWSSig","str","startsWith","endsWith","lastIndexOf","queryStringToObject","query","match","pl","decode","obj","trimArrayEntries","arr","map","entry","trim","removeEmptyStringsFromArray","HeaderNames","PersistentCacheKeys","AADAuthorityConstants","AADServerParamKeys","IdTokenClaimName","Logger","loggerOptions","level","Info","localCallback","loggerCallback","piiLoggingEnabled","logLevel","logMessage","options","containsPii","timestamp","Date","toUTCString","log","correlationId","executeCallback","errorPii","warning","Warning","warningPii","info","infoPii","verbose","Verbose","verbosePii","isPiiLoggingEnabled","Constants","SSOTypes","PromptValue","LOGIN","SELECT_ACCOUNT","CONSENT","NONE","SID","LOGIN_HINT","ResponseMode","GrantType","CacheAccountType","Separators","CredentialType","CacheSchemaType","CacheType","CodeChallengeMethodValues","PLAIN","S256","SERVER_TELEM_CONSTANTS","SCHEMA_VERSION","FAILURE_LIMIT","CACHE_KEY","CATEGORY_SEPARATOR","VALUE_SEPARATOR","CredentialEntity","generateAccountId","generateAccountIdForCacheKey","homeAccountId","environment","generateCredentialId","generateCredentialIdForCacheKey","credentialType","realm","familyId","generateTarget","generateTargetForCacheKey","target","generateCredentialKey","generateCredentialCacheKey","generateType","ID_TOKEN","ACCESS_TOKEN","REFRESH_TOKEN","getCredentialType","join","CACHE_KEY_SEPARATOR","scopes","ClientConfigurationErrorMessage","ClientConfigurationError","createRedirectUriEmptyError","createPostLogoutRedirectUriEmptyError","createClaimsRequestParsingError","claimsRequestParseError","createInsecureAuthorityUriError","urlString","createUrlParseError","urlParseError","createUrlEmptyError","createScopesNonArrayError","inputScopes","createEmptyScopesArrayError","createClientIdSingleScopeError","createInvalidPromptError","promptValue","createEmptyLogoutRequestError","createEmptyTokenRequestError","createInvalidCodeChallengeMethodError","createInvalidCodeChallengeParamsError","createKnownAuthoritiesCloudDiscoveryMetadataError","createInvalidCloudDiscoveryMetadataError","createUntrustedAuthorityError","ScopeSet","scopeArr","__spreadArrays$1","filteredInput","validateInputScopes","Set","fromString","inputScopeString","containsScope","containsScopeSet","scopeSet","size","asArray","every","appendScope","newScope","appendScopes","newScopes","removeScope","delete","unionScopeSets","otherScopes","unionScopes","intersectingScopeSets","sizeOtherScopes","getScopeCount","sizeThisScopes","array","val","printScopes","printScopesLowerCase","buildClientInfo","crypto","decodedClientInfo","base64Decode","parse","TrustedAuthority","setTrustedAuthoritiesFromConfig","knownAuthorities","cloudDiscoveryMetadata","getTrustedHostList","createCloudDiscoveryMetadataFromKnownAuthorities","parsedMetadata","saveCloudDiscoveryMetadata","metadata","setTrustedAuthoritiesFromNetwork","authorityToVerify","networkInterface","instanceDiscoveryEndpoint","_a","sendGetRequestAsync","getUrlComponents","HostNameAndPort","IsInTrustedHostList","aliases","TrustedHostList","preferred_cache","preferred_network","getCloudDiscoveryMetadata","AccountEntity","generateAccountKey","generateAccountCacheKey","tenantId","username","authorityType","ADFS_ACCOUNT_TYPE","ADFS","MSAV1_ACCOUNT_TYPE","MSA","MSSTS_ACCOUNT_TYPE","MSSTS","GENERIC_ACCOUNT_TYPE","GENERIC","getAccountInfo","accountInterface","createAccount","clientInfo","account","clientInfoObj","uid","CLIENT_INFO_SEPARATOR","utid","reqEnvironment","canonicalAuthorityUrlComponents","env","claims","tid","localAccountId","oid","sid","preferred_username","createADFSAccount","sub","upn","CacheManager","getAllAccounts","currentAccounts","getAccountsFilteredBy","accountValues","accountKey","accountObj","toObject","saveCacheRecord","cacheRecord","saveAccount","saveCredential","accessToken","saveAccessToken","refreshToken","setItem","ACCOUNT","credential","CREDENTIAL","currentTokenCache","getCredentialsFilteredBy","currentScopes","currentAccessTokens","accessTokens","tokenEntity","removeCredential","getAccount","getItem","getCredential","accountFilter","getAccountsFilteredByInternal","allCacheKeys","getKeys","matchingAccounts","entity","getAccountEntity","matchHomeAccountId","matchEnvironment","matchRealm","getCredentialsFilteredByInternal","matchingCredentials","idTokens","refreshTokens","credType","matchCredentialType","matchClientId","matchTarget","removeAppMetadata","isAppMetadata","removeItem","APP_META_DATA","removeAllAccounts","removeAccount","removeAccountContext","accountId","cacheEntity","cloudMetadata","entityScopeSet","requestTargetScopeSet","json","propertyName","DefaultStorageClass","containsKey","clear","DEFAULT_AUTH_OPTIONS","DEFAULT_SYSTEM_OPTIONS","tokenRenewalOffsetSeconds","DEFAULT_LOGGER_IMPLEMENTATION","DEFAULT_NETWORK_IMPLEMENTATION","sendPostRequestAsync","DEFAULT_CRYPTO_IMPLEMENTATION","createNewGuid","base64Encode","generatePkceCodes","DEFAULT_LIBRARY_INFO","sku","cpu","os","DEFAULT_CLIENT_CREDENTIALS","clientSecret","clientAssertion","AuthorityType","BaseClient","configuration","userAuthOptions","userSystemOptions","userLoggerOption","storageImplementation","networkImplementation","cryptoImplementation","clientCredentials","libraryInfo","serverTelemetryManager","config","authOptions","systemOptions","storageInterface","cryptoInterface","logger","cryptoUtils","cacheManager","networkClient","createDefaultTokenRequestHeaders","headers","createDefaultLibraryHeaders","set","CONTENT_TYPE","X_CLIENT_CURR_TELEM","generateCurrentRequestHeaderValue","X_CLIENT_LAST_TELEM","generateLastRequestHeaderValue","Map","X_CLIENT_SKU","X_CLIENT_VER","X_CLIENT_OS","X_CLIENT_CPU","executePostToTokenEndpoint","tokenEndpoint","queryString","status","clearTelemetryCache","RequestValidator","validateRedirectUri","redirectUri","validatePrompt","prompt","validateCodeChallengeParams","codeChallenge","codeChallengeMethod","validateCodeChallengeMethod","sanitizeEQParams","eQParams","queryParams","RequestParameterBuilder","parameters","addResponseTypeCode","RESPONSE_TYPE","encodeURIComponent","addResponseMode","responseMode","RESPONSE_MODE","QUERY","addScopes","SCOPE","addClientId","CLIENT_ID","addRedirectUri","REDIRECT_URI","addDomainHint","domainHint","DOMAIN_HINT","addLoginHint","loginHint","addSid","addClaims","CLAIMS","addCorrelationId","CLIENT_REQUEST_ID","addLibraryInfo","addPrompt","PROMPT","addState","state","STATE","addNonce","nonce","NONCE","addCodeChallengeParams","CODE_CHALLENGE","CODE_CHALLENGE_METHOD","addAuthorizationCode","CODE","addDeviceCode","DEVICE_CODE","addRefreshToken","addCodeVerifier","codeVerifier","CODE_VERIFIER","addClientSecret","CLIENT_SECRET","addClientAssertion","CLIENT_ASSERTION","addClientAssertionType","clientAssertionType","CLIENT_ASSERTION_TYPE","addGrantType","grantType","GRANT_TYPE","addClientInfo","addExtraQueryParameters","eQparams","createQueryString","queryParameterArray","ServerError","subError","IdToken","rawIdToken","extractIdToken","encodedIdToken","decodedToken","base64IdTokenPayload","base64Decoded","TimeUtils","nowSeconds","round","getTime","HTTP_REQUEST_TYPE","TemporaryCacheKeys","ApiId","InteractionType","IdTokenEntity","createIdTokenEntity","idTokenEntity","secret","AccessTokenEntity","createAccessTokenEntity","expiresOn","extExpiresOn","atEntity","currentTime","cachedAt","extendedExpiresOn","RefreshTokenEntity","createRefreshTokenEntity","rtEntity","InteractionRequiredAuthErrorMessage","InteractionRequiredAuthSubErrorMessage","InteractionRequiredAuthError","isInteractionRequiredError","isInteractionRequiredErrorCode","isInteractionRequiredSubError","isInteractionRequiredErrorDesc","some","irErrorCode","CacheRecord","accountEntity","accessTokenEntity","refreshTokenEntity","ProtocolUtils","setRequestState","cryptoObj","userState","meta","libraryState","generateLibraryState","stateObj","ts","stateString","parseRequestState","splitState","slice","libraryStateString","libraryStateObj","userRequestState","ResponseHandler","cacheStorage","validateServerAuthorizationCodeResponse","serverResponseHash","cachedState","error_description","suberror","client_info","validateTokenResponse","serverResponse","errString","error_codes","correlation_id","trace_id","homeAccountIdentifier","handleServerTokenResponse","serverTokenResponse","cachedNonce","idTokenObj","id_token","requestStateObj","generateCacheRecord","generateAuthenticationResult","cachedAccount","generateAccountEntity","cachedIdToken","cachedAccessToken","access_token","responseScopes","tokenExpirationSeconds","expires_in","extendedTokenExpirationSeconds","ext_expires_in","cachedRefreshToken","refresh_token","foci","Adfs","fromTokenCache","requestState","Number","uniqueId","idTokenClaims","fromCache","UrlString","_urlString","getHash","canonicalizeUri","validateAsUri","components","PathSegments","Protocol","urlRemoveQueryStringParameter","regex","removeHashFromUrl","replaceTenantPath","urlObject","pathArray","COMMON","ORGANIZATIONS","constructAuthorityUriFromObject","hashIndex1","hashIndex2","substring","regEx","urlComponents","AbsolutePath","pathSegments","getDeserializedHash","hash","deserializedHash","hashContainsKnownProperties","AuthorizationCodeClient","getAuthCodeUrl","request","createAuthCodeUrlQueryString","authorizationEndpoint","acquireToken","responseHandler","executeTokenRequest","handleFragmentResponse","hashFragment","hashUrlString","serverParams","getLogoutUri","logoutRequest","postLogoutUriParam","postLogoutRedirectUri","POST_LOGOUT_URI","correlationIdParam","endSessionEndpoint","requestBody","createTokenRequestBody","parameterBuilder","assertion","assertionType","AUTHORIZATION_CODE_GRANT","extraScopesToConsent","extraQueryParameters","RefreshTokenClient","DeviceCodeClient","deviceCodeResponse","getDeviceCode","deviceCodeCallback","acquireTokenWithDeviceCode","executePostRequestToDeviceCodeEndpoint","deviceCodeEndpoint","userCode","deviceCode","verificationUri","expiresIn","_b","user_code","device_code","verification_uri","deviceCodeExpirationTime","pollingIntervalMilli","intervalId","error_1","requestParameters","DEVICE_CODE_GRANT","REFRESH_TOKEN_GRANT","SilentFlowClient","requestScopes","refreshTokenClient","refreshTokenRequest","readAccessTokenFromCache","readRefreshTokenFromCache","forceRefresh","isTokenExpired","incrementCacheHits","readIdTokenFromCache","inputRealm","idTokenKey","accessTokenFilter","credentialCache","refreshTokenKey","expirationSec","Authority","canonicalAuthority","_canonicalAuthority","Default","_canonicalAuthorityUrlComponents","discoveryComplete","replaceTenant","tenantDiscoveryResponse","authorization_endpoint","token_endpoint","end_session_endpoint","issuer","tenant","discoverEndpoints","openIdConfigurationEndpoint","validateAndSetPreferredNetwork","preferredNetwork","resolveEndpointsAsync","openIdConfigEndpoint","defaultOpenIdConfigurationEndpoint","AuthorityFactory","createDiscoveredInstance","authorityUri","acquireTokenAuthority","e_1","createInstance","authorityUrl","ServerTelemetryManager","telemetryRequest","apiId","telemetryCacheKey","forceRefreshInt","lastRequests","getLastRequests","failedRequests","errors","platformFields","errorCount","cacheHits","cacheFailedRequest","TELEMETRY","BrowserConstants","DEFAULT_REQUEST","FetchClient","fetch","method","GET","getFetchHeaders","getHeaderMap","reqBody","POST","Headers","append","headerMap","BrowserAuthErrorMessage","noWindowObjectError","pkceNotGenerated","cryptoDoesNotExist","httpMethodNotImplementedError","emptyNavigateUriError","hashEmptyError","interactionInProgress","popUpWindowError","emptyWindowError","userCancelledError","monitorWindowTimeoutError","redirectInIframeError","blockTokenRequestsInHiddenIframeError","iframeClosedPrematurelyError","silentSSOInsufficientInfoError","silentPromptValueError","tokenRequestCacheError","invalidCacheType","BrowserAuthError","createNoWindowObjectError","createPkceNotGeneratedError","createCryptoNotAvailableError","createHttpMethodNotImplementedError","createEmptyNavigationUriError","createEmptyHashError","hashValue","createInteractionInProgressError","createPopupWindowError","createEmptyWindowCreatedError","createUserCancelledError","createMonitorWindowTimeoutError","createRedirectInIframeError","windowParentCheck","createBlockReloadInHiddenIframeError","createIframeClosedPrematurelyError","createSilentSSOInsufficientInfoError","createSilentPromptValueError","givenPrompt","createTokenRequestCacheError","XhrClient","sendRequestAsync","xhr","XMLHttpRequest","setXhrHeaders","onload","responseText","jsonResponse","networkResponse","onerror","send","setRequestHeader","headerArr","getAllResponseHeaders","parts","headerName","headerVal","BrowserUtils","navigateWindow","urlNavigate","noHistory","clearHash","replaceHash","urlParts","isInIframe","getCurrentUri","getHomepage","getBrowserNetworkClient","blockReloadInHiddenIframes","detectIEOrEdge","ua","navigator","userAgent","msie","msie11","msedge","DEFAULT_AUTH_OPTIONS$1","DEFAULT_CACHE_OPTIONS","storeAuthStateInCookie","DEFAULT_BROWSER_SYSTEM_OPTIONS","windowHashTimeout","iframeHashTimeout","loadFrameTimeout","BrowserConfigurationAuthErrorMessage","redirectUriNotSet","postLogoutUriNotSet","storageNotSupportedError","noRedirectCallbacksSet","invalidCallbackObject","BrowserConfigurationAuthError","createStorageNotSupportedError","givenStorageLocation","createInvalidCallbackObjectError","callbackObject","createRedirectCallbacksNotSetError","BrowserStorage","cacheConfig","validateWindowStorage","windowStorage","migrateCacheEntries","clientInfoKey","CLIENT_INFO","errorKey","ERROR","errorDescKey","ERROR_DESC","values","index","migrateCacheEntry","newKey","generateCacheKey","TEMPORARY","validateObjectKey","stringVal","setItemCookie","itemCookie","getItemCookie","clearItemCookie","cookieName","cookieValue","expires","cookieStr","getCookieExpirationTime","cookie","cookieList","charAt","clearMsalCookie","nonceKey","NONCE_IDTOKEN","REQUEST_STATE","ORIGIN_URI","cookieLifeDays","today","getCache","setCache","ADAL_ID_TOKEN","generateAuthorityKey","AUTHORITY","generateNonceKey","setAuthorityCache","authorityKey","getCachedAuthority","updateCacheEntries","authorityInstance","resetRequestCache","REQUEST_PARAMS","URL_HASH","cleanRequest","cacheCodeRequest","authCodeRequest","browserCrypto","getCachedRequest","encodedTokenRequest","parsedRequest","cachedAuthority","MathUtils","decimalToHex","num","hex","GuidGenerator","generateGuid","buffer","Uint8Array","getRandomValues","guidHolder","guidResponse","random","isGuid","guid","BrowserStringUtils","stringToUtf8Arr","sDOMStr","nChr","nArrLen","nStrLen","nMapIdx","charCodeAt","aBytes","nIdx","nChrIdx","utf8ArrToString","sView","nPart","nLen","String","fromCharCode","Base64Encode","urlEncode","input","encode","urlEncodeArr","inputArr","base64EncArr","inputUtf8Arr","eqLen","sB64Enc","nMod3","nUint24","uint6ToB64","nUint6","Base64Decode","encodedString","base64DecToArr","base64String","nBlockSize","nInLen","nOutLen","ceil","nMod4","nOutIdx","nInIdx","b64ToUint6","charNum","PkceGenerator","generateCodes","generateCodeVerifier","generateCodeChallengeFromVerifier","verifier","challenge","pkceCodeVerifier","pkceHashedCodeVerifier","sha256Digest","BrowserCrypto","hasCryptoAPI","dataString","hasIECrypto","getMSCryptoDigest","getSubtleCryptoDigest","dataBuffer","hasBrowserCrypto","algorithm","subtle","digest","digestOperation","CryptoOps","b64Encode","b64Decode","guidGenerator","pkceGenerator","InteractionHandler","authCodeModule","storageImpl","authModule","browserStorage","handleCodeResponse","locationHash","authCode","cachedNonceKey","tokenResponse","RedirectHandler","initiateAuthRequest","requestUrl","redirectStartPage","isIframedApp","PopupHandler","unloadWindow","openPopup","monitorPopupForHash","popupWindow","maxTicks","ticks","cleanPopup","contentHash","popUpWidth","popUpHeight","winLeft","winTop","innerWidth","documentElement","clientWidth","innerHeight","clientHeight","left","max","top_1","focus","SilentHandler","configuredLoadFrameTimeout","userRequestScopes","frameName","loadFrame","loadFrameSync","monitorIframeForHash","iframe","timeoutMark","performance","now","removeHiddenIframe","contentWindow","frameHandle","getHiddenIframe","src","iframeId","authFrame","getElementById","ifr","setAttribute","style","visibility","position","border","getElementsByTagName","appendChild","insertAdjacentHTML","frames","parentNode","removeChild","BrowserProtocolUtils","extractBrowserRequestState","userInputAuth","userInputCache","userInputSystem","system","defaultAuthority","handleRedirectResponse","responseHash","loginRequestUrl","loginRequestUrlNormalized","currentUrlNormalized","hashKey","homepage","getRedirectResponseHash","handleHash","isResponseHash","cachedHash","interactionType","REDIRECT","cachedRequest","currentAuthority","authClient","initializeServerTelemetryManager","createAuthCodeClient","loginRedirect","acquireTokenRedirect","validRequest","interactionHandler","navigateUrl","e_2","preflightInteractiveRequest","initializeAuthorizationCodeRequest","loginPopup","acquireTokenPopup","e_3","POPUP","ssoSilent","silentRequest","scopeString","e_4","initializeAuthorizationRequest","SILENT","silentTokenHelper","acquireTokenSilent","e_5","isServerError","isInvalidGrantError","silentAuthUrlRequest","e_6","initializeBaseRequest","acquireTokenSilent_silentFlow","createSilentFlowClient","acquireTokenSilent_authCode","silentHandler","msalFrame","logout","validLogoutRequest","logoutUri","initializeLogoutRequest","getAccountByUsername","userName","allAccounts","getRedirectUri","requestRedirectUri","getPostLogoutRedirectUri","requestPostLogoutRedirectUri","getDiscoveredDefaultAuthority","clientConfig","getClientConfiguration","requestAuthority","discoveredAuthority","validatedRequest","telemetryPayload","setDefaultScopes","adalIdTokenString","adalIdToken","browserState","FRAGMENT","generatedPkceParams"],"mappings":"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","file":"authEnd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"tased\"] = factory();\n\telse\n\t\troot[\"tased\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/scripts/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 446);\n","import { PublicClientApplication } from \"@azure/msal-browser\";\r\n\r\nconst appId = \"67dc74f0-fb8c-47a4-8435-63253a3fc3bb\"; // TASED\r\n// const appId = \"8fe75eb2-476b-43e1-8e36-a09cf42fcb42\"; // TASED-NoConsentTest\r\n\r\nexport const client = new PublicClientApplication({\r\n    auth: {\r\n        clientId: appId,\r\n        authority: \"https://login.microsoftonline.com/organizations/\",\r\n        navigateToLoginRequestUrl: false,\r\n    },\r\n    cache: { cacheLocation: \"localStorage\" },\r\n});\r\n","/**\r\n * Convert html to text by writing innerHtml and reading innerText of a div.\r\n * Use only on trusted input\r\n * @param html string potentially containing html\r\n */\r\nexport function unsafeHtmlToText(html: string): string {\r\n    const el = document.createElement('div');\r\n    el.innerHTML = html;\r\n    return el.innerText;\r\n}\r\n\r\n\r\n/**\r\n * Ensures that the parameter is not undefined or null\r\n * @param value\r\n */\r\nexport function assert<T>(value: T | null | undefined, name = \"value\"): T | never {\r\n    if (value === undefined || value === null) {\r\n        throw new Error(`${name} must not be null or undefined`);\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\n\r\n/**\r\n * Ensures that the parameter is of the specified type\r\n * @param value\r\n * @param type result of typeof operator or a check function that returns true when value is of the correct type\r\n */\r\n// eslint-ignore-next-line @typescript-eslint/explicit-module-boundary-types\r\nexport function assertT<T>(value: unknown, type: string | ((maybeT: unknown) => boolean), name = \"value\"): T | never {\r\n    if (typeof type === \"string\" && typeof value !== type) {\r\n        throw new Error(`${name} is not of type ${type}`);\r\n    }\r\n\r\n    if (typeof type === \"function\" && !type(value)) {\r\n        throw new Error(`${name} is not of the expected type`);\r\n    }\r\n\r\n    return value as T;\r\n}\r\n\r\n\r\n/**\r\n * Ensures that the parameter is not undefined or null in a way typescript can detect\r\n * @param value\r\n * @param name\r\n */\r\nexport function assert1<T>(value: T | null | undefined, name = \"value\"): asserts value is T {\r\n    if (value === undefined || value === null) {\r\n        throw new Error(`${name} must not be null or undefined`);\r\n    }\r\n}\r\n\r\nexport declare type cancelFn = () => void;\r\nexport declare type throwFn = () => void | never;\r\nexport declare type checkFn = () => boolean;\r\nexport declare type progressFn = (status: string) => void;\r\n\r\n/**\r\n * A function that does nothing\r\n */\r\nexport function nop(): void { /* empty */ }\r\n\r\n\r\nexport class OperationCancelled extends Error {\r\n    constructor() {\r\n        super(\"Cancelled by user request\");\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Enables cancellation similar to .NET CancellationToken\r\n */\r\nexport function cancellation(): [cancelFn, throwFn] {\r\n    let cancelled = false;\r\n\r\n    function cancel() {\r\n        cancelled = true;\r\n    }\r\n\r\n    function throwIfCancellationRequested() {\r\n        if (cancelled) throw new OperationCancelled();\r\n    }\r\n\r\n    return [cancel, throwIfCancellationRequested];\r\n}\r\n\r\n\r\n/**\r\n * Enables cancellation similar to .NET CancellationToken\r\n */\r\nexport function cancellationNoThrow(): [cancelFn, checkFn] {\r\n    let cancelled = false;\r\n\r\n    function cancel() {\r\n        cancelled = true;\r\n    }\r\n\r\n    function isCancellationRequested() {\r\n        return cancelled\r\n    }\r\n\r\n    return [cancel, isCancellationRequested];\r\n}\r\n\r\n\r\n/**\r\n * Convert object to string using JSON.stringify()\r\n * @param o\r\n */\r\nexport function safeStringify(o: unknown): string {\r\n    if (typeof o === \"string\") {\r\n        return o;\r\n    }\r\n\r\n    const seen = new WeakSet();\r\n    const replacer = (_: unknown, value: unknown) => {\r\n        if (typeof value === 'object' && value !== null) {\r\n            if (seen.has(value)) {\r\n                return \"[already seen]\";\r\n            }\r\n            seen.add(value);\r\n        }\r\n        return value;\r\n    };\r\n\r\n    try {\r\n        return JSON.stringify(o, replacer, 4);\r\n    } catch (error) {\r\n        return \"[safeStringify: error]\";\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Return a promise that resolves after the specified amount of time\r\n * Semantics of cancellation:\r\n * If cancel() throws, delay will reject with OperationCancelled\r\n * If cancel() returns true, delay will resolve\r\n * @param ms time in miliseconds\r\n */\r\nexport const delay = (ms: number, cancel?: checkFn | throwFn): Promise<void> => new Promise((resolve, reject) => {\r\n    let timeout = -1;\r\n    let interval = -1;\r\n    let done = false;\r\n\r\n    const cleanup = () => {\r\n        if (done) {\r\n            if (timeout >= 0) clearTimeout(timeout);\r\n            if (interval >= 0) clearInterval(interval);\r\n            timeout = interval = -1;\r\n        }\r\n    };\r\n\r\n    if (cancel) {\r\n        const checkCancel: TimerHandler = (): boolean => {\r\n            try {\r\n                if (cancel()) {\r\n                    done = true;\r\n                    resolve();\r\n                    return true;\r\n                }\r\n            } catch (error) {\r\n                done = true;\r\n                reject(new OperationCancelled());\r\n                return true;\r\n            } finally {\r\n                cleanup();\r\n            }\r\n            return false;\r\n        };\r\n\r\n        if (checkCancel()) return;\r\n        interval = setInterval(checkCancel, 50);\r\n\r\n    }\r\n\r\n    const handler: TimerHandler = () => {\r\n        done = true;\r\n        resolve();\r\n        cleanup();\r\n    };\r\n\r\n    timeout = setTimeout(handler, ms);\r\n});\r\n\r\n\r\n/**\r\n * Fix the message link\r\n * Message links returned from ms graph have ':' and '@' in the channelId encoded as %3A and %40.\r\n * Teams will not recognize the channel like this, so decode it.\r\n * @param url\r\n */\r\nexport function fixMessageLink(url: string): string {\r\n    const a = new URL(url);\r\n    a.pathname = decodeURIComponent(a.pathname);\r\n    return a.toString();\r\n}\r\n\r\n\r\n/**\r\n * Checks if argument is an object and narrows type\r\n * @param x\r\n */\r\nexport function isUnknownObject(x: unknown): x is { [key in PropertyKey]: unknown } {\r\n    return x !== null && typeof x === 'object';\r\n}","import * as teams from \"@microsoft/teams-js\";\r\nimport { isUnknownObject } from '../utils';\r\nimport { client } from './client';\r\n\r\nasync function processResponse() {\r\n    try {\r\n        const response = await client.handleRedirectPromise();\r\n\r\n        if (response === null) {\r\n            teams.authentication.notifyFailure(\"no redirect resonse\");\r\n        } else {\r\n            teams.authentication.notifySuccess(JSON.stringify(response));\r\n        }\r\n    } catch (err) {\r\n        if (isUnknownObject(err) && 'name' in err && 'message' in err) {\r\n            teams.authentication.notifyFailure(`${err.name}: ${err.message}`);\r\n        } else {\r\n            teams.authentication.notifyFailure(\"Unexpected error\");\r\n        }\r\n    }\r\n}\r\n\r\nteams.initialize(processResponse);\r\n","!function(e,n){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=n():\"function\"==typeof define&&define.amd?define(\"microsoftTeams\",[],n):\"object\"==typeof exports?exports.microsoftTeams=n():e.microsoftTeams=n()}(window,function(){return function(e){var n={};function t(a){if(n[a])return n[a].exports;var s=n[a]={i:a,l:!1,exports:{}};return e[a].call(s.exports,s,s.exports,t),s.l=!0,s.exports}return t.m=e,t.c=n,t.d=function(e,n,a){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:a})},t.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&\"object\"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(t.r(a),Object.defineProperty(a,\"default\",{enumerable:!0,value:e}),2&n&&\"string\"!=typeof e)for(var s in e)t.d(a,s,function(n){return e[n]}.bind(null,s));return a},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,\"a\",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p=\"\",t(t.s=8)}([function(e,n,t){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0});var a=function(){function e(){}return e.initializeCalled=!1,e.initializeCompleted=!1,e.additionalValidOrigins=[],e.additionalValidOriginsRegexp=null,e.initializeCallbacks=[],e.isFramelessWindow=!1,e.parentMessageQueue=[],e.childMessageQueue=[],e.nextMessageId=0,e.handlers={},e.callbacks={},e.printCapabilityEnabled=!1,e}();n.GlobalVars=a},function(e,n,t){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0});var a=t(4),s=t(2),r=t(0),i=t(3);function o(e,n){return(!r.GlobalVars.currentWindow||e!==r.GlobalVars.currentWindow)&&(!!(r.GlobalVars.currentWindow&&r.GlobalVars.currentWindow.location&&n&&n===r.GlobalVars.currentWindow.location.origin)||!!(s.validOriginRegExp.test(n.toLowerCase())||r.GlobalVars.additionalValidOriginsRegexp&&r.GlobalVars.additionalValidOriginsRegexp.test(n.toLowerCase())))}function l(e,n){r.GlobalVars.parentWindow&&e!==r.GlobalVars.parentWindow?r.GlobalVars.childWindow&&e!==r.GlobalVars.childWindow||(r.GlobalVars.childWindow=e,r.GlobalVars.childOrigin=n):(r.GlobalVars.parentWindow=e,r.GlobalVars.parentOrigin=n),r.GlobalVars.parentWindow&&r.GlobalVars.parentWindow.closed&&(r.GlobalVars.parentWindow=null,r.GlobalVars.parentOrigin=null),r.GlobalVars.childWindow&&r.GlobalVars.childWindow.closed&&(r.GlobalVars.childWindow=null,r.GlobalVars.childOrigin=null),g(r.GlobalVars.parentWindow),g(r.GlobalVars.childWindow)}function u(e){if(\"id\"in e.data&&\"number\"==typeof e.data.id){var n=e.data,t=r.GlobalVars.callbacks[n.id];t&&(t.apply(null,n.args),delete r.GlobalVars.callbacks[n.id])}else if(\"func\"in e.data&&\"string\"==typeof e.data.func){n=e.data;var a=r.GlobalVars.handlers[n.func];a&&a.apply(this,n.args)}}function c(e){if(\"id\"in e.data&&\"func\"in e.data){var n=e.data,t=n.func?r.GlobalVars.handlers[n.func]:null;if(t){var a=t.apply(this,n.args);void 0!==a&&p(n.id,Array.isArray(a)?a:[a])}else{var s=b(n.func,n.args);r.GlobalVars.callbacks[s]=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];r.GlobalVars.childWindow&&p(n.id,e)}}}}function d(e){return e===r.GlobalVars.parentWindow?r.GlobalVars.parentMessageQueue:e===r.GlobalVars.childWindow?r.GlobalVars.childMessageQueue:[]}function f(e){return e===r.GlobalVars.parentWindow?r.GlobalVars.parentOrigin:e===r.GlobalVars.childWindow?r.GlobalVars.childOrigin:null}function g(e){for(var n=f(e),t=d(e);e&&n&&t.length>0;)e.postMessage(t.shift(),n)}function b(e,n){var t=r.GlobalVars.parentWindow,a=v(e,n);if(r.GlobalVars.isFramelessWindow)r.GlobalVars.currentWindow&&r.GlobalVars.currentWindow.nativeInterface&&r.GlobalVars.currentWindow.nativeInterface.framelessPostMessage(JSON.stringify(a));else{var s=f(t);t&&s?t.postMessage(a,s):d(t).push(a)}return a.id}function p(e,n){var t=r.GlobalVars.childWindow,a=V(e,n),s=f(t);t&&s&&t.postMessage(a,s)}function h(e,n){var t=r.GlobalVars.childWindow,a=G(e,n),s=f(t);t&&s?t.postMessage(a,s):d(t).push(a)}function v(e,n){return{id:r.GlobalVars.nextMessageId++,func:e,args:n||[]}}function V(e,n){return{id:e,args:n||[]}}function G(e,n){return{func:e,args:n||[]}}r.GlobalVars.handlers.themeChange=function(e){r.GlobalVars.themeChangeHandler&&r.GlobalVars.themeChangeHandler(e);r.GlobalVars.childWindow&&h(\"themeChange\",[e])},r.GlobalVars.handlers.fullScreenChange=function(e){r.GlobalVars.fullScreenChangeHandler&&r.GlobalVars.fullScreenChangeHandler(e)},r.GlobalVars.handlers.backButtonPress=function(){r.GlobalVars.backButtonPressHandler&&r.GlobalVars.backButtonPressHandler()||a.navigateBack()},r.GlobalVars.handlers.load=function(e){r.GlobalVars.loadHandler&&r.GlobalVars.loadHandler(e);r.GlobalVars.childWindow&&h(\"load\",[e])},r.GlobalVars.handlers.beforeUnload=function(){var e=function(){b(\"readyToUnload\",[])};r.GlobalVars.beforeUnloadHandler&&r.GlobalVars.beforeUnloadHandler(e)||e()},r.GlobalVars.handlers.changeSettings=function(){r.GlobalVars.changeSettingsHandler&&r.GlobalVars.changeSettingsHandler()},r.GlobalVars.handlers.startConversation=function(e,n,t,a){r.GlobalVars.onStartConversationHandler&&r.GlobalVars.onStartConversationHandler({subEntityId:e,conversationId:n,channelId:t,entityId:a})},r.GlobalVars.handlers.closeConversation=function(e,n,t,a){r.GlobalVars.onCloseConversationHandler&&r.GlobalVars.onCloseConversationHandler({subEntityId:e,conversationId:n,channelId:t,entityId:a})},n.ensureInitialized=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];if(!r.GlobalVars.initializeCalled)throw new Error(\"The library has not yet been initialized\");if(r.GlobalVars.frameContext&&e&&e.length>0){for(var t=!1,a=0;a<e.length;a++)if(e[a]===r.GlobalVars.frameContext){t=!0;break}if(!t)throw new Error(\"This call is not allowed in the '\"+r.GlobalVars.frameContext+\"' context\")}},n.processMessage=function(e){if(e&&e.data&&\"object\"==typeof e.data){var n=e.source||e.originalEvent&&e.originalEvent.source,t=e.origin||e.originalEvent&&e.originalEvent.origin;o(n,t)&&(l(n,t),n===r.GlobalVars.parentWindow?u(e):n===r.GlobalVars.childWindow&&c(e))}},n.handleParentMessage=u,n.processAdditionalValidOrigins=function(e){var n=r.GlobalVars.additionalValidOrigins.concat(e.filter(function(e){return\"string\"==typeof e&&s.userOriginUrlValidationRegExp.test(e)})),t={};n=n.filter(function(e){return!t[e]&&(t[e]=!0,!0)}),r.GlobalVars.additionalValidOrigins=n,r.GlobalVars.additionalValidOrigins.length>0?r.GlobalVars.additionalValidOriginsRegexp=i.generateRegExpFromUrls(r.GlobalVars.additionalValidOrigins):r.GlobalVars.additionalValidOriginsRegexp=null},n.waitForMessageQueue=function(e,n){var t=r.GlobalVars.currentWindow.setInterval(function(){0===d(e).length&&(clearInterval(t),n())},100)},n.sendMessageRequestToParent=b,n.sendMessageEventToChild=h},function(e,n,t){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0});var a=t(3);n.version=\"1.6.0\",n.validOrigins=[\"https://teams.microsoft.com\",\"https://teams.microsoft.us\",\"https://gov.teams.microsoft.us\",\"https://dod.teams.microsoft.us\",\"https://int.teams.microsoft.com\",\"https://devspaces.skype.com\",\"https://ssauth.skype.com\",\"https://local.teams.office.com\",\"https://local.teams.office.com:8080\",\"https://msft.spoppe.com\",\"https://*.sharepoint.com\",\"https://*.sharepoint-df.com\",\"https://*.sharepointonline.com\",\"https://outlook.office.com\",\"https://outlook-sdf.office.com\",\"https://*.teams.microsoft.com\"],n.frameContexts={settings:\"settings\",content:\"content\",authentication:\"authentication\",remove:\"remove\",task:\"task\"},n.validOriginRegExp=a.generateRegExpFromUrls(n.validOrigins),n.userOriginUrlValidationRegExp=/^https\\:\\/\\//},function(e,n,t){\"use strict\";function a(e){for(var n=\"^\",t=e.split(\".\"),a=0;a<t.length;a++)n+=(a>0?\"[.]\":\"\")+t[a].replace(\"*\",\"[^/^.]+\");return n+=\"$\"}Object.defineProperty(n,\"__esModule\",{value:!0}),n.generateRegExpFromUrls=function(e){for(var n=\"\",t=0;t<e.length;t++)n+=(0===t?\"\":\"|\")+a(e[t]);return new RegExp(n)},n.getGenericOnCompleteHandler=function(e){return function(n,t){if(!n)throw new Error(e||t)}}},function(e,n,t){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0});var a=t(1),s=t(0),r=t(2),i=t(5),o=t(3),l=t(6);function u(e,n){if(!s.GlobalVars.initializeCalled){s.GlobalVars.initializeCalled=!0;var t=function(e){return a.processMessage(e)};s.GlobalVars.currentWindow=s.GlobalVars.currentWindow||window,s.GlobalVars.parentWindow=s.GlobalVars.currentWindow.parent!==s.GlobalVars.currentWindow.self?s.GlobalVars.currentWindow.parent:s.GlobalVars.currentWindow.opener,s.GlobalVars.parentWindow?s.GlobalVars.currentWindow.addEventListener(\"message\",t,!1):(s.GlobalVars.isFramelessWindow=!0,window.onNativeMessage=a.handleParentMessage);try{s.GlobalVars.parentOrigin=\"*\";var o=a.sendMessageRequestToParent(\"initialize\",[r.version]);s.GlobalVars.callbacks[o]=function(e,n){s.GlobalVars.frameContext=e,s.GlobalVars.hostClientType=n,s.GlobalVars.initializeCallbacks.forEach(function(e){return e()}),s.GlobalVars.initializeCallbacks=[],s.GlobalVars.initializeCompleted=!0}}finally{s.GlobalVars.parentOrigin=null}this._uninitialize=function(){s.GlobalVars.frameContext&&(d(null),f(null),g(null),p(null),b(null),l.logs.registerGetLogHandler(null)),s.GlobalVars.frameContext===r.frameContexts.settings&&i.settings.registerOnSaveHandler(null),s.GlobalVars.frameContext===r.frameContexts.remove&&i.settings.registerOnRemoveHandler(null),s.GlobalVars.isFramelessWindow||s.GlobalVars.currentWindow.removeEventListener(\"message\",t,!1),s.GlobalVars.initializeCalled=!1,s.GlobalVars.initializeCompleted=!1,s.GlobalVars.initializeCallbacks=[],s.GlobalVars.additionalValidOrigins=[],s.GlobalVars.parentWindow=null,s.GlobalVars.parentOrigin=null,s.GlobalVars.parentMessageQueue=[],s.GlobalVars.childWindow=null,s.GlobalVars.childOrigin=null,s.GlobalVars.childMessageQueue=[],s.GlobalVars.nextMessageId=0,s.GlobalVars.callbacks={},s.GlobalVars.frameContext=null,s.GlobalVars.hostClientType=null,s.GlobalVars.isFramelessWindow=!1}}Array.isArray(n)&&a.processAdditionalValidOrigins(n),e&&(s.GlobalVars.initializeCompleted?e():s.GlobalVars.initializeCallbacks.push(e))}function c(){window.print()}function d(e){a.ensureInitialized(),s.GlobalVars.themeChangeHandler=e,e&&a.sendMessageRequestToParent(\"registerHandler\",[\"themeChange\"])}function f(e){a.ensureInitialized(),s.GlobalVars.fullScreenChangeHandler=e,e&&a.sendMessageRequestToParent(\"registerHandler\",[\"fullScreen\"])}function g(e){a.ensureInitialized(),s.GlobalVars.backButtonPressHandler=e,e&&a.sendMessageRequestToParent(\"registerHandler\",[\"backButton\"])}function b(e){a.ensureInitialized(),s.GlobalVars.loadHandler=e,e&&a.sendMessageRequestToParent(\"registerHandler\",[\"load\"])}function p(e){a.ensureInitialized(),s.GlobalVars.beforeUnloadHandler=e,e&&a.sendMessageRequestToParent(\"registerHandler\",[\"beforeUnload\"])}function h(e){a.ensureInitialized(r.frameContexts.content),a.sendMessageRequestToParent(\"setFrameContext\",[e])}n.initialize=u,n._initialize=function(e){s.GlobalVars.currentWindow=e},n._uninitialize=function(){},n.enablePrintCapability=function(){s.GlobalVars.printCapabilityEnabled||(s.GlobalVars.printCapabilityEnabled=!0,a.ensureInitialized(),document.addEventListener(\"keydown\",function(e){(e.ctrlKey||e.metaKey)&&80===e.keyCode&&(c(),e.cancelBubble=!0,e.preventDefault(),e.stopImmediatePropagation())}))},n.print=c,n.getContext=function(e){a.ensureInitialized();var n=a.sendMessageRequestToParent(\"getContext\");s.GlobalVars.callbacks[n]=e},n.registerOnThemeChangeHandler=d,n.registerFullScreenHandler=f,n.registerBackButtonHandler=g,n.navigateBack=function(e){a.ensureInitialized();var n=a.sendMessageRequestToParent(\"navigateBack\",[]);s.GlobalVars.callbacks[n]=e||o.getGenericOnCompleteHandler(\"Back navigation is not supported in the current client or context.\")},n.registerOnLoadHandler=b,n.registerBeforeUnloadHandler=p,n.registerChangeSettingsHandler=function(e){a.ensureInitialized(r.frameContexts.content),s.GlobalVars.changeSettingsHandler=e,e&&a.sendMessageRequestToParent(\"registerHandler\",[\"changeSettings\"])},n.navigateCrossDomain=function(e,n){a.ensureInitialized(r.frameContexts.content,r.frameContexts.settings,r.frameContexts.remove,r.frameContexts.task);var t=a.sendMessageRequestToParent(\"navigateCrossDomain\",[e]);s.GlobalVars.callbacks[t]=n||o.getGenericOnCompleteHandler(\"Cross-origin navigation is only supported for URLs matching the pattern registered in the manifest.\")},n.getTabInstances=function(e,n){a.ensureInitialized();var t=a.sendMessageRequestToParent(\"getTabInstances\",[n]);s.GlobalVars.callbacks[t]=e},n.getMruTabInstances=function(e,n){a.ensureInitialized();var t=a.sendMessageRequestToParent(\"getMruTabInstances\",[n]);s.GlobalVars.callbacks[t]=e},n.shareDeepLink=function(e){a.ensureInitialized(r.frameContexts.content),a.sendMessageRequestToParent(\"shareDeepLink\",[e.subEntityId,e.subEntityLabel,e.subEntityWebUrl])},n.executeDeepLink=function(e,n){a.ensureInitialized(r.frameContexts.content,r.frameContexts.task);var t=a.sendMessageRequestToParent(\"executeDeepLink\",[e]);s.GlobalVars.callbacks[t]=n||o.getGenericOnCompleteHandler()},n.navigateToTab=function(e,n){a.ensureInitialized();var t=a.sendMessageRequestToParent(\"navigateToTab\",[e]);s.GlobalVars.callbacks[t]=n||o.getGenericOnCompleteHandler(\"Invalid internalTabInstanceId and/or channelId were/was provided\")},n.setFrameContext=h,n.initializeWithFrameContext=function(e,n,t){u(n,t),h(e)}},function(e,n,t){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0});var a=t(1),s=t(0),r=t(2),i=t(3);!function(e){var n,t;s.GlobalVars.handlers[\"settings.save\"]=function(e){var t=new o(e);n?n(t):t.notifySuccess()},s.GlobalVars.handlers[\"settings.remove\"]=function(){var e=new l;t?t(e):e.notifySuccess()},e.setValidityState=function(e){a.ensureInitialized(r.frameContexts.settings,r.frameContexts.remove),a.sendMessageRequestToParent(\"settings.setValidityState\",[e])},e.getSettings=function(e){a.ensureInitialized(r.frameContexts.content,r.frameContexts.settings,r.frameContexts.remove);var n=a.sendMessageRequestToParent(\"settings.getSettings\");s.GlobalVars.callbacks[n]=e},e.setSettings=function(e,n){a.ensureInitialized(r.frameContexts.content,r.frameContexts.settings);var t=a.sendMessageRequestToParent(\"settings.setSettings\",[e]);s.GlobalVars.callbacks[t]=n||i.getGenericOnCompleteHandler()},e.registerOnSaveHandler=function(e){a.ensureInitialized(r.frameContexts.settings),n=e,e&&a.sendMessageRequestToParent(\"registerHandler\",[\"save\"])},e.registerOnRemoveHandler=function(e){a.ensureInitialized(r.frameContexts.remove),t=e,e&&a.sendMessageRequestToParent(\"registerHandler\",[\"remove\"])};var o=function(){function e(e){this.notified=!1,this.result=e||{}}return e.prototype.notifySuccess=function(){this.ensureNotNotified(),a.sendMessageRequestToParent(\"settings.save.success\"),this.notified=!0},e.prototype.notifyFailure=function(e){this.ensureNotNotified(),a.sendMessageRequestToParent(\"settings.save.failure\",[e]),this.notified=!0},e.prototype.ensureNotNotified=function(){if(this.notified)throw new Error(\"The SaveEvent may only notify success or failure once.\")},e}();var l=function(){function e(){this.notified=!1}return e.prototype.notifySuccess=function(){this.ensureNotNotified(),a.sendMessageRequestToParent(\"settings.remove.success\"),this.notified=!0},e.prototype.notifyFailure=function(e){this.ensureNotNotified(),a.sendMessageRequestToParent(\"settings.remove.failure\",[e]),this.notified=!0},e.prototype.ensureNotNotified=function(){if(this.notified)throw new Error(\"The removeEvent may only notify success or failure once.\")},e}()}(n.settings||(n.settings={}))},function(e,n,t){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0});var a=t(1),s=t(0);!function(e){s.GlobalVars.handlers[\"log.request\"]=function(){if(s.GlobalVars.getLogHandler){var e=s.GlobalVars.getLogHandler();a.sendMessageRequestToParent(\"log.receive\",[e])}},e.registerGetLogHandler=function(e){a.ensureInitialized(),s.GlobalVars.getLogHandler=e,e&&a.sendMessageRequestToParent(\"registerHandler\",[\"log.request\"])}}(n.logs||(n.logs={}))},function(e,n,t){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0});var a=t(1),s=t(0),r=t(2),i=t(3),o=function(){function e(){}return e.prototype.postMessage=function(e,n){a.ensureInitialized();var t=a.sendMessageRequestToParent(\"messageForChild\",[e]);s.GlobalVars.callbacks[t]=n||i.getGenericOnCompleteHandler()},e.prototype.addEventListener=function(e,n){\"message\"===e&&(s.GlobalVars.handlers.messageForParent=n)},e}();n.ChildAppWindow=o;var l=function(){function e(){}return Object.defineProperty(e,\"Instance\",{get:function(){return this._instance||(this._instance=new this)},enumerable:!0,configurable:!0}),e.prototype.postMessage=function(e,n){a.ensureInitialized(r.frameContexts.task);var t=a.sendMessageRequestToParent(\"messageForParent\",[e]);s.GlobalVars.callbacks[t]=n||i.getGenericOnCompleteHandler()},e.prototype.addEventListener=function(e,n){\"message\"===e&&(s.GlobalVars.handlers.messageForChild=n)},e}();n.ParentAppWindow=l},function(e,n,t){\"use strict\";function a(e){for(var t in e)n.hasOwnProperty(t)||(n[t]=e[t])}Object.defineProperty(n,\"__esModule\",{value:!0}),a(t(9)),a(t(14))},function(e,n,t){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0});var a=t(10);n.bot=a.bot;var s=t(11);n.menus=s.menus;var r=t(6);n.logs=r.logs;var i=t(12);n.enterFullscreen=i.enterFullscreen,n.exitFullscreen=i.exitFullscreen,n.getChatMembers=i.getChatMembers,n.getConfigSetting=i.getConfigSetting,n.getUserJoinedTeams=i.getUserJoinedTeams,n.openFilePreview=i.openFilePreview,n.sendCustomMessage=i.sendCustomMessage,n.showNotification=i.showNotification,n.sendCustomEvent=i.sendCustomEvent,n.registerCustomHandler=i.registerCustomHandler,n.uploadCustomApp=i.uploadCustomApp;var o=t(13);n.conversations=o.conversations},function(e,n,t){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0});var a=t(0),s=t(1);!function(e){e.sendQuery=function(e,n,t){s.ensureInitialized();var r=s.sendMessageRequestToParent(\"bot.executeQuery\",[e]);a.GlobalVars.callbacks[r]=function(e,a){e?n(a):t(a)}},e.getSupportedCommands=function(e,n){s.ensureInitialized();var t=s.sendMessageRequestToParent(\"bot.getSupportedCommands\");a.GlobalVars.callbacks[t]=function(t,a){t?e(a):n(a)}},e.authenticate=function(e,n,t){s.ensureInitialized();var r=s.sendMessageRequestToParent(\"bot.authenticate\",[e]);a.GlobalVars.callbacks[r]=function(e,a){e?n(a):t(a)}},function(e){e.Results=\"Results\",e.Auth=\"Auth\"}(e.ResponseType||(e.ResponseType={}))}(n.bot||(n.bot={}))},function(e,n,t){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0});var a=t(1),s=t(0);!function(e){var n,t,r,i=function(){return function(){this.enabled=!0}}();e.MenuItem=i,function(e){e.dropDown=\"dropDown\",e.popOver=\"popOver\"}(e.MenuListType||(e.MenuListType={})),s.GlobalVars.handlers.navBarMenuItemPress=function(e){n&&n(e)||(a.ensureInitialized(),a.sendMessageRequestToParent(\"handleNavBarMenuItemPress\",[e]))},s.GlobalVars.handlers.actionMenuItemPress=function(e){t&&t(e)||(a.ensureInitialized(),a.sendMessageRequestToParent(\"handleActionMenuItemPress\",[e]))},s.GlobalVars.handlers.setModuleView=function(e){r&&r(e)||(a.ensureInitialized(),a.sendMessageRequestToParent(\"viewConfigItemPress\",[e]))},e.setUpViews=function(e,n){a.ensureInitialized(),r=n,a.sendMessageRequestToParent(\"setUpViews\",[e])},e.setNavBarMenu=function(e,t){a.ensureInitialized(),n=t,a.sendMessageRequestToParent(\"setNavBarMenu\",[e])},e.showActionMenu=function(e,n){a.ensureInitialized(),t=n,a.sendMessageRequestToParent(\"showActionMenu\",[e])}}(n.menus||(n.menus={}))},function(e,n,t){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0});var a=t(1),s=t(0),r=t(2),i=t(3);n.getUserJoinedTeams=function(e,n){a.ensureInitialized();var t=a.sendMessageRequestToParent(\"getUserJoinedTeams\",[n]);s.GlobalVars.callbacks[t]=e},n.enterFullscreen=function(){a.ensureInitialized(r.frameContexts.content),a.sendMessageRequestToParent(\"enterFullscreen\",[])},n.exitFullscreen=function(){a.ensureInitialized(r.frameContexts.content),a.sendMessageRequestToParent(\"exitFullscreen\",[])},n.openFilePreview=function(e){a.ensureInitialized(r.frameContexts.content);var n=[e.entityId,e.title,e.description,e.type,e.objectUrl,e.downloadUrl,e.webPreviewUrl,e.webEditUrl,e.baseUrl,e.editFile,e.subEntityId];a.sendMessageRequestToParent(\"openFilePreview\",n)},n.showNotification=function(e){a.ensureInitialized(r.frameContexts.content);var n=[e.message,e.notificationType];a.sendMessageRequestToParent(\"showNotification\",n)},n.uploadCustomApp=function(e,n){a.ensureInitialized();var t=a.sendMessageRequestToParent(\"uploadCustomApp\",[e]);s.GlobalVars.callbacks[t]=n||i.getGenericOnCompleteHandler()},n.sendCustomMessage=function(e,n,t){a.ensureInitialized();var r=a.sendMessageRequestToParent(e,n);return\"function\"==typeof t&&(s.GlobalVars.callbacks[r]=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];t.apply(null,e)}),r},n.sendCustomEvent=function(e,n){if(a.ensureInitialized(),!s.GlobalVars.childWindow)throw new Error(\"The child window has not yet been initialized or is not present\");a.sendMessageEventToChild(e,n)},n.registerCustomHandler=function(e,n){var t=this;a.ensureInitialized(),s.GlobalVars.handlers[e]=function(){for(var e=[],a=0;a<arguments.length;a++)e[a]=arguments[a];return n.apply(t,e)}},n.getChatMembers=function(e){a.ensureInitialized();var n=a.sendMessageRequestToParent(\"getChatMembers\");s.GlobalVars.callbacks[n]=e},n.getConfigSetting=function(e,n){a.ensureInitialized();var t=a.sendMessageRequestToParent(\"getConfigSetting\",[n]);s.GlobalVars.callbacks[t]=e}},function(e,n,t){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0});var a=t(1),s=t(0),r=t(2);!function(e){e.openConversation=function(e){a.ensureInitialized(r.frameContexts.content);var n=a.sendMessageRequestToParent(\"conversations.openConversation\",[{title:e.title,subEntityId:e.subEntityId,conversationId:e.conversationId,channelId:e.channelId,entityId:e.entityId}]);s.GlobalVars.onCloseConversationHandler=e.onCloseConversation,s.GlobalVars.onStartConversationHandler=e.onStartConversation,s.GlobalVars.callbacks[n]=function(e,n){if(!e)throw new Error(n)}},e.closeConversation=function(){a.ensureInitialized(r.frameContexts.content),a.sendMessageRequestToParent(\"conversations.closeConversation\"),s.GlobalVars.onCloseConversationHandler=null,s.GlobalVars.onStartConversationHandler=null}}(n.conversations||(n.conversations={}))},function(e,n,t){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0});var a=t(15);n.appInitialization=a.appInitialization;var s=t(16);n.authentication=s.authentication;var r=t(4);n.enablePrintCapability=r.enablePrintCapability,n.executeDeepLink=r.executeDeepLink,n.getContext=r.getContext,n.getMruTabInstances=r.getMruTabInstances,n.getTabInstances=r.getTabInstances,n.initialize=r.initialize,n.initializeWithFrameContext=r.initializeWithFrameContext,n.navigateBack=r.navigateBack,n.navigateCrossDomain=r.navigateCrossDomain,n.navigateToTab=r.navigateToTab,n.print=r.print,n.registerBackButtonHandler=r.registerBackButtonHandler,n.registerBeforeUnloadHandler=r.registerBeforeUnloadHandler,n.registerChangeSettingsHandler=r.registerChangeSettingsHandler,n.registerFullScreenHandler=r.registerFullScreenHandler,n.registerOnLoadHandler=r.registerOnLoadHandler,n.registerOnThemeChangeHandler=r.registerOnThemeChangeHandler,n.setFrameContext=r.setFrameContext,n.shareDeepLink=r.shareDeepLink;var i=t(5);n.settings=i.settings;var o=t(17);n.tasks=o.tasks;var l=t(7);n.ChildAppWindow=l.ChildAppWindow,n.ParentAppWindow=l.ParentAppWindow},function(e,n,t){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0});var a=t(1),s=t(2);!function(e){e.notifyAppLoaded=function(){a.ensureInitialized(),a.sendMessageRequestToParent(\"appInitialization.appLoaded\",[s.version])},e.notifySuccess=function(){a.ensureInitialized(),a.sendMessageRequestToParent(\"appInitialization.success\",[s.version])},e.notifyFailure=function(e){a.ensureInitialized(),a.sendMessageRequestToParent(\"appInitialization.failure\",[e.reason,e.message])}}(n.appInitialization||(n.appInitialization={}))},function(e,n,t){\"use strict\";Object.defineProperty(n,\"__esModule\",{value:!0});var a=t(1),s=t(0),r=t(2);!function(e){var n,t;function i(){l();try{s.GlobalVars.childWindow&&s.GlobalVars.childWindow.close()}finally{s.GlobalVars.childWindow=null,s.GlobalVars.childOrigin=null}}function o(e){n=e,i();var t=n.width||600,a=n.height||400;t=Math.min(t,s.GlobalVars.currentWindow.outerWidth-400),a=Math.min(a,s.GlobalVars.currentWindow.outerHeight-200);var r=document.createElement(\"a\");r.href=n.url;var o=void 0!==s.GlobalVars.currentWindow.screenLeft?s.GlobalVars.currentWindow.screenLeft:s.GlobalVars.currentWindow.screenX,l=void 0!==s.GlobalVars.currentWindow.screenTop?s.GlobalVars.currentWindow.screenTop:s.GlobalVars.currentWindow.screenY;o+=s.GlobalVars.currentWindow.outerWidth/2-t/2,l+=s.GlobalVars.currentWindow.outerHeight/2-a/2,s.GlobalVars.childWindow=s.GlobalVars.currentWindow.open(r.href,\"_blank\",\"toolbar=no, location=yes, status=no, menubar=no, scrollbars=yes, top=\"+l+\", left=\"+o+\", width=\"+t+\", height=\"+a),s.GlobalVars.childWindow?u():c(\"FailedToOpenWindow\")}function l(){t&&(clearInterval(t),t=0),delete s.GlobalVars.handlers.initialize,delete s.GlobalVars.handlers.navigateCrossDomain}function u(){l(),t=s.GlobalVars.currentWindow.setInterval(function(){if(!s.GlobalVars.childWindow||s.GlobalVars.childWindow.closed)c(\"CancelledByUser\");else{var e=s.GlobalVars.childOrigin;try{s.GlobalVars.childOrigin=\"*\",a.sendMessageEventToChild(\"ping\")}finally{s.GlobalVars.childOrigin=e}}},100),s.GlobalVars.handlers.initialize=function(){return[r.frameContexts.authentication,s.GlobalVars.hostClientType]},s.GlobalVars.handlers.navigateCrossDomain=function(){return!1}}function c(e){try{n&&n.failureCallback&&n.failureCallback(e)}finally{n=null,i()}}function d(e,n,t){if(e){var a=document.createElement(\"a\");a.href=decodeURIComponent(e),a.host&&a.host!==window.location.host&&\"outlook.office.com\"===a.host&&a.search.indexOf(\"client_type=Win32_Outlook\")>-1&&(n&&\"result\"===n&&(t&&(a.href=f(a.href,\"result\",t)),s.GlobalVars.currentWindow.location.assign(f(a.href,\"authSuccess\",\"\"))),n&&\"reason\"===n&&(t&&(a.href=f(a.href,\"reason\",t)),s.GlobalVars.currentWindow.location.assign(f(a.href,\"authFailure\",\"\"))))}}function f(e,n,t){var a=e.indexOf(\"#\"),s=-1===a?\"#\":e.substr(a);return s=s+\"&\"+n+(\"\"!==t?\"=\"+t:\"\"),(e=-1===a?e:e.substr(0,a))+s}s.GlobalVars.handlers[\"authentication.authenticate.success\"]=function(e){try{n&&n.successCallback&&n.successCallback(e)}finally{n=null,i()}},s.GlobalVars.handlers[\"authentication.authenticate.failure\"]=c,e.registerAuthenticationHandlers=function(e){n=e},e.authenticate=function(e){var t=void 0!==e?e:n;if(a.ensureInitialized(r.frameContexts.content,r.frameContexts.settings,r.frameContexts.remove,r.frameContexts.task),\"desktop\"===s.GlobalVars.hostClientType||\"android\"===s.GlobalVars.hostClientType||\"ios\"===s.GlobalVars.hostClientType||\"rigel\"===s.GlobalVars.hostClientType){var i=document.createElement(\"a\");i.href=t.url;var l=a.sendMessageRequestToParent(\"authentication.authenticate\",[i.href,t.width,t.height]);s.GlobalVars.callbacks[l]=function(e,n){e?t.successCallback(n):t.failureCallback(n)}}else o(t)},e.getAuthToken=function(e){a.ensureInitialized();var n=a.sendMessageRequestToParent(\"authentication.getAuthToken\",[e.resources]);s.GlobalVars.callbacks[n]=function(n,t){n?e.successCallback(t):e.failureCallback(t)}},e.getUser=function(e){a.ensureInitialized();var n=a.sendMessageRequestToParent(\"authentication.getUser\");s.GlobalVars.callbacks[n]=function(n,t){n?e.successCallback(t):e.failureCallback(t)}},e.notifySuccess=function(e,n){d(n,\"result\",e),a.ensureInitialized(r.frameContexts.authentication),a.sendMessageRequestToParent(\"authentication.authenticate.success\",[e]),a.waitForMessageQueue(s.GlobalVars.parentWindow,function(){return setTimeout(function(){return s.GlobalVars.currentWindow.close()},200)})},e.notifyFailure=function(e,n){d(n,\"reason\",e),a.ensureInitialized(r.frameContexts.authentication),a.sendMessageRequestToParent(\"authentication.authenticate.failure\",[e]),a.waitForMessageQueue(s.GlobalVars.parentWindow,function(){return setTimeout(function(){return s.GlobalVars.currentWindow.close()},200)})}}(n.authentication||(n.authentication={}))},function(e,n,t){\"use strict\";var a=this&&this.__rest||function(e,n){var t={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&n.indexOf(a)<0&&(t[a]=e[a]);if(null!=e&&\"function\"==typeof Object.getOwnPropertySymbols){var s=0;for(a=Object.getOwnPropertySymbols(e);s<a.length;s++)n.indexOf(a[s])<0&&(t[a[s]]=e[a[s]])}return t};Object.defineProperty(n,\"__esModule\",{value:!0});var s=t(1),r=t(0),i=t(2),o=t(7);!function(e){e.startTask=function(e,n){s.ensureInitialized(i.frameContexts.content);var t=s.sendMessageRequestToParent(\"tasks.startTask\",[e]);return r.GlobalVars.callbacks[t]=n,new o.ChildAppWindow},e.updateTask=function(e){s.ensureInitialized(i.frameContexts.content,i.frameContexts.task),e.width,e.height;var n=a(e,[\"width\",\"height\"]);if(Object.keys(n).length)throw new Error(\"updateTask requires a taskInfo argument containing only width and height\");s.sendMessageRequestToParent(\"tasks.updateTask\",[e])},e.submitTask=function(e,n){s.ensureInitialized(i.frameContexts.content,i.frameContexts.task),s.sendMessageRequestToParent(\"tasks.completeTask\",[e,Array.isArray(n)?n:[n]])}}(n.tasks||(n.tasks={}))}])});","/*! @azure/msal-browser v2.0.1 2020-08-04 */\n'use strict';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\n\n/*! @azure/msal-common v1.1.0 2020-08-04 */\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics$1 = function(d, b) {\r\n    extendStatics$1 = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics$1(d, b);\r\n};\r\n\r\nfunction __extends$1(d, b) {\r\n    extendStatics$1(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign$1 = function() {\r\n    __assign$1 = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign$1.apply(this, arguments);\r\n};\r\n\r\nfunction __awaiter$1(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator$1(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __spreadArrays$1() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * AuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nvar AuthErrorMessage = {\r\n    unexpectedError: {\r\n        code: \"unexpected_error\",\r\n        desc: \"Unexpected error in authentication.\"\r\n    }\r\n};\r\n/**\r\n * General error class thrown by the MSAL.js library.\r\n */\r\nvar AuthError = /** @class */ (function (_super) {\r\n    __extends$1(AuthError, _super);\r\n    function AuthError(errorCode, errorMessage) {\r\n        var _this = this;\r\n        var errorString = errorMessage ? errorCode + \": \" + errorMessage : errorCode;\r\n        _this = _super.call(this, errorString) || this;\r\n        Object.setPrototypeOf(_this, AuthError.prototype);\r\n        _this.errorCode = errorCode;\r\n        _this.errorMessage = errorMessage;\r\n        _this.name = \"AuthError\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates an error that is thrown when something unexpected happens in the library.\r\n     * @param errDesc\r\n     */\r\n    AuthError.createUnexpectedError = function (errDesc) {\r\n        return new AuthError(AuthErrorMessage.unexpectedError.code, AuthErrorMessage.unexpectedError.desc + \": \" + errDesc);\r\n    };\r\n    return AuthError;\r\n}(Error));\n\nvar name = \"@azure/msal-common\";\nvar author = {\n\tname: \"Microsoft\",\n\temail: \"nugetaad@microsoft.com\",\n\turl: \"https://www.microsoft.com\"\n};\nvar license = \"MIT\";\nvar repository = {\n\ttype: \"git\",\n\turl: \"https://github.com/AzureAD/microsoft-authentication-library-for-js.git\"\n};\nvar version = \"1.1.0\";\nvar description = \"Microsoft Authentication Library for js\";\nvar keywords = [\n\t\"implicit\",\n\t\"authorization code\",\n\t\"PKCE\",\n\t\"js\",\n\t\"AAD\",\n\t\"msal\",\n\t\"oauth\"\n];\nvar main = \"./dist/index.js\";\nvar module = \"./dist/index.es.js\";\nvar types = \"./dist/src/index.d.ts\";\nvar browserslist = [\n\t\"last 1 version\",\n\t\"> 1%\",\n\t\"maintained node versions\",\n\t\"not dead\"\n];\nvar engines = {\n\tnode: \">=0.8.0\"\n};\nvar directories = {\n\ttest: \"test\"\n};\nvar files = [\n\t\"dist\"\n];\nvar scripts = {\n\tclean: \"shx rm -rf dist lib\",\n\t\"clean:coverage\": \"rimraf ../../.nyc_output/*\",\n\tdoc: \"npm run doc:generate && npm run doc:deploy\",\n\t\"doc:generate\": \"typedoc --mode modules --excludePrivate --excludeProtected --excludeNotExported --out ./ref ./src/ --gitRevision dev\",\n\t\"doc:deploy\": \"gh-pages -d ref -a -e ref/msal-common\",\n\tlint: \"eslint src --ext .ts\",\n\ttest: \"mocha\",\n\t\"test:coverage\": \"nyc --reporter=text mocha --exit\",\n\t\"test:coverage:only\": \"npm run clean:coverage && npm run test:coverage\",\n\t\"build:modules\": \"rollup -c\",\n\t\"build:modules:watch\": \"rollup -cw\",\n\tbuild: \"npm run clean && npm run lint && npm run build:modules\",\n\tprepack: \"npm run build\"\n};\nvar devDependencies = {\n\t\"@babel/core\": \"^7.7.2\",\n\t\"@babel/plugin-proposal-class-properties\": \"^7.7.0\",\n\t\"@babel/plugin-proposal-object-rest-spread\": \"^7.6.2\",\n\t\"@babel/polyfill\": \"^7.7.0\",\n\t\"@babel/preset-env\": \"^7.7.1\",\n\t\"@babel/preset-typescript\": \"^7.7.2\",\n\t\"@babel/register\": \"^7.7.0\",\n\t\"@istanbuljs/nyc-config-babel\": \"^2.1.1\",\n\t\"@rollup/plugin-json\": \"^4.0.0\",\n\t\"@types/chai\": \"^4.2.5\",\n\t\"@types/chai-as-promised\": \"^7.1.2\",\n\t\"@types/debug\": \"^4.1.5\",\n\t\"@types/mocha\": \"^5.2.7\",\n\t\"@types/sinon\": \"^7.5.0\",\n\t\"@typescript-eslint/eslint-plugin\": \"^2.4.0\",\n\t\"@typescript-eslint/eslint-plugin-tslint\": \"^2.4.0\",\n\t\"@typescript-eslint/parser\": \"^2.4.0\",\n\t\"babel-plugin-istanbul\": \"^5.2.0\",\n\tbeachball: \"^1.32.2\",\n\tchai: \"^4.2.0\",\n\t\"chai-as-promised\": \"^7.1.1\",\n\teslint: \"^6.5.1\",\n\t\"gh-pages\": \"^3.1.0\",\n\thusky: \"^3.0.9\",\n\tmocha: \"^6.2.2\",\n\tnyc: \"^14.1.1\",\n\trimraf: \"^3.0.2\",\n\trollup: \"^1.24.0\",\n\t\"rollup-plugin-typescript2\": \"^0.24.3\",\n\t\"rollup-plugin-uglify\": \"^6.0.4\",\n\tshx: \"^0.3.2\",\n\tsinon: \"^7.5.0\",\n\ttslib: \"^1.10.0\",\n\ttslint: \"^5.20.0\",\n\ttypedoc: \"^0.17.8\",\n\ttypescript: \"^3.7.5\"\n};\nvar dependencies = {\n\tdebug: \"^4.1.1\"\n};\nvar pkg = {\n\tname: name,\n\tauthor: author,\n\tlicense: license,\n\trepository: repository,\n\tversion: version,\n\tdescription: description,\n\tkeywords: keywords,\n\tmain: main,\n\tmodule: module,\n\ttypes: types,\n\tbrowserslist: browserslist,\n\tengines: engines,\n\tdirectories: directories,\n\tfiles: files,\n\tscripts: scripts,\n\tdevDependencies: devDependencies,\n\tdependencies: dependencies\n};\n\n/**\r\n * ClientAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nvar ClientAuthErrorMessage = {\r\n    clientInfoDecodingError: {\r\n        code: \"client_info_decoding_error\",\r\n        desc: \"The client info could not be parsed/decoded correctly. Please review the trace to determine the root cause.\"\r\n    },\r\n    clientInfoEmptyError: {\r\n        code: \"client_info_empty_error\",\r\n        desc: \"The client info was empty. Please review the trace to determine the root cause.\"\r\n    },\r\n    idTokenParsingError: {\r\n        code: \"id_token_parsing_error\",\r\n        desc: \"ID token cannot be parsed. Please review stack trace to determine root cause.\"\r\n    },\r\n    nullOrEmptyIdToken: {\r\n        code: \"null_or_empty_id_token\",\r\n        desc: \"The idToken is null or empty. Please review the trace to determine the root cause.\"\r\n    },\r\n    endpointResolutionError: {\r\n        code: \"endpoints_resolution_error\",\r\n        desc: \"Error: could not resolve endpoints. Please check network and try again.\"\r\n    },\r\n    invalidAuthorityType: {\r\n        code: \"invalid_authority_type\",\r\n        desc: \"The given authority is not a valid type of authority supported by MSAL. Please review the trace to determine the root cause.\"\r\n    },\r\n    hashNotDeserialized: {\r\n        code: \"hash_not_deserialized\",\r\n        desc: \"The hash parameters could not be deserialized. Please review the trace to determine the root cause.\"\r\n    },\r\n    blankGuidGenerated: {\r\n        code: \"blank_guid_generated\",\r\n        desc: \"The guid generated was blank. Please review the trace to determine the root cause.\"\r\n    },\r\n    invalidStateError: {\r\n        code: \"invalid_state\",\r\n        desc: \"State was not the expected format. Please check the logs to determine whether the request was sent using ProtocolUtils.setRequestState().\"\r\n    },\r\n    stateMismatchError: {\r\n        code: \"state_mismatch\",\r\n        desc: \"State mismatch error. Please check your network. Continued requests may cause cache overflow.\"\r\n    },\r\n    nonceMismatchError: {\r\n        code: \"nonce_mismatch\",\r\n        desc: \"Nonce mismatch error. This may be caused by a race condition in concurrent requests.\"\r\n    },\r\n    accountMismatchError: {\r\n        code: \"account_mismatch\",\r\n        desc: \"The cached account and account which made the token request do not match.\"\r\n    },\r\n    invalidIdToken: {\r\n        code: \"invalid_id_token\",\r\n        desc: \"Invalid ID token format.\"\r\n    },\r\n    noTokensFoundError: {\r\n        code: \"no_tokens_found\",\r\n        desc: \"No tokens were found for the given scopes, and no authorization code was passed to acquireToken. You must retrieve an authorization code before making a call to acquireToken().\"\r\n    },\r\n    cacheParseError: {\r\n        code: \"cache_parse_error\",\r\n        desc: \"Could not parse cache key.\"\r\n    },\r\n    userLoginRequiredError: {\r\n        code: \"user_login_error\",\r\n        desc: \"User login is required.\"\r\n    },\r\n    multipleMatchingTokens: {\r\n        code: \"multiple_matching_tokens\",\r\n        desc: \"The cache contains multiple tokens satisfying the requirements. \" +\r\n            \"Call AcquireToken again providing more requirements such as authority or account.\"\r\n    },\r\n    multipleMatchingAccounts: {\r\n        code: \"multiple_matching_accounts\",\r\n        desc: \"The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account\"\r\n    },\r\n    tokenRequestCannotBeMade: {\r\n        code: \"request_cannot_be_made\",\r\n        desc: \"Token request cannot be made without authorization code or refresh token.\"\r\n    },\r\n    appendEmptyScopeError: {\r\n        code: \"cannot_append_empty_scope\",\r\n        desc: \"Cannot append null or empty scope to ScopeSet. Please check the stack trace for more info.\"\r\n    },\r\n    removeEmptyScopeError: {\r\n        code: \"cannot_remove_empty_scope\",\r\n        desc: \"Cannot remove null or empty scope from ScopeSet. Please check the stack trace for more info.\"\r\n    },\r\n    appendScopeSetError: {\r\n        code: \"cannot_append_scopeset\",\r\n        desc: \"Cannot append ScopeSet due to error.\"\r\n    },\r\n    emptyInputScopeSetError: {\r\n        code: \"empty_input_scopeset\",\r\n        desc: \"Empty input ScopeSet cannot be processed.\"\r\n    },\r\n    DeviceCodePollingCancelled: {\r\n        code: \"device_code_polling_cancelled\",\r\n        desc: \"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.\"\r\n    },\r\n    DeviceCodeExpired: {\r\n        code: \"device_code_expired\",\r\n        desc: \"Device code is expired.\"\r\n    },\r\n    NoAccountInSilentRequest: {\r\n        code: \"no_account_in_silent_request\",\r\n        desc: \"Please pass an account object, silent flow is not supported without account information\"\r\n    },\r\n    invalidCacheRecord: {\r\n        code: \"invalid_cache_record\",\r\n        desc: \"Cache record object was null or undefined.\"\r\n    },\r\n    invalidCacheEnvironment: {\r\n        code: \"invalid_cache_environment\",\r\n        desc: \"Invalid environment when attempting to create cache entry\"\r\n    },\r\n    noAccountFound: {\r\n        code: \"no_account_found\",\r\n        desc: \"No account found in cache for given key.\"\r\n    },\r\n    CachePluginError: {\r\n        code: \"no cache plugin set on CacheManager\",\r\n        desc: \"ICachePlugin needs to be set before using readFromStorage or writeFromStorage\"\r\n    },\r\n    noCryptoObj: {\r\n        code: \"no_crypto_object\",\r\n        desc: \"No crypto object detected. This is required for the following operation: \"\r\n    },\r\n    invalidCacheType: {\r\n        code: \"invalid_cache_type\",\r\n        desc: \"Invalid cache type\"\r\n    },\r\n    unexpectedAccountType: {\r\n        code: \"unexpected_account_type\",\r\n        desc: \"Unexpected account type.\"\r\n    },\r\n    unexpectedCredentialType: {\r\n        code: \"unexpected_credential_type\",\r\n        desc: \"Unexpected credential type.\"\r\n    },\r\n    invalidAssertion: {\r\n        code: \"invalid_assertion\",\r\n        desc: \"Client assertion must meet requirements described in https://tools.ietf.org/html/rfc7515\"\r\n    },\r\n    invalidClientCredential: {\r\n        code: \"invalid_client_credential\",\r\n        desc: \"Client credential (secret, certificate, or assertion) must not be empty when creating a confidential client. An application should at most have one credential\"\r\n    }\r\n};\r\n/**\r\n * Error thrown when there is an error in the client code running on the browser.\r\n */\r\nvar ClientAuthError = /** @class */ (function (_super) {\r\n    __extends$1(ClientAuthError, _super);\r\n    function ClientAuthError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"ClientAuthError\";\r\n        Object.setPrototypeOf(_this, ClientAuthError.prototype);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates an error thrown when client info object doesn't decode correctly.\r\n     * @param caughtError\r\n     */\r\n    ClientAuthError.createClientInfoDecodingError = function (caughtError) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.clientInfoDecodingError.code, ClientAuthErrorMessage.clientInfoDecodingError.desc + \" Failed with error: \" + caughtError);\r\n    };\r\n    /**\r\n     * Creates an error thrown if the client info is empty.\r\n     * @param rawClientInfo\r\n     */\r\n    ClientAuthError.createClientInfoEmptyError = function (rawClientInfo) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.clientInfoEmptyError.code, ClientAuthErrorMessage.clientInfoEmptyError.desc + \" Given Object: \" + rawClientInfo);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the id token extraction errors out.\r\n     * @param err\r\n     */\r\n    ClientAuthError.createIdTokenParsingError = function (caughtExtractionError) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.idTokenParsingError.code, ClientAuthErrorMessage.idTokenParsingError.desc + \" Failed with error: \" + caughtExtractionError);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the id token string is null or empty.\r\n     * @param invalidRawTokenString\r\n     */\r\n    ClientAuthError.createIdTokenNullOrEmptyError = function (invalidRawTokenString) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.nullOrEmptyIdToken.code, ClientAuthErrorMessage.nullOrEmptyIdToken.desc + \" Raw ID Token Value: \" + invalidRawTokenString);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the endpoint discovery doesn't complete correctly.\r\n     */\r\n    ClientAuthError.createEndpointDiscoveryIncompleteError = function (errDetail) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.endpointResolutionError.code, ClientAuthErrorMessage.endpointResolutionError.desc + \" Detail: \" + errDetail);\r\n    };\r\n    /**\r\n     * Creates an error thrown if authority type is not valid.\r\n     * @param invalidAuthorityError\r\n     */\r\n    ClientAuthError.createInvalidAuthorityTypeError = function (givenUrl) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidAuthorityType.code, ClientAuthErrorMessage.invalidAuthorityType.desc + \" Given Url: \" + givenUrl);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the hash cannot be deserialized.\r\n     * @param invalidAuthorityError\r\n     */\r\n    ClientAuthError.createHashNotDeserializedError = function (hashParamObj) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.hashNotDeserialized.code, ClientAuthErrorMessage.hashNotDeserialized.desc + \" Given Object: \" + hashParamObj);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the state cannot be parsed.\r\n     * @param invalidState\r\n     */\r\n    ClientAuthError.createInvalidStateError = function (invalidState, errorString) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidStateError.code, ClientAuthErrorMessage.invalidStateError.desc + \" Invalid State: \" + invalidState + \", Root Err: \" + errorString);\r\n    };\r\n    /**\r\n     * Creates an error thrown when two states do not match.\r\n     */\r\n    ClientAuthError.createStateMismatchError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.stateMismatchError.code, ClientAuthErrorMessage.stateMismatchError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the nonce does not match.\r\n     */\r\n    ClientAuthError.createNonceMismatchError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.nonceMismatchError.code, ClientAuthErrorMessage.nonceMismatchError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the cached account and response account do not match.\r\n     */\r\n    ClientAuthError.createAccountMismatchError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.accountMismatchError.code, ClientAuthErrorMessage.accountMismatchError.desc);\r\n    };\r\n    /**\r\n     * Throws error if idToken is not correctly formed\r\n     * @param idToken\r\n     */\r\n    ClientAuthError.createInvalidIdTokenError = function (idToken) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidIdToken.code, ClientAuthErrorMessage.invalidIdToken.desc + \" Given token: \" + JSON.stringify(idToken));\r\n    };\r\n    /**\r\n     * Creates an error thrown when the authorization code required for a token request is null or empty.\r\n     */\r\n    ClientAuthError.createNoTokensFoundError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.noTokensFoundError.code, ClientAuthErrorMessage.noTokensFoundError.desc);\r\n    };\r\n    /**\r\n     * Creates an error in cache parsing.\r\n     */\r\n    ClientAuthError.createCacheParseError = function (cacheKey) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.cacheParseError.code, ClientAuthErrorMessage.cacheParseError.desc + \" Cache key: \" + cacheKey);\r\n    };\r\n    /**\r\n     * Throws error when renewing token without login.\r\n     */\r\n    ClientAuthError.createUserLoginRequiredError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.userLoginRequiredError.code, ClientAuthErrorMessage.userLoginRequiredError.desc);\r\n    };\r\n    /**\r\n     * Throws error when multiple tokens are in cache for the given scope.\r\n     * @param scope\r\n     */\r\n    ClientAuthError.createMultipleMatchingTokensInCacheError = function (scope) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.multipleMatchingTokens.code, \"Cache error for scope \" + scope + \": \" + ClientAuthErrorMessage.multipleMatchingTokens.desc + \".\");\r\n    };\r\n    /**\r\n     * Throws error when multiple tokens are in cache for the given scope.\r\n     * @param scope\r\n     */\r\n    ClientAuthError.createMultipleMatchingAccountsInCacheError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.multipleMatchingAccounts.code, ClientAuthErrorMessage.multipleMatchingAccounts.desc);\r\n    };\r\n    /**\r\n     * Throws error when no auth code or refresh token is given to ServerTokenRequestParameters.\r\n     */\r\n    ClientAuthError.createTokenRequestCannotBeMadeError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.tokenRequestCannotBeMade.code, ClientAuthErrorMessage.tokenRequestCannotBeMade.desc);\r\n    };\r\n    /**\r\n     * Throws error when attempting to append a null, undefined or empty scope to a set\r\n     * @param givenScope\r\n     */\r\n    ClientAuthError.createAppendEmptyScopeToSetError = function (givenScope) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.appendEmptyScopeError.code, ClientAuthErrorMessage.appendEmptyScopeError.desc + \" Given Scope: \" + givenScope);\r\n    };\r\n    /**\r\n     * Throws error when attempting to append a null, undefined or empty scope to a set\r\n     * @param givenScope\r\n     */\r\n    ClientAuthError.createRemoveEmptyScopeFromSetError = function (givenScope) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.removeEmptyScopeError.code, ClientAuthErrorMessage.removeEmptyScopeError.desc + \" Given Scope: \" + givenScope);\r\n    };\r\n    /**\r\n     * Throws error when attempting to append null or empty ScopeSet.\r\n     * @param appendError\r\n     */\r\n    ClientAuthError.createAppendScopeSetError = function (appendError) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.appendScopeSetError.code, ClientAuthErrorMessage.appendScopeSetError.desc + \" Detail Error: \" + appendError);\r\n    };\r\n    /**\r\n     * Throws error if ScopeSet is null or undefined.\r\n     * @param givenScopeSet\r\n     */\r\n    ClientAuthError.createEmptyInputScopeSetError = function (givenScopeSet) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.emptyInputScopeSetError.code, ClientAuthErrorMessage.emptyInputScopeSetError.desc + \" Given ScopeSet: \" + givenScopeSet);\r\n    };\r\n    /**\r\n     * Throws error if user sets CancellationToken.cancel = true during polling of token endpoint during device code flow\r\n     */\r\n    ClientAuthError.createDeviceCodeCancelledError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.DeviceCodePollingCancelled.code, \"\" + ClientAuthErrorMessage.DeviceCodePollingCancelled.desc);\r\n    };\r\n    /**\r\n     * Throws error if device code is expired\r\n     */\r\n    ClientAuthError.createDeviceCodeExpiredError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.DeviceCodeExpired.code, \"\" + ClientAuthErrorMessage.DeviceCodeExpired.desc);\r\n    };\r\n    /**\r\n     * Throws error when silent requests are made without an account object\r\n     */\r\n    ClientAuthError.createNoAccountInSilentRequestError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.NoAccountInSilentRequest.code, \"\" + ClientAuthErrorMessage.NoAccountInSilentRequest.desc);\r\n    };\r\n    /**\r\n     * Throws error when cache record is null or undefined.\r\n     */\r\n    ClientAuthError.createNullOrUndefinedCacheRecord = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidCacheRecord.code, ClientAuthErrorMessage.invalidCacheRecord.desc);\r\n    };\r\n    /**\r\n     * Throws error when provided environment is not part of the CloudDiscoveryMetadata object\r\n     */\r\n    ClientAuthError.createInvalidCacheEnvironmentError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidCacheEnvironment.code, ClientAuthErrorMessage.invalidCacheEnvironment.desc);\r\n    };\r\n    /**\r\n     * Throws error when account is not found in cache.\r\n     */\r\n    ClientAuthError.createNoAccountFoundError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.noAccountFound.code, ClientAuthErrorMessage.noAccountFound.desc);\r\n    };\r\n    /**\r\n     * Throws error if ICachePlugin not set on CacheManager.\r\n     */\r\n    ClientAuthError.createCachePluginError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.CachePluginError.code, \"\" + ClientAuthErrorMessage.CachePluginError.desc);\r\n    };\r\n    /**\r\n     * Throws error if crypto object not found.\r\n     * @param operationName\r\n     */\r\n    ClientAuthError.createNoCryptoObjectError = function (operationName) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.noCryptoObj.code, \"\" + ClientAuthErrorMessage.noCryptoObj.desc + operationName);\r\n    };\r\n    /**\r\n    * Throws error if cache type is invalid.\r\n    */\r\n    ClientAuthError.createInvalidCacheTypeError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidCacheType.code, \"\" + ClientAuthErrorMessage.invalidCacheType.desc);\r\n    };\r\n    /**\r\n    * Throws error if unexpected account type.\r\n    */\r\n    ClientAuthError.createUnexpectedAccountTypeError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.unexpectedAccountType.code, \"\" + ClientAuthErrorMessage.unexpectedAccountType.desc);\r\n    };\r\n    /**\r\n    * Throws error if unexpected credential type.\r\n    */\r\n    ClientAuthError.createUnexpectedCredentialTypeError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.unexpectedCredentialType.code, \"\" + ClientAuthErrorMessage.unexpectedCredentialType.desc);\r\n    };\r\n    /**\r\n    * Throws error if client assertion is not valid.\r\n    */\r\n    ClientAuthError.createInvalidAssertionError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidAssertion.code, \"\" + ClientAuthErrorMessage.invalidAssertion.desc);\r\n    };\r\n    /**\r\n    * Throws error if client assertion is not valid.\r\n    */\r\n    ClientAuthError.createInvalidCredentialError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidClientCredential.code, \"\" + ClientAuthErrorMessage.invalidClientCredential.desc);\r\n    };\r\n    return ClientAuthError;\r\n}(AuthError));\n\n/**\r\n * @hidden\r\n */\r\nvar StringUtils = /** @class */ (function () {\r\n    function StringUtils() {\r\n    }\r\n    /**\r\n     * decode a JWT\r\n     *\r\n     * @param jwtToken\r\n     */\r\n    StringUtils.decodeJwt = function (jwtToken) {\r\n        if (StringUtils.isEmpty(jwtToken)) {\r\n            throw ClientAuthError.createIdTokenNullOrEmptyError(jwtToken);\r\n        }\r\n        var idTokenPartsRegex = /^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/;\r\n        var matches = idTokenPartsRegex.exec(jwtToken);\r\n        if (!matches || matches.length < 4) {\r\n            throw ClientAuthError.createIdTokenParsingError(\"Given token is malformed: \" + JSON.stringify(jwtToken));\r\n        }\r\n        var crackedToken = {\r\n            header: matches[1],\r\n            JWSPayload: matches[2],\r\n            JWSSig: matches[3]\r\n        };\r\n        return crackedToken;\r\n    };\r\n    /**\r\n     * Check if a string is empty.\r\n     *\r\n     * @param str\r\n     */\r\n    StringUtils.isEmpty = function (str) {\r\n        return (typeof str === \"undefined\" || !str || 0 === str.length);\r\n    };\r\n    StringUtils.startsWith = function (str, search) {\r\n        return str.indexOf(search) === 0;\r\n    };\r\n    StringUtils.endsWith = function (str, search) {\r\n        return (str.length >= search.length) && (str.lastIndexOf(search) === (str.length - search.length));\r\n    };\r\n    /**\r\n     * Parses string into an object.\r\n     *\r\n     * @param query\r\n     */\r\n    StringUtils.queryStringToObject = function (query) {\r\n        var match; // Regex for replacing addition symbol with a space\r\n        var pl = /\\+/g;\r\n        var search = /([^&=]+)=([^&]*)/g;\r\n        var decode = function (s) { return decodeURIComponent(decodeURIComponent(s.replace(pl, \" \"))); };\r\n        var obj = {};\r\n        match = search.exec(query);\r\n        while (match) {\r\n            obj[decode(match[1])] = decode(match[2]);\r\n            match = search.exec(query);\r\n        }\r\n        return obj;\r\n    };\r\n    /**\r\n     * Trims entries in an array.\r\n     *\r\n     * @param arr\r\n     */\r\n    StringUtils.trimArrayEntries = function (arr) {\r\n        return arr.map(function (entry) { return entry.trim(); });\r\n    };\r\n    /**\r\n     * Removes empty strings from array\r\n     * @param arr\r\n     */\r\n    StringUtils.removeEmptyStringsFromArray = function (arr) {\r\n        return arr.filter(function (entry) {\r\n            return !StringUtils.isEmpty(entry);\r\n        });\r\n    };\r\n    return StringUtils;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Log message level.\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"Error\"] = 0] = \"Error\";\r\n    LogLevel[LogLevel[\"Warning\"] = 1] = \"Warning\";\r\n    LogLevel[LogLevel[\"Info\"] = 2] = \"Info\";\r\n    LogLevel[LogLevel[\"Verbose\"] = 3] = \"Verbose\";\r\n})(LogLevel || (LogLevel = {}));\r\n/**\r\n * Class which facilitates logging of messages to a specific place.\r\n */\r\nvar Logger = /** @class */ (function () {\r\n    function Logger(loggerOptions) {\r\n        // Current log level, defaults to info.\r\n        this.level = LogLevel.Info;\r\n        if (loggerOptions) {\r\n            this.localCallback = loggerOptions.loggerCallback;\r\n            this.piiLoggingEnabled = loggerOptions.piiLoggingEnabled;\r\n            this.level = loggerOptions.logLevel;\r\n        }\r\n    }\r\n    /**\r\n     * Log message with required options.\r\n     */\r\n    Logger.prototype.logMessage = function (logMessage, options) {\r\n        if ((options.logLevel > this.level) || (!this.piiLoggingEnabled && options.containsPii)) {\r\n            return;\r\n        }\r\n        var timestamp = new Date().toUTCString();\r\n        var logHeader = StringUtils.isEmpty(this.correlationId) ? \"[\" + timestamp + \"] : \" : \"[\" + timestamp + \"] : [\" + this.correlationId + \"]\";\r\n        var log = logHeader + \" : \" + pkg.version + \" : \" + LogLevel[options.logLevel] + \" - \" + logMessage;\r\n        // debug(`msal:${LogLevel[options.logLevel]}${options.containsPii ? \"-Pii\": \"\"}${options.context ? `:${options.context}` : \"\"}`)(logMessage);\r\n        this.executeCallback(options.logLevel, log, options.containsPii);\r\n    };\r\n    /**\r\n     * Execute callback with message.\r\n     */\r\n    Logger.prototype.executeCallback = function (level, message, containsPii) {\r\n        if (this.localCallback) {\r\n            this.localCallback(level, message, containsPii);\r\n        }\r\n    };\r\n    /**\r\n     * Logs error messages.\r\n     */\r\n    Logger.prototype.error = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Error,\r\n            containsPii: false,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs error messages with PII.\r\n     */\r\n    Logger.prototype.errorPii = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Error,\r\n            containsPii: true,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs warning messages.\r\n     */\r\n    Logger.prototype.warning = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Warning,\r\n            containsPii: false,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs warning messages with PII.\r\n     */\r\n    Logger.prototype.warningPii = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Warning,\r\n            containsPii: true,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs info messages.\r\n     */\r\n    Logger.prototype.info = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Info,\r\n            containsPii: false,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs info messages with PII.\r\n     */\r\n    Logger.prototype.infoPii = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Info,\r\n            containsPii: true,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs verbose messages.\r\n     */\r\n    Logger.prototype.verbose = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Verbose,\r\n            containsPii: false,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs verbose messages with PII.\r\n     */\r\n    Logger.prototype.verbosePii = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Verbose,\r\n            containsPii: true,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether PII Logging is enabled or not.\r\n     */\r\n    Logger.prototype.isPiiLoggingEnabled = function () {\r\n        return this.piiLoggingEnabled || false;\r\n    };\r\n    return Logger;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar Constants = {\r\n    LIBRARY_NAME: \"MSAL.JS\",\r\n    SKU: \"msal.js.common\",\r\n    // Prefix for all library cache entries\r\n    CACHE_PREFIX: \"msal\",\r\n    // default authority\r\n    DEFAULT_AUTHORITY: \"https://login.microsoftonline.com/common/\",\r\n    DEFAULT_AUTHORITY_HOST: \"login.microsoftonline.com\",\r\n    // ADFS String\r\n    ADFS: \"adfs\",\r\n    // Default AAD Instance Discovery Endpoint\r\n    AAD_INSTANCE_DISCOVERY_ENDPT: \"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=\",\r\n    // Resource delimiter - used for certain cache entries\r\n    RESOURCE_DELIM: \"|\",\r\n    // Placeholder for non-existent account ids/objects\r\n    NO_ACCOUNT: \"NO_ACCOUNT\",\r\n    // Claims\r\n    CLAIMS: \"claims\",\r\n    // Consumer UTID\r\n    CONSUMER_UTID: \"9188040d-6c67-4c5b-b112-36a304b66dad\",\r\n    // Default scopes\r\n    OPENID_SCOPE: \"openid\",\r\n    PROFILE_SCOPE: \"profile\",\r\n    OFFLINE_ACCESS_SCOPE: \"offline_access\",\r\n    // Default response type for authorization code flow\r\n    CODE_RESPONSE_TYPE: \"code\",\r\n    CODE_GRANT_TYPE: \"authorization_code\",\r\n    RT_GRANT_TYPE: \"refresh_token\",\r\n    FRAGMENT_RESPONSE_MODE: \"fragment\",\r\n    S256_CODE_CHALLENGE_METHOD: \"S256\",\r\n    URL_FORM_CONTENT_TYPE: \"application/x-www-form-urlencoded;charset=utf-8\",\r\n    AUTHORIZATION_PENDING: \"authorization_pending\",\r\n    NOT_DEFINED: \"not_defined\"\r\n};\r\n/**\r\n * Request header names\r\n */\r\nvar HeaderNames;\r\n(function (HeaderNames) {\r\n    HeaderNames[\"CONTENT_TYPE\"] = \"Content-Type\";\r\n    HeaderNames[\"X_CLIENT_CURR_TELEM\"] = \"x-client-current-telemetry\";\r\n    HeaderNames[\"X_CLIENT_LAST_TELEM\"] = \"x-client-last-telemetry\";\r\n})(HeaderNames || (HeaderNames = {}));\r\n/**\r\n * Persistent cache keys MSAL which stay while user is logged in.\r\n */\r\nvar PersistentCacheKeys;\r\n(function (PersistentCacheKeys) {\r\n    PersistentCacheKeys[\"ID_TOKEN\"] = \"idtoken\";\r\n    PersistentCacheKeys[\"CLIENT_INFO\"] = \"client.info\";\r\n    PersistentCacheKeys[\"ADAL_ID_TOKEN\"] = \"adal.idtoken\";\r\n    PersistentCacheKeys[\"ERROR\"] = \"error\";\r\n    PersistentCacheKeys[\"ERROR_DESC\"] = \"error.description\";\r\n})(PersistentCacheKeys || (PersistentCacheKeys = {}));\r\n/**\r\n * String constants related to AAD Authority\r\n */\r\nvar AADAuthorityConstants;\r\n(function (AADAuthorityConstants) {\r\n    AADAuthorityConstants[\"COMMON\"] = \"common\";\r\n    AADAuthorityConstants[\"ORGANIZATIONS\"] = \"organizations\";\r\n    AADAuthorityConstants[\"CONSUMERS\"] = \"consumers\";\r\n})(AADAuthorityConstants || (AADAuthorityConstants = {}));\r\n/**\r\n * Keys in the hashParams sent by AAD Server\r\n */\r\nvar AADServerParamKeys;\r\n(function (AADServerParamKeys) {\r\n    AADServerParamKeys[\"CLIENT_ID\"] = \"client_id\";\r\n    AADServerParamKeys[\"REDIRECT_URI\"] = \"redirect_uri\";\r\n    AADServerParamKeys[\"RESPONSE_TYPE\"] = \"response_type\";\r\n    AADServerParamKeys[\"RESPONSE_MODE\"] = \"response_mode\";\r\n    AADServerParamKeys[\"GRANT_TYPE\"] = \"grant_type\";\r\n    AADServerParamKeys[\"CLAIMS\"] = \"claims\";\r\n    AADServerParamKeys[\"SCOPE\"] = \"scope\";\r\n    AADServerParamKeys[\"ERROR\"] = \"error\";\r\n    AADServerParamKeys[\"ERROR_DESCRIPTION\"] = \"error_description\";\r\n    AADServerParamKeys[\"ACCESS_TOKEN\"] = \"access_token\";\r\n    AADServerParamKeys[\"ID_TOKEN\"] = \"id_token\";\r\n    AADServerParamKeys[\"REFRESH_TOKEN\"] = \"refresh_token\";\r\n    AADServerParamKeys[\"EXPIRES_IN\"] = \"expires_in\";\r\n    AADServerParamKeys[\"STATE\"] = \"state\";\r\n    AADServerParamKeys[\"NONCE\"] = \"nonce\";\r\n    AADServerParamKeys[\"PROMPT\"] = \"prompt\";\r\n    AADServerParamKeys[\"SESSION_STATE\"] = \"session_state\";\r\n    AADServerParamKeys[\"CLIENT_INFO\"] = \"client_info\";\r\n    AADServerParamKeys[\"CODE\"] = \"code\";\r\n    AADServerParamKeys[\"CODE_CHALLENGE\"] = \"code_challenge\";\r\n    AADServerParamKeys[\"CODE_CHALLENGE_METHOD\"] = \"code_challenge_method\";\r\n    AADServerParamKeys[\"CODE_VERIFIER\"] = \"code_verifier\";\r\n    AADServerParamKeys[\"CLIENT_REQUEST_ID\"] = \"client-request-id\";\r\n    AADServerParamKeys[\"X_CLIENT_SKU\"] = \"x-client-SKU\";\r\n    AADServerParamKeys[\"X_CLIENT_VER\"] = \"x-client-VER\";\r\n    AADServerParamKeys[\"X_CLIENT_OS\"] = \"x-client-OS\";\r\n    AADServerParamKeys[\"X_CLIENT_CPU\"] = \"x-client-CPU\";\r\n    AADServerParamKeys[\"POST_LOGOUT_URI\"] = \"post_logout_redirect_uri\";\r\n    AADServerParamKeys[\"DEVICE_CODE\"] = \"device_code\";\r\n    AADServerParamKeys[\"CLIENT_SECRET\"] = \"client_secret\";\r\n    AADServerParamKeys[\"CLIENT_ASSERTION\"] = \"client_assertion\";\r\n    AADServerParamKeys[\"CLIENT_ASSERTION_TYPE\"] = \"client_assertion_type\";\r\n})(AADServerParamKeys || (AADServerParamKeys = {}));\r\n/**\r\n * IdToken claim string constants\r\n */\r\nvar IdTokenClaimName;\r\n(function (IdTokenClaimName) {\r\n    IdTokenClaimName[\"ISSUER\"] = \"iss\";\r\n    IdTokenClaimName[\"OBJID\"] = \"oid\";\r\n    IdTokenClaimName[\"SUBJECT\"] = \"sub\";\r\n    IdTokenClaimName[\"TENANTID\"] = \"tid\";\r\n    IdTokenClaimName[\"VERSION\"] = \"ver\";\r\n    IdTokenClaimName[\"PREF_USERNAME\"] = \"preferred_username\";\r\n    IdTokenClaimName[\"NAME\"] = \"name\";\r\n    IdTokenClaimName[\"NONCE\"] = \"nonce\";\r\n    IdTokenClaimName[\"EXPIRATION\"] = \"exp\";\r\n    IdTokenClaimName[\"HOME_OBJID\"] = \"home_oid\";\r\n    IdTokenClaimName[\"SESSIONID\"] = \"sid\";\r\n    IdTokenClaimName[\"CLOUD_INSTANCE_HOSTNAME\"] = \"cloud_instance_host_name\";\r\n})(IdTokenClaimName || (IdTokenClaimName = {}));\r\n/**\r\n * we considered making this \"enum\" in the request instead of string, however it looks like the allowed list of\r\n * prompt values kept changing over past couple of years. There are some undocumented prompt values for some\r\n * internal partners too, hence the choice of generic \"string\" type instead of the \"enum\"\r\n */\r\nvar PromptValue = {\r\n    LOGIN: \"login\",\r\n    SELECT_ACCOUNT: \"select_account\",\r\n    CONSENT: \"consent\",\r\n    NONE: \"none\",\r\n};\r\n/**\r\n * SSO Types - generated to populate hints\r\n */\r\nvar SSOTypes;\r\n(function (SSOTypes) {\r\n    SSOTypes[\"ACCOUNT\"] = \"account\";\r\n    SSOTypes[\"SID\"] = \"sid\";\r\n    SSOTypes[\"LOGIN_HINT\"] = \"login_hint\";\r\n    SSOTypes[\"ID_TOKEN\"] = \"id_token\";\r\n    SSOTypes[\"DOMAIN_HINT\"] = \"domain_hint\";\r\n    SSOTypes[\"ORGANIZATIONS\"] = \"organizations\";\r\n    SSOTypes[\"CONSUMERS\"] = \"consumers\";\r\n    SSOTypes[\"ACCOUNT_ID\"] = \"accountIdentifier\";\r\n    SSOTypes[\"HOMEACCOUNT_ID\"] = \"homeAccountIdentifier\";\r\n})(SSOTypes || (SSOTypes = {}));\r\n/**\r\n * Disallowed extra query parameters.\r\n */\r\nvar BlacklistedEQParams = [\r\n    SSOTypes.SID,\r\n    SSOTypes.LOGIN_HINT\r\n];\r\n/**\r\n * allowed values for codeVerifier\r\n */\r\nvar CodeChallengeMethodValues = {\r\n    PLAIN: \"plain\",\r\n    S256: \"S256\"\r\n};\r\n/**\r\n * allowed values for response_mode\r\n */\r\nvar ResponseMode;\r\n(function (ResponseMode) {\r\n    ResponseMode[\"QUERY\"] = \"query\";\r\n    ResponseMode[\"FRAGMENT\"] = \"fragment\";\r\n    ResponseMode[\"FORM_POST\"] = \"form_post\";\r\n})(ResponseMode || (ResponseMode = {}));\r\n/**\r\n * allowed grant_type\r\n */\r\nvar GrantType;\r\n(function (GrantType) {\r\n    GrantType[\"IMPLICIT_GRANT\"] = \"implicit\";\r\n    GrantType[\"AUTHORIZATION_CODE_GRANT\"] = \"authorization_code\";\r\n    GrantType[\"CLIENT_CREDENTIALS_GRANT\"] = \"client_credentials\";\r\n    GrantType[\"RESOURCE_OWNER_PASSWORD_GRANT\"] = \"password\";\r\n    GrantType[\"REFRESH_TOKEN_GRANT\"] = \"refresh_token\";\r\n    GrantType[\"DEVICE_CODE_GRANT\"] = \"device_code\";\r\n})(GrantType || (GrantType = {}));\r\n/**\r\n * Account types in Cache\r\n */\r\nvar CacheAccountType;\r\n(function (CacheAccountType) {\r\n    CacheAccountType[\"MSSTS_ACCOUNT_TYPE\"] = \"MSSTS\";\r\n    CacheAccountType[\"ADFS_ACCOUNT_TYPE\"] = \"ADFS\";\r\n    CacheAccountType[\"MSAV1_ACCOUNT_TYPE\"] = \"MSA\";\r\n    CacheAccountType[\"GENERIC_ACCOUNT_TYPE\"] = \"Generic\"; // NTLM, Kerberos, FBA, Basic etc\r\n})(CacheAccountType || (CacheAccountType = {}));\r\n/**\r\n * Separators used in cache\r\n */\r\nvar Separators;\r\n(function (Separators) {\r\n    Separators[\"CACHE_KEY_SEPARATOR\"] = \"-\";\r\n    Separators[\"CLIENT_INFO_SEPARATOR\"] = \".\";\r\n})(Separators || (Separators = {}));\r\n/**\r\n * Credentail Type stored in the cache\r\n */\r\nvar CredentialType;\r\n(function (CredentialType) {\r\n    CredentialType[\"ID_TOKEN\"] = \"IdToken\";\r\n    CredentialType[\"ACCESS_TOKEN\"] = \"AccessToken\";\r\n    CredentialType[\"REFRESH_TOKEN\"] = \"RefreshToken\";\r\n})(CredentialType || (CredentialType = {}));\r\n/**\r\n * Credentail Type stored in the cache\r\n */\r\nvar CacheSchemaType;\r\n(function (CacheSchemaType) {\r\n    CacheSchemaType[\"ACCOUNT\"] = \"Account\";\r\n    CacheSchemaType[\"CREDENTIAL\"] = \"Credential\";\r\n    CacheSchemaType[\"APP_META_DATA\"] = \"AppMetadata\";\r\n    CacheSchemaType[\"TEMPORARY\"] = \"TempCache\";\r\n    CacheSchemaType[\"TELEMETRY\"] = \"Telemetry\";\r\n})(CacheSchemaType || (CacheSchemaType = {}));\r\n/**\r\n * Combine all cache types\r\n */\r\nvar CacheType;\r\n(function (CacheType) {\r\n    CacheType[CacheType[\"ADFS\"] = 1001] = \"ADFS\";\r\n    CacheType[CacheType[\"MSA\"] = 1002] = \"MSA\";\r\n    CacheType[CacheType[\"MSSTS\"] = 1003] = \"MSSTS\";\r\n    CacheType[CacheType[\"GENERIC\"] = 1004] = \"GENERIC\";\r\n    CacheType[CacheType[\"ACCESS_TOKEN\"] = 2001] = \"ACCESS_TOKEN\";\r\n    CacheType[CacheType[\"REFRESH_TOKEN\"] = 2002] = \"REFRESH_TOKEN\";\r\n    CacheType[CacheType[\"ID_TOKEN\"] = 2003] = \"ID_TOKEN\";\r\n    CacheType[CacheType[\"APP_META_DATA\"] = 3001] = \"APP_META_DATA\";\r\n})(CacheType || (CacheType = {}));\r\n/**\r\n * More Cache related constants\r\n */\r\nvar APP_META_DATA = \"appmetadata\";\r\nvar ClientInfo = \"client_info\";\r\nvar SERVER_TELEM_CONSTANTS = {\r\n    SCHEMA_VERSION: 2,\r\n    FAILURE_LIMIT: 3,\r\n    CACHE_KEY: \"server-telemetry\",\r\n    CATEGORY_SEPARATOR: \"|\",\r\n    VALUE_SEPARATOR: \",\"\r\n};\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Base type for credentials to be stored in the cache: eg: ACCESS_TOKEN, ID_TOKEN etc\r\n *\r\n * Key:Value Schema:\r\n *\r\n * Key: <home_account_id*>-<environment>-<credential_type>-<client_id>-<realm*>-<target*>\r\n *\r\n * Value Schema:\r\n * {\r\n *      homeAccountId: home account identifier for the auth scheme,\r\n *      environment: entity that issued the token, represented as a full host\r\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\r\n *      clientId: client ID of the application\r\n *      secret: Actual credential as a string\r\n *      familyId: Family ID identifier, usually only used for refresh tokens\r\n *      realm: Full tenant or organizational identifier that the account belongs to\r\n *      target: Permissions that are included in the token, or for refresh tokens, the resource identifier.\r\n * }\r\n */\r\nvar CredentialEntity = /** @class */ (function () {\r\n    function CredentialEntity() {\r\n    }\r\n    /**\r\n     * Generate Account Id key component as per the schema: <home_account_id>-<environment>\r\n     */\r\n    CredentialEntity.prototype.generateAccountId = function () {\r\n        return CredentialEntity.generateAccountIdForCacheKey(this.homeAccountId, this.environment);\r\n    };\r\n    /**\r\n     * Generate Credential Id key component as per the schema: <credential_type>-<client_id>-<realm>\r\n     */\r\n    CredentialEntity.prototype.generateCredentialId = function () {\r\n        return CredentialEntity.generateCredentialIdForCacheKey(this.credentialType, this.clientId, this.realm, this.familyId);\r\n    };\r\n    /**\r\n     * Generate target key component as per schema: <target>\r\n     */\r\n    CredentialEntity.prototype.generateTarget = function () {\r\n        return CredentialEntity.generateTargetForCacheKey(this.target);\r\n    };\r\n    /**\r\n     * generates credential key\r\n     */\r\n    CredentialEntity.prototype.generateCredentialKey = function () {\r\n        return CredentialEntity.generateCredentialCacheKey(this.homeAccountId, this.environment, this.credentialType, this.clientId, this.realm, this.target, this.familyId);\r\n    };\r\n    /**\r\n     * returns the type of the cache (in this case credential)\r\n     */\r\n    CredentialEntity.prototype.generateType = function () {\r\n        switch (this.credentialType) {\r\n            case CredentialType.ID_TOKEN:\r\n                return CacheType.ID_TOKEN;\r\n            case CredentialType.ACCESS_TOKEN:\r\n                return CacheType.ACCESS_TOKEN;\r\n            case CredentialType.REFRESH_TOKEN:\r\n                return CacheType.REFRESH_TOKEN;\r\n            default: {\r\n                throw ClientAuthError.createUnexpectedCredentialTypeError();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * helper function to return `CredentialType`\r\n     * @param key\r\n     */\r\n    CredentialEntity.getCredentialType = function (key) {\r\n        if (key.indexOf(CredentialType.ACCESS_TOKEN.toLowerCase()) !== -1) {\r\n            return CredentialType.ACCESS_TOKEN;\r\n        }\r\n        else if (key.indexOf(CredentialType.ID_TOKEN.toLowerCase()) !== -1) {\r\n            return CredentialType.ID_TOKEN;\r\n        }\r\n        else if (key.indexOf(CredentialType.REFRESH_TOKEN.toLowerCase()) !== -1) {\r\n            return CredentialType.REFRESH_TOKEN;\r\n        }\r\n        return Constants.NOT_DEFINED;\r\n    };\r\n    /**\r\n     * generates credential key\r\n     */\r\n    CredentialEntity.generateCredentialCacheKey = function (homeAccountId, environment, credentialType, clientId, realm, target, familyId) {\r\n        var credentialKey = [\r\n            this.generateAccountIdForCacheKey(homeAccountId, environment),\r\n            this.generateCredentialIdForCacheKey(credentialType, clientId, realm, familyId),\r\n            this.generateTargetForCacheKey(target),\r\n        ];\r\n        return credentialKey.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n    };\r\n    /**\r\n     * generates Account Id for keys\r\n     * @param homeAccountId\r\n     * @param environment\r\n     */\r\n    CredentialEntity.generateAccountIdForCacheKey = function (homeAccountId, environment) {\r\n        var accountId = [homeAccountId, environment];\r\n        return accountId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n    };\r\n    /**\r\n     * Generates Credential Id for keys\r\n     * @param credentialType\r\n     * @param realm\r\n     * @param clientId\r\n     * @param familyId\r\n     */\r\n    CredentialEntity.generateCredentialIdForCacheKey = function (credentialType, clientId, realm, familyId) {\r\n        var clientOrFamilyId = credentialType === CredentialType.REFRESH_TOKEN\r\n            ? familyId || clientId\r\n            : clientId;\r\n        var credentialId = [\r\n            credentialType,\r\n            clientOrFamilyId,\r\n            realm || \"\",\r\n        ];\r\n        return credentialId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n    };\r\n    /**\r\n     * Generate target key component as per schema: <target>\r\n     */\r\n    CredentialEntity.generateTargetForCacheKey = function (scopes) {\r\n        return (scopes || \"\").toLowerCase();\r\n    };\r\n    return CredentialEntity;\r\n}());\n\n/**\r\n * ClientConfigurationErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nvar ClientConfigurationErrorMessage = {\r\n    redirectUriNotSet: {\r\n        code: \"redirect_uri_empty\",\r\n        desc: \"A redirect URI is required for all calls, and none has been set.\"\r\n    },\r\n    postLogoutUriNotSet: {\r\n        code: \"post_logout_uri_empty\",\r\n        desc: \"A post logout redirect has not been set.\"\r\n    },\r\n    claimsRequestParsingError: {\r\n        code: \"claims_request_parsing_error\",\r\n        desc: \"Could not parse the given claims request object.\"\r\n    },\r\n    authorityUriInsecure: {\r\n        code: \"authority_uri_insecure\",\r\n        desc: \"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options\"\r\n    },\r\n    urlParseError: {\r\n        code: \"url_parse_error\",\r\n        desc: \"URL could not be parsed into appropriate segments.\"\r\n    },\r\n    urlEmptyError: {\r\n        code: \"empty_url_error\",\r\n        desc: \"URL was empty or null.\"\r\n    },\r\n    emptyScopesError: {\r\n        code: \"empty_input_scopes_error\",\r\n        desc: \"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.\"\r\n    },\r\n    nonArrayScopesError: {\r\n        code: \"nonarray_input_scopes_error\",\r\n        desc: \"Scopes cannot be passed as non-array.\"\r\n    },\r\n    clientIdSingleScopeError: {\r\n        code: \"clientid_input_scopes_error\",\r\n        desc: \"Client ID can only be provided as a single scope.\"\r\n    },\r\n    invalidPrompt: {\r\n        code: \"invalid_prompt_value\",\r\n        desc: \"Supported prompt values are 'login', 'select_account', 'consent' and 'none'.  Please see here for valid configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options\",\r\n    },\r\n    tokenRequestEmptyError: {\r\n        code: \"token_request_empty\",\r\n        desc: \"Token request was empty and not found in cache.\"\r\n    },\r\n    logoutRequestEmptyError: {\r\n        code: \"logout_request_empty\",\r\n        desc: \"The logout request was null or undefined.\"\r\n    },\r\n    invalidCodeChallengeMethod: {\r\n        code: \"invalid_code_challenge_method\",\r\n        desc: \"code_challenge_method passed is invalid. Valid values are \\\"plain\\\" and \\\"S256\\\".\"\r\n    },\r\n    invalidCodeChallengeParams: {\r\n        code: \"pkce_params_missing\",\r\n        desc: \"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request\"\r\n    },\r\n    knownAuthoritiesAndCloudDiscoveryMetadata: {\r\n        code: \"invalid_known_authorities\",\r\n        desc: \"knownAuthorities and cloudDiscoveryMetadata cannot both be provided. Please provide cloudDiscoveryMetadata object for AAD, knownAuthorities otherwise.\"\r\n    },\r\n    invalidCloudDiscoveryMetadata: {\r\n        code: \"invalid_cloud_discovery_metadata\",\r\n        desc: \"Invalid cloudDiscoveryMetadata provided. Must be a JSON object containing tenant_discovery_endpoint and metadata fields\"\r\n    },\r\n    untrustedAuthority: {\r\n        code: \"untrusted_authority\",\r\n        desc: \"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.\"\r\n    }\r\n};\r\n/**\r\n * Error thrown when there is an error in configuration of the MSAL.js library.\r\n */\r\nvar ClientConfigurationError = /** @class */ (function (_super) {\r\n    __extends$1(ClientConfigurationError, _super);\r\n    function ClientConfigurationError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"ClientConfigurationError\";\r\n        Object.setPrototypeOf(_this, ClientConfigurationError.prototype);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates an error thrown when the redirect uri is empty (not set by caller)\r\n     */\r\n    ClientConfigurationError.createRedirectUriEmptyError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.redirectUriNotSet.code, ClientConfigurationErrorMessage.redirectUriNotSet.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the post-logout redirect uri is empty (not set by caller)\r\n     */\r\n    ClientConfigurationError.createPostLogoutRedirectUriEmptyError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.postLogoutUriNotSet.code, ClientConfigurationErrorMessage.postLogoutUriNotSet.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the claims request could not be successfully parsed\r\n     */\r\n    ClientConfigurationError.createClaimsRequestParsingError = function (claimsRequestParseError) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.claimsRequestParsingError.code, ClientConfigurationErrorMessage.claimsRequestParsingError.desc + \" Given value: \" + claimsRequestParseError);\r\n    };\r\n    /**\r\n     * Creates an error thrown if authority uri is given an insecure protocol.\r\n     * @param urlString\r\n     */\r\n    ClientConfigurationError.createInsecureAuthorityUriError = function (urlString) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.authorityUriInsecure.code, ClientConfigurationErrorMessage.authorityUriInsecure.desc + \" Given URI: \" + urlString);\r\n    };\r\n    /**\r\n     * Creates an error thrown if URL string does not parse into separate segments.\r\n     * @param urlString\r\n     */\r\n    ClientConfigurationError.createUrlParseError = function (urlParseError) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.urlParseError.code, ClientConfigurationErrorMessage.urlParseError.desc + \" Given Error: \" + urlParseError);\r\n    };\r\n    /**\r\n     * Creates an error thrown if URL string is empty or null.\r\n     * @param urlString\r\n     */\r\n    ClientConfigurationError.createUrlEmptyError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.urlEmptyError.code, ClientConfigurationErrorMessage.urlEmptyError.desc);\r\n    };\r\n    /**\r\n     * Error thrown when scopes are not an array\r\n     * @param inputScopes\r\n     */\r\n    ClientConfigurationError.createScopesNonArrayError = function (inputScopes) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.nonArrayScopesError.code, ClientConfigurationErrorMessage.nonArrayScopesError.desc + \" Given Scopes: \" + inputScopes);\r\n    };\r\n    /**\r\n     * Error thrown when scopes are empty.\r\n     * @param scopesValue\r\n     */\r\n    ClientConfigurationError.createEmptyScopesArrayError = function (inputScopes) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.emptyScopesError.code, ClientConfigurationErrorMessage.emptyScopesError.desc + \" Given Scopes: \" + inputScopes);\r\n    };\r\n    /**\r\n     * Error thrown when client id scope is not provided as single scope.\r\n     * @param inputScopes\r\n     */\r\n    ClientConfigurationError.createClientIdSingleScopeError = function (inputScopes) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.clientIdSingleScopeError.code, ClientConfigurationErrorMessage.clientIdSingleScopeError.desc + \" Given Scopes: \" + inputScopes);\r\n    };\r\n    /**\r\n     * Error thrown when prompt is not an allowed type.\r\n     * @param promptValue\r\n     */\r\n    ClientConfigurationError.createInvalidPromptError = function (promptValue) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidPrompt.code, ClientConfigurationErrorMessage.invalidPrompt.desc + \" Given value: \" + promptValue);\r\n    };\r\n    /**\r\n     * Throws error when token request is empty and nothing cached in storage.\r\n     */\r\n    ClientConfigurationError.createEmptyLogoutRequestError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.logoutRequestEmptyError.code, ClientConfigurationErrorMessage.logoutRequestEmptyError.desc);\r\n    };\r\n    /**\r\n     * Throws error when token request is empty and nothing cached in storage.\r\n     */\r\n    ClientConfigurationError.createEmptyTokenRequestError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.tokenRequestEmptyError.code, ClientConfigurationErrorMessage.tokenRequestEmptyError.desc);\r\n    };\r\n    /**\r\n     * Throws error when an invalid code_challenge_method is passed by the user\r\n     */\r\n    ClientConfigurationError.createInvalidCodeChallengeMethodError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCodeChallengeMethod.code, ClientConfigurationErrorMessage.invalidCodeChallengeMethod.desc);\r\n    };\r\n    /**\r\n     * Throws error when both params: code_challenge and code_challenge_method are not passed together\r\n     */\r\n    ClientConfigurationError.createInvalidCodeChallengeParamsError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCodeChallengeParams.code, ClientConfigurationErrorMessage.invalidCodeChallengeParams.desc);\r\n    };\r\n    /**\r\n     * Throws an error when the user passes both knownAuthorities and cloudDiscoveryMetadata\r\n     */\r\n    ClientConfigurationError.createKnownAuthoritiesCloudDiscoveryMetadataError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.knownAuthoritiesAndCloudDiscoveryMetadata.code, ClientConfigurationErrorMessage.knownAuthoritiesAndCloudDiscoveryMetadata.desc);\r\n    };\r\n    /**\r\n     * Throws an error when the user passes invalid cloudDiscoveryMetadata\r\n     */\r\n    ClientConfigurationError.createInvalidCloudDiscoveryMetadataError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCloudDiscoveryMetadata.code, ClientConfigurationErrorMessage.invalidCloudDiscoveryMetadata.desc);\r\n    };\r\n    /**\r\n     * Throws error when provided authority is not a member of the trusted host list\r\n     */\r\n    ClientConfigurationError.createUntrustedAuthorityError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.untrustedAuthority.code, ClientConfigurationErrorMessage.untrustedAuthority.desc);\r\n    };\r\n    return ClientConfigurationError;\r\n}(ClientAuthError));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * The ScopeSet class creates a set of scopes. Scopes are case-insensitive, unique values, so the Set object in JS makes\r\n * the most sense to implement for this class. All scopes are trimmed and converted to lower case strings in intersection and union functions\r\n * to ensure uniqueness of strings.\r\n */\r\nvar ScopeSet = /** @class */ (function () {\r\n    function ScopeSet(inputScopes) {\r\n        var _this = this;\r\n        // Filter empty string and null/undefined array items\r\n        var scopeArr = inputScopes ? StringUtils.trimArrayEntries(__spreadArrays$1(inputScopes)) : [];\r\n        var filteredInput = scopeArr ? StringUtils.removeEmptyStringsFromArray(scopeArr) : [];\r\n        // Validate and filter scopes (validate function throws if validation fails)\r\n        this.validateInputScopes(filteredInput);\r\n        this.scopes = new Set(); // Iterator in constructor not supported by IE11\r\n        filteredInput.forEach(function (scope) { return _this.scopes.add(scope); });\r\n    }\r\n    /**\r\n     * Factory method to create ScopeSet from space-delimited string\r\n     * @param inputScopeString\r\n     * @param appClientId\r\n     * @param scopesRequired\r\n    */\r\n    ScopeSet.fromString = function (inputScopeString) {\r\n        inputScopeString = inputScopeString || \"\";\r\n        var inputScopes = inputScopeString.split(\" \");\r\n        return new ScopeSet(inputScopes);\r\n    };\r\n    /**\r\n     * Used to validate the scopes input parameter requested  by the developer.\r\n     * @param {Array<string>} inputScopes - Developer requested permissions. Not all scopes are guaranteed to be included in the access token returned.\r\n     * @param {boolean} scopesRequired - Boolean indicating whether the scopes array is required or not\r\n    */\r\n    ScopeSet.prototype.validateInputScopes = function (inputScopes) {\r\n        // Check if scopes are required but not given or is an empty array\r\n        if (!inputScopes || inputScopes.length < 1) {\r\n            throw ClientConfigurationError.createEmptyScopesArrayError(inputScopes);\r\n        }\r\n    };\r\n    /**\r\n     * Check if a given scope is present in this set of scopes.\r\n     * @param scope\r\n     */\r\n    ScopeSet.prototype.containsScope = function (scope) {\r\n        return !StringUtils.isEmpty(scope) ? this.scopes.has(scope) : false;\r\n    };\r\n    /**\r\n     * Check if a set of scopes is present in this set of scopes.\r\n     * @param scopeSet\r\n     */\r\n    ScopeSet.prototype.containsScopeSet = function (scopeSet) {\r\n        var _this = this;\r\n        if (!scopeSet) {\r\n            return false;\r\n        }\r\n        return (this.scopes.size >= scopeSet.scopes.size && scopeSet.asArray().every(function (scope) { return _this.containsScope(scope); }));\r\n    };\r\n    /**\r\n     * Appends single scope if passed\r\n     * @param newScope\r\n     */\r\n    ScopeSet.prototype.appendScope = function (newScope) {\r\n        if (!StringUtils.isEmpty(newScope)) {\r\n            this.scopes.add(newScope.trim());\r\n        }\r\n    };\r\n    /**\r\n     * Appends multiple scopes if passed\r\n     * @param newScopes\r\n     */\r\n    ScopeSet.prototype.appendScopes = function (newScopes) {\r\n        var _this = this;\r\n        try {\r\n            newScopes.forEach(function (newScope) { return _this.appendScope(newScope); });\r\n        }\r\n        catch (e) {\r\n            throw ClientAuthError.createAppendScopeSetError(e);\r\n        }\r\n    };\r\n    /**\r\n     * Removes element from set of scopes.\r\n     * @param scope\r\n     */\r\n    ScopeSet.prototype.removeScope = function (scope) {\r\n        if (StringUtils.isEmpty(scope)) {\r\n            throw ClientAuthError.createRemoveEmptyScopeFromSetError(scope);\r\n        }\r\n        this.scopes.delete(scope.trim());\r\n    };\r\n    /**\r\n     * Combines an array of scopes with the current set of scopes.\r\n     * @param otherScopes\r\n     */\r\n    ScopeSet.prototype.unionScopeSets = function (otherScopes) {\r\n        if (!otherScopes) {\r\n            throw ClientAuthError.createEmptyInputScopeSetError(otherScopes);\r\n        }\r\n        var unionScopes = new Set(); // Iterator in constructor not supported in IE11\r\n        otherScopes.scopes.forEach(function (scope) { return unionScopes.add(scope); });\r\n        this.scopes.forEach(function (scope) { return unionScopes.add(scope); });\r\n        return unionScopes;\r\n    };\r\n    /**\r\n     * Check if scopes intersect between this set and another.\r\n     * @param otherScopes\r\n     */\r\n    ScopeSet.prototype.intersectingScopeSets = function (otherScopes) {\r\n        if (!otherScopes) {\r\n            throw ClientAuthError.createEmptyInputScopeSetError(otherScopes);\r\n        }\r\n        var unionScopes = this.unionScopeSets(otherScopes);\r\n        // Do not allow offline_access to be the only intersecting scope\r\n        var sizeOtherScopes = otherScopes.getScopeCount();\r\n        var sizeThisScopes = this.getScopeCount();\r\n        var sizeUnionScopes = unionScopes.size;\r\n        return sizeUnionScopes < (sizeThisScopes + sizeOtherScopes);\r\n    };\r\n    /**\r\n     * Returns size of set of scopes.\r\n     */\r\n    ScopeSet.prototype.getScopeCount = function () {\r\n        return this.scopes.size;\r\n    };\r\n    /**\r\n     * Returns the scopes as an array of string values\r\n     */\r\n    ScopeSet.prototype.asArray = function () {\r\n        var array = [];\r\n        this.scopes.forEach(function (val) { return array.push(val); });\r\n        return array;\r\n    };\r\n    /**\r\n     * Prints scopes into a space-delimited string\r\n     */\r\n    ScopeSet.prototype.printScopes = function () {\r\n        if (this.scopes) {\r\n            var scopeArr = this.asArray();\r\n            return scopeArr.join(\" \");\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Prints scopes into a space-delimited lower-case string (used for caching)\r\n     */\r\n    ScopeSet.prototype.printScopesLowerCase = function () {\r\n        return this.printScopes().toLowerCase();\r\n    };\r\n    return ScopeSet;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Function to build a client info object\r\n * @param rawClientInfo\r\n * @param crypto\r\n */\r\nfunction buildClientInfo(rawClientInfo, crypto) {\r\n    if (StringUtils.isEmpty(rawClientInfo)) {\r\n        throw ClientAuthError.createClientInfoEmptyError(rawClientInfo);\r\n    }\r\n    try {\r\n        var decodedClientInfo = crypto.base64Decode(rawClientInfo);\r\n        return JSON.parse(decodedClientInfo);\r\n    }\r\n    catch (e) {\r\n        throw ClientAuthError.createClientInfoDecodingError(e);\r\n    }\r\n}\n\nvar TrustedAuthority = /** @class */ (function () {\r\n    function TrustedAuthority() {\r\n    }\r\n    /**\r\n     * Set the CloudDiscoveryMetadata object from knownAuthorities or cloudDiscoveryMetadata passed into the app config\r\n     * @param knownAuthorities\r\n     * @param cloudDiscoveryMetadata\r\n     */\r\n    TrustedAuthority.setTrustedAuthoritiesFromConfig = function (knownAuthorities, cloudDiscoveryMetadata) {\r\n        if (!this.getTrustedHostList().length) {\r\n            if (knownAuthorities.length > 0 && !StringUtils.isEmpty(cloudDiscoveryMetadata)) {\r\n                throw ClientConfigurationError.createKnownAuthoritiesCloudDiscoveryMetadataError();\r\n            }\r\n            this.createCloudDiscoveryMetadataFromKnownAuthorities(knownAuthorities);\r\n            try {\r\n                if (cloudDiscoveryMetadata) {\r\n                    var parsedMetadata = JSON.parse(cloudDiscoveryMetadata);\r\n                    this.saveCloudDiscoveryMetadata(parsedMetadata.metadata);\r\n                }\r\n            }\r\n            catch (e) {\r\n                throw ClientConfigurationError.createInvalidCloudDiscoveryMetadataError();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Called to get metadata from network if CloudDiscoveryMetadata was not populated by config\r\n     * @param networkInterface\r\n     */\r\n    TrustedAuthority.setTrustedAuthoritiesFromNetwork = function (authorityToVerify, networkInterface) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var instanceDiscoveryEndpoint, response, metadata, e_1, host;\r\n            return __generator$1(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        instanceDiscoveryEndpoint = \"\" + Constants.AAD_INSTANCE_DISCOVERY_ENDPT + authorityToVerify.urlString + \"oauth2/v2.0/authorize\";\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, networkInterface.sendGetRequestAsync(instanceDiscoveryEndpoint)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        metadata = response.body.metadata;\r\n                        this.saveCloudDiscoveryMetadata(metadata);\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        return [2 /*return*/];\r\n                    case 4:\r\n                        host = authorityToVerify.getUrlComponents().HostNameAndPort;\r\n                        if (this.getTrustedHostList().length > 0 && !this.IsInTrustedHostList(host)) {\r\n                            // Custom Domain scenario, host is trusted because Instance Discovery call succeeded \r\n                            this.createCloudDiscoveryMetadataFromKnownAuthorities([host]);\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     *\r\n     * @param metadata\r\n     */\r\n    TrustedAuthority.saveCloudDiscoveryMetadata = function (metadata) {\r\n        metadata.forEach(function (entry) {\r\n            var authorities = entry.aliases;\r\n            authorities.forEach(function (authority) {\r\n                TrustedAuthority.TrustedHostList[authority.toLowerCase()] = entry;\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Create a generic metadata object for each host passed to knownAuthorities.\r\n     * This is mostly useful for B2C or ADFS scenarios\r\n     * @param knownAuthorities\r\n     */\r\n    TrustedAuthority.createCloudDiscoveryMetadataFromKnownAuthorities = function (knownAuthorities) {\r\n        var _this = this;\r\n        knownAuthorities.forEach(function (authority) {\r\n            _this.TrustedHostList[authority.toLowerCase()] = {\r\n                preferred_cache: authority.toLowerCase(),\r\n                preferred_network: authority.toLowerCase(),\r\n                aliases: [authority.toLowerCase()]\r\n            };\r\n        });\r\n    };\r\n    TrustedAuthority.getTrustedHostList = function () {\r\n        return Object.keys(this.TrustedHostList);\r\n    };\r\n    /**\r\n     * Get metadata for the provided host\r\n     * @param host\r\n     */\r\n    TrustedAuthority.getCloudDiscoveryMetadata = function (host) {\r\n        return this.TrustedHostList[host.toLowerCase()] || null;\r\n    };\r\n    /**\r\n     * Checks to see if the host is in a list of trusted hosts\r\n     * @param host\r\n     */\r\n    TrustedAuthority.IsInTrustedHostList = function (host) {\r\n        return Object.keys(this.TrustedHostList).indexOf(host.toLowerCase()) > -1;\r\n    };\r\n    TrustedAuthority.TrustedHostList = {};\r\n    return TrustedAuthority;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Type that defines required and optional parameters for an Account field (based on universal cache schema implemented by all MSALs).\r\n *\r\n * Key : Value Schema\r\n *\r\n * Key: <home_account_id>-<environment>-<realm*>\r\n *\r\n * Value Schema:\r\n * {\r\n *      homeAccountId: home account identifier for the auth scheme,\r\n *      environment: entity that issued the token, represented as a full host\r\n *      realm: Full tenant or organizational identifier that the account belongs to\r\n *      localAccountId: Original tenant-specific accountID, usually used for legacy cases\r\n *      username: primary username that represents the user, usually corresponds to preferred_username in the v2 endpt\r\n *      authorityType: Accounts authority type as a string\r\n *      name: Full name for the account, including given name and family name,\r\n *      clientInfo: Full base64 encoded client info received from ESTS\r\n *      lastModificationTime: last time this entity was modified in the cache\r\n *      lastModificationApp:\r\n * }\r\n */\r\nvar AccountEntity = /** @class */ (function () {\r\n    function AccountEntity() {\r\n    }\r\n    /**\r\n     * Generate Account Id key component as per the schema: <home_account_id>-<environment>\r\n     */\r\n    AccountEntity.prototype.generateAccountId = function () {\r\n        var accountId = [this.homeAccountId, this.environment];\r\n        return accountId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n    };\r\n    /**\r\n     * Generate Account Cache Key as per the schema: <home_account_id>-<environment>-<realm*>\r\n     */\r\n    AccountEntity.prototype.generateAccountKey = function () {\r\n        return AccountEntity.generateAccountCacheKey({\r\n            homeAccountId: this.homeAccountId,\r\n            environment: this.environment,\r\n            tenantId: this.realm,\r\n            username: this.username\r\n        });\r\n    };\r\n    /**\r\n     * returns the type of the cache (in this case account)\r\n     */\r\n    AccountEntity.prototype.generateType = function () {\r\n        switch (this.authorityType) {\r\n            case CacheAccountType.ADFS_ACCOUNT_TYPE:\r\n                return CacheType.ADFS;\r\n            case CacheAccountType.MSAV1_ACCOUNT_TYPE:\r\n                return CacheType.MSA;\r\n            case CacheAccountType.MSSTS_ACCOUNT_TYPE:\r\n                return CacheType.MSSTS;\r\n            case CacheAccountType.GENERIC_ACCOUNT_TYPE:\r\n                return CacheType.GENERIC;\r\n            default: {\r\n                throw ClientAuthError.createUnexpectedAccountTypeError();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the AccountInfo interface for this account.\r\n     */\r\n    AccountEntity.prototype.getAccountInfo = function () {\r\n        return {\r\n            homeAccountId: this.homeAccountId,\r\n            environment: this.environment,\r\n            tenantId: this.realm,\r\n            username: this.username\r\n        };\r\n    };\r\n    /**\r\n     * Generates account key from interface\r\n     * @param accountInterface\r\n     */\r\n    AccountEntity.generateAccountCacheKey = function (accountInterface) {\r\n        var accountKey = [\r\n            accountInterface.homeAccountId,\r\n            accountInterface.environment || \"\",\r\n            accountInterface.tenantId || \"\",\r\n        ];\r\n        return accountKey.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n    };\r\n    /**\r\n     * Build Account cache from IdToken, clientInfo and authority/policy\r\n     * @param clientInfo\r\n     * @param authority\r\n     * @param idToken\r\n     * @param policy\r\n     */\r\n    AccountEntity.createAccount = function (clientInfo, authority, idToken, crypto) {\r\n        var account = new AccountEntity();\r\n        account.authorityType = CacheAccountType.MSSTS_ACCOUNT_TYPE;\r\n        account.clientInfo = clientInfo;\r\n        var clientInfoObj = buildClientInfo(clientInfo, crypto);\r\n        account.homeAccountId = \"\" + clientInfoObj.uid + Separators.CLIENT_INFO_SEPARATOR + clientInfoObj.utid;\r\n        var reqEnvironment = authority.canonicalAuthorityUrlComponents.HostNameAndPort;\r\n        var env = TrustedAuthority.getCloudDiscoveryMetadata(reqEnvironment) ? TrustedAuthority.getCloudDiscoveryMetadata(reqEnvironment).preferred_cache : \"\";\r\n        if (StringUtils.isEmpty(env)) {\r\n            throw ClientAuthError.createInvalidCacheEnvironmentError();\r\n        }\r\n        account.environment = env;\r\n        account.realm = idToken.claims.tid;\r\n        if (idToken) {\r\n            // How do you account for MSA CID here?\r\n            var localAccountId = !StringUtils.isEmpty(idToken.claims.oid)\r\n                ? idToken.claims.oid\r\n                : idToken.claims.sid;\r\n            account.localAccountId = localAccountId;\r\n            account.username = idToken.claims.preferred_username;\r\n            account.name = idToken.claims.name;\r\n        }\r\n        return account;\r\n    };\r\n    /**\r\n     * Build ADFS account type\r\n     * @param authority\r\n     * @param idToken\r\n     */\r\n    AccountEntity.createADFSAccount = function (authority, idToken) {\r\n        var account = new AccountEntity();\r\n        account.authorityType = CacheAccountType.ADFS_ACCOUNT_TYPE;\r\n        account.homeAccountId = idToken.claims.sub;\r\n        var reqEnvironment = authority.canonicalAuthorityUrlComponents.HostNameAndPort;\r\n        var env = TrustedAuthority.getCloudDiscoveryMetadata(reqEnvironment) ? TrustedAuthority.getCloudDiscoveryMetadata(reqEnvironment).preferred_cache : \"\";\r\n        if (StringUtils.isEmpty(env)) {\r\n            throw ClientAuthError.createInvalidCacheEnvironmentError();\r\n        }\r\n        account.environment = env;\r\n        account.username = idToken.claims.upn;\r\n        // add uniqueName to claims\r\n        // account.name = idToken.claims.uniqueName;\r\n        return account;\r\n    };\r\n    return AccountEntity;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Interface class which implement cache storage functions used by MSAL to perform validity checks, and store tokens.\r\n */\r\nvar CacheManager = /** @class */ (function () {\r\n    function CacheManager() {\r\n    }\r\n    /**\r\n     * Returns all accounts in cache\r\n     */\r\n    CacheManager.prototype.getAllAccounts = function () {\r\n        var currentAccounts = this.getAccountsFilteredBy();\r\n        var accountValues = Object.keys(currentAccounts).map(function (accountKey) { return currentAccounts[accountKey]; });\r\n        var numAccounts = accountValues.length;\r\n        if (numAccounts < 1) {\r\n            return [];\r\n        }\r\n        else {\r\n            var allAccounts = accountValues.map(function (value) {\r\n                var accountObj = new AccountEntity();\r\n                accountObj = CacheManager.toObject(accountObj, value);\r\n                return accountObj.getAccountInfo();\r\n            });\r\n            return allAccounts;\r\n        }\r\n    };\r\n    /**\r\n     * saves a cache record\r\n     * @param cacheRecord\r\n     */\r\n    CacheManager.prototype.saveCacheRecord = function (cacheRecord) {\r\n        if (!cacheRecord) {\r\n            throw ClientAuthError.createNullOrUndefinedCacheRecord();\r\n        }\r\n        if (!!cacheRecord.account) {\r\n            this.saveAccount(cacheRecord.account);\r\n        }\r\n        if (!!cacheRecord.idToken) {\r\n            this.saveCredential(cacheRecord.idToken);\r\n        }\r\n        if (!!cacheRecord.accessToken) {\r\n            this.saveAccessToken(cacheRecord.accessToken);\r\n        }\r\n        if (!!cacheRecord.refreshToken) {\r\n            this.saveCredential(cacheRecord.refreshToken);\r\n        }\r\n    };\r\n    /**\r\n     * saves account into cache\r\n     * @param account\r\n     */\r\n    CacheManager.prototype.saveAccount = function (account) {\r\n        var key = account.generateAccountKey();\r\n        this.setItem(key, account, CacheSchemaType.ACCOUNT);\r\n    };\r\n    /**\r\n     * saves credential - accessToken, idToken or refreshToken into cache\r\n     * @param credential\r\n     */\r\n    CacheManager.prototype.saveCredential = function (credential) {\r\n        var key = credential.generateCredentialKey();\r\n        this.setItem(key, credential, CacheSchemaType.CREDENTIAL);\r\n    };\r\n    /**\r\n     * saves access token credential\r\n     * @param credential\r\n     */\r\n    CacheManager.prototype.saveAccessToken = function (credential) {\r\n        var _this = this;\r\n        var currentTokenCache = this.getCredentialsFilteredBy({\r\n            clientId: credential.clientId,\r\n            credentialType: CredentialType.ACCESS_TOKEN,\r\n            environment: credential.environment,\r\n            homeAccountId: credential.homeAccountId,\r\n            realm: credential.realm\r\n        });\r\n        var currentScopes = ScopeSet.fromString(credential.target);\r\n        var currentAccessTokens = Object.keys(currentTokenCache.accessTokens).map(function (key) { return currentTokenCache.accessTokens[key]; });\r\n        if (currentAccessTokens) {\r\n            currentAccessTokens.forEach(function (tokenEntity) {\r\n                var tokenScopeSet = ScopeSet.fromString(tokenEntity.target);\r\n                if (tokenScopeSet.intersectingScopeSets(currentScopes)) {\r\n                    _this.removeCredential(tokenEntity);\r\n                }\r\n            });\r\n        }\r\n        this.saveCredential(credential);\r\n    };\r\n    /**\r\n     * Given account key retrieve an account\r\n     * @param key\r\n     */\r\n    CacheManager.prototype.getAccount = function (key) {\r\n        var account = this.getItem(key, CacheSchemaType.ACCOUNT);\r\n        return account;\r\n    };\r\n    /**\r\n     * retrieve a credential - accessToken, idToken or refreshToken; given the cache key\r\n     * @param key\r\n     */\r\n    CacheManager.prototype.getCredential = function (key) {\r\n        return this.getItem(key, CacheSchemaType.CREDENTIAL);\r\n    };\r\n    /**\r\n     * retrieve accounts matching all provided filters; if no filter is set, get all accounts\r\n     * not checking for casing as keys are all generated in lower case, remember to convert to lower case if object properties are compared\r\n     * @param homeAccountId\r\n     * @param environment\r\n     * @param realm\r\n     */\r\n    CacheManager.prototype.getAccountsFilteredBy = function (accountFilter) {\r\n        return this.getAccountsFilteredByInternal(accountFilter ? accountFilter.homeAccountId : \"\", accountFilter ? accountFilter.environment : \"\", accountFilter ? accountFilter.realm : \"\");\r\n    };\r\n    /**\r\n     * retrieve accounts matching all provided filters; if no filter is set, get all accounts\r\n     * not checking for casing as keys are all generated in lower case, remember to convert to lower case if object properties are compared\r\n     * @param homeAccountId\r\n     * @param environment\r\n     * @param realm\r\n     */\r\n    CacheManager.prototype.getAccountsFilteredByInternal = function (homeAccountId, environment, realm) {\r\n        var _this = this;\r\n        var allCacheKeys = this.getKeys();\r\n        var matchingAccounts = {};\r\n        allCacheKeys.forEach(function (cacheKey) {\r\n            var entity = _this.getAccountEntity(cacheKey);\r\n            if (!entity) {\r\n                return null;\r\n            }\r\n            if (!StringUtils.isEmpty(homeAccountId) && !_this.matchHomeAccountId(entity, homeAccountId)) {\r\n                return;\r\n            }\r\n            if (!StringUtils.isEmpty(environment) && !_this.matchEnvironment(entity, environment)) {\r\n                return;\r\n            }\r\n            if (!StringUtils.isEmpty(realm) && !_this.matchRealm(entity, realm)) {\r\n                return;\r\n            }\r\n            matchingAccounts[cacheKey] = entity;\r\n        });\r\n        return matchingAccounts;\r\n    };\r\n    /**\r\n     * retrieve credentails matching all provided filters; if no filter is set, get all credentials\r\n     * @param homeAccountId\r\n     * @param environment\r\n     * @param credentialType\r\n     * @param clientId\r\n     * @param realm\r\n     * @param target\r\n     */\r\n    CacheManager.prototype.getCredentialsFilteredBy = function (filter) {\r\n        return this.getCredentialsFilteredByInternal(filter.homeAccountId, filter.environment, filter.credentialType, filter.clientId, filter.realm, filter.target);\r\n    };\r\n    /**\r\n     * Support function to help match credentials\r\n     * @param homeAccountId\r\n     * @param environment\r\n     * @param credentialType\r\n     * @param clientId\r\n     * @param realm\r\n     * @param target\r\n     */\r\n    CacheManager.prototype.getCredentialsFilteredByInternal = function (homeAccountId, environment, credentialType, clientId, realm, target) {\r\n        var _this = this;\r\n        var allCacheKeys = this.getKeys();\r\n        var matchingCredentials = {\r\n            idTokens: {},\r\n            accessTokens: {},\r\n            refreshTokens: {}\r\n        };\r\n        allCacheKeys.forEach(function (cacheKey) {\r\n            var entity;\r\n            // don't parse any non-credential type cache entities\r\n            var credType = CredentialEntity.getCredentialType(cacheKey);\r\n            if (credType === Constants.NOT_DEFINED) {\r\n                return;\r\n            }\r\n            // Attempt retrieval\r\n            try {\r\n                entity = _this.getItem(cacheKey, CacheSchemaType.CREDENTIAL);\r\n            }\r\n            catch (e) {\r\n                return;\r\n            }\r\n            if (!StringUtils.isEmpty(homeAccountId) && !_this.matchHomeAccountId(entity, homeAccountId)) {\r\n                return;\r\n            }\r\n            if (!StringUtils.isEmpty(environment) && !_this.matchEnvironment(entity, environment)) {\r\n                return;\r\n            }\r\n            if (!StringUtils.isEmpty(realm) && !_this.matchRealm(entity, realm)) {\r\n                return;\r\n            }\r\n            if (!StringUtils.isEmpty(credentialType) && !_this.matchCredentialType(entity, credentialType)) {\r\n                return;\r\n            }\r\n            if (!StringUtils.isEmpty(clientId) && !_this.matchClientId(entity, clientId)) {\r\n                return;\r\n            }\r\n            // idTokens do not have \"target\", target specific refreshTokens do exist for some types of authentication\r\n            // TODO: Add case for target specific refresh tokens\r\n            if (!StringUtils.isEmpty(target) && !_this.matchTarget(entity, target)) {\r\n                return;\r\n            }\r\n            switch (credType) {\r\n                case CredentialType.ID_TOKEN:\r\n                    matchingCredentials.idTokens[cacheKey] = entity;\r\n                    break;\r\n                case CredentialType.ACCESS_TOKEN:\r\n                    matchingCredentials.accessTokens[cacheKey] = entity;\r\n                    break;\r\n                case CredentialType.REFRESH_TOKEN:\r\n                    matchingCredentials.refreshTokens[cacheKey] = entity;\r\n                    break;\r\n            }\r\n        });\r\n        return matchingCredentials;\r\n    };\r\n    /**\r\n     * Removes all app metadata objects from cache.\r\n     */\r\n    CacheManager.prototype.removeAppMetadata = function () {\r\n        var _this = this;\r\n        var allCacheKeys = this.getKeys();\r\n        allCacheKeys.forEach(function (cacheKey) {\r\n            if (_this.isAppMetadata(cacheKey)) {\r\n                _this.removeItem(cacheKey, CacheSchemaType.APP_META_DATA);\r\n            }\r\n        });\r\n        return true;\r\n    };\r\n    /**\r\n     * Removes all accounts and related tokens from cache.\r\n     */\r\n    CacheManager.prototype.removeAllAccounts = function () {\r\n        var _this = this;\r\n        var allCacheKeys = this.getKeys();\r\n        allCacheKeys.forEach(function (cacheKey) {\r\n            var entity = _this.getAccountEntity(cacheKey);\r\n            if (!entity) {\r\n                return;\r\n            }\r\n            _this.removeAccount(cacheKey);\r\n        });\r\n        return true;\r\n    };\r\n    /**\r\n     * returns a boolean if the given account is removed\r\n     * @param account\r\n     */\r\n    CacheManager.prototype.removeAccount = function (accountKey) {\r\n        var account = this.getAccount(accountKey);\r\n        if (!account) {\r\n            throw ClientAuthError.createNoAccountFoundError();\r\n        }\r\n        return (this.removeAccountContext(account) && this.removeItem(accountKey, CacheSchemaType.ACCOUNT));\r\n    };\r\n    /**\r\n     * returns a boolean if the given account is removed\r\n     * @param account\r\n     */\r\n    CacheManager.prototype.removeAccountContext = function (account) {\r\n        var _this = this;\r\n        var allCacheKeys = this.getKeys();\r\n        var accountId = account.generateAccountId();\r\n        allCacheKeys.forEach(function (cacheKey) {\r\n            // don't parse any non-credential type cache entities\r\n            if (CredentialEntity.getCredentialType(cacheKey) === Constants.NOT_DEFINED) {\r\n                return;\r\n            }\r\n            var cacheEntity = _this.getItem(cacheKey, CacheSchemaType.CREDENTIAL);\r\n            if (!!cacheEntity && accountId === cacheEntity.generateAccountId()) {\r\n                _this.removeCredential(cacheEntity);\r\n            }\r\n        });\r\n        return true;\r\n    };\r\n    /**\r\n     * returns a boolean if the given credential is removed\r\n     * @param credential\r\n     */\r\n    CacheManager.prototype.removeCredential = function (credential) {\r\n        var key = credential.generateCredentialKey();\r\n        return this.removeItem(key, CacheSchemaType.CREDENTIAL);\r\n    };\r\n    /**\r\n     *\r\n     * @param value\r\n     * @param homeAccountId\r\n     */\r\n    CacheManager.prototype.matchHomeAccountId = function (entity, homeAccountId) {\r\n        return entity.homeAccountId && homeAccountId === entity.homeAccountId;\r\n    };\r\n    /**\r\n     *\r\n     * @param value\r\n     * @param environment\r\n     */\r\n    CacheManager.prototype.matchEnvironment = function (entity, environment) {\r\n        var cloudMetadata = TrustedAuthority.getCloudDiscoveryMetadata(environment);\r\n        if (cloudMetadata &&\r\n            cloudMetadata.aliases.indexOf(entity.environment) > -1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     *\r\n     * @param entity\r\n     * @param credentialType\r\n     */\r\n    CacheManager.prototype.matchCredentialType = function (entity, credentialType) {\r\n        return entity.credentialType && credentialType.toLowerCase() === entity.credentialType.toLowerCase();\r\n    };\r\n    /**\r\n     *\r\n     * @param entity\r\n     * @param clientId\r\n     */\r\n    CacheManager.prototype.matchClientId = function (entity, clientId) {\r\n        return entity.clientId && clientId === entity.clientId;\r\n    };\r\n    /**\r\n     *\r\n     * @param entity\r\n     * @param realm\r\n     */\r\n    CacheManager.prototype.matchRealm = function (entity, realm) {\r\n        return entity.realm && realm === entity.realm;\r\n    };\r\n    /**\r\n     * Returns true if the target scopes are a subset of the current entity's scopes, false otherwise.\r\n     * @param entity\r\n     * @param target\r\n     */\r\n    CacheManager.prototype.matchTarget = function (entity, target) {\r\n        if (entity.credentialType !== CredentialType.ACCESS_TOKEN || StringUtils.isEmpty(entity.target)) {\r\n            return false;\r\n        }\r\n        var entityScopeSet = ScopeSet.fromString(entity.target);\r\n        var requestTargetScopeSet = ScopeSet.fromString(target);\r\n        return entityScopeSet.containsScopeSet(requestTargetScopeSet);\r\n    };\r\n    /**\r\n     * Returns a valid AccountEntity if key and object contain correct values, null otherwise.\r\n     * @param key\r\n     */\r\n    CacheManager.prototype.getAccountEntity = function (key) {\r\n        // don't parse any non-account type cache entities\r\n        if (CredentialEntity.getCredentialType(key) !== Constants.NOT_DEFINED || this.isAppMetadata(key)) {\r\n            return null;\r\n        }\r\n        // Attempt retrieval\r\n        var entity;\r\n        try {\r\n            entity = this.getItem(key, CacheSchemaType.ACCOUNT);\r\n        }\r\n        catch (e) {\r\n            return null;\r\n        }\r\n        // Authority type is required for accounts, return if it is not available (not an account entity)\r\n        if (!entity || StringUtils.isEmpty(entity.authorityType)) {\r\n            return null;\r\n        }\r\n        return entity;\r\n    };\r\n    /**\r\n     * returns if a given cache entity is of the type appmetadata\r\n     * @param key\r\n     */\r\n    CacheManager.prototype.isAppMetadata = function (key) {\r\n        return key.indexOf(APP_META_DATA) !== -1;\r\n    };\r\n    /**\r\n     * Helper to convert serialized data to object\r\n     * @param obj\r\n     * @param json\r\n     */\r\n    CacheManager.toObject = function (obj, json) {\r\n        for (var propertyName in json) {\r\n            obj[propertyName] = json[propertyName];\r\n        }\r\n        return obj;\r\n    };\r\n    return CacheManager;\r\n}());\r\nvar DefaultStorageClass = /** @class */ (function (_super) {\r\n    __extends$1(DefaultStorageClass, _super);\r\n    function DefaultStorageClass() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    DefaultStorageClass.prototype.setItem = function () {\r\n        var notImplErr = \"Storage interface - setItem() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    DefaultStorageClass.prototype.getItem = function () {\r\n        var notImplErr = \"Storage interface - getItem() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    DefaultStorageClass.prototype.removeItem = function () {\r\n        var notImplErr = \"Storage interface - removeItem() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    DefaultStorageClass.prototype.containsKey = function () {\r\n        var notImplErr = \"Storage interface - containsKey() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    DefaultStorageClass.prototype.getKeys = function () {\r\n        var notImplErr = \"Storage interface - getKeys() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    DefaultStorageClass.prototype.clear = function () {\r\n        var notImplErr = \"Storage interface - clear() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    return DefaultStorageClass;\r\n}(CacheManager));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n// Token renewal offset default in seconds\r\nvar DEFAULT_TOKEN_RENEWAL_OFFSET_SEC = 300;\r\nvar DEFAULT_AUTH_OPTIONS = {\r\n    clientId: \"\",\r\n    authority: null,\r\n    knownAuthorities: [],\r\n    cloudDiscoveryMetadata: \"\"\r\n};\r\nvar DEFAULT_SYSTEM_OPTIONS = {\r\n    tokenRenewalOffsetSeconds: DEFAULT_TOKEN_RENEWAL_OFFSET_SEC\r\n};\r\nvar DEFAULT_LOGGER_IMPLEMENTATION = {\r\n    loggerCallback: function () {\r\n        // allow users to not set loggerCallback\r\n    },\r\n    piiLoggingEnabled: false,\r\n    logLevel: LogLevel.Info\r\n};\r\nvar DEFAULT_NETWORK_IMPLEMENTATION = {\r\n    sendGetRequestAsync: function () {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var notImplErr;\r\n            return __generator$1(this, function (_a) {\r\n                notImplErr = \"Network interface - sendGetRequestAsync() has not been implemented\";\r\n                throw AuthError.createUnexpectedError(notImplErr);\r\n            });\r\n        });\r\n    },\r\n    sendPostRequestAsync: function () {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var notImplErr;\r\n            return __generator$1(this, function (_a) {\r\n                notImplErr = \"Network interface - sendPostRequestAsync() has not been implemented\";\r\n                throw AuthError.createUnexpectedError(notImplErr);\r\n            });\r\n        });\r\n    }\r\n};\r\nvar DEFAULT_CRYPTO_IMPLEMENTATION = {\r\n    createNewGuid: function () {\r\n        var notImplErr = \"Crypto interface - createNewGuid() has not been implemented\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    base64Decode: function () {\r\n        var notImplErr = \"Crypto interface - base64Decode() has not been implemented\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    base64Encode: function () {\r\n        var notImplErr = \"Crypto interface - base64Encode() has not been implemented\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    generatePkceCodes: function () {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var notImplErr;\r\n            return __generator$1(this, function (_a) {\r\n                notImplErr = \"Crypto interface - generatePkceCodes() has not been implemented\";\r\n                throw AuthError.createUnexpectedError(notImplErr);\r\n            });\r\n        });\r\n    }\r\n};\r\nvar DEFAULT_LIBRARY_INFO = {\r\n    sku: Constants.SKU,\r\n    version: version,\r\n    cpu: \"\",\r\n    os: \"\"\r\n};\r\nvar DEFAULT_CLIENT_CREDENTIALS = {\r\n    clientSecret: \"\",\r\n    clientAssertion: null\r\n};\r\n/**\r\n * Function that sets the default options when not explicitly configured from app developer\r\n *\r\n * @param Configuration\r\n *\r\n * @returns Configuration\r\n */\r\nfunction buildClientConfiguration(_a) {\r\n    var userAuthOptions = _a.authOptions, userSystemOptions = _a.systemOptions, userLoggerOption = _a.loggerOptions, storageImplementation = _a.storageInterface, networkImplementation = _a.networkInterface, cryptoImplementation = _a.cryptoInterface, clientCredentials = _a.clientCredentials, libraryInfo = _a.libraryInfo, serverTelemetryManager = _a.serverTelemetryManager;\r\n    return {\r\n        authOptions: __assign$1(__assign$1({}, DEFAULT_AUTH_OPTIONS), userAuthOptions),\r\n        systemOptions: __assign$1(__assign$1({}, DEFAULT_SYSTEM_OPTIONS), userSystemOptions),\r\n        loggerOptions: __assign$1(__assign$1({}, DEFAULT_LOGGER_IMPLEMENTATION), userLoggerOption),\r\n        storageInterface: storageImplementation || new DefaultStorageClass(),\r\n        networkInterface: networkImplementation || DEFAULT_NETWORK_IMPLEMENTATION,\r\n        cryptoInterface: cryptoImplementation || DEFAULT_CRYPTO_IMPLEMENTATION,\r\n        clientCredentials: clientCredentials || DEFAULT_CLIENT_CREDENTIALS,\r\n        libraryInfo: __assign$1(__assign$1({}, DEFAULT_LIBRARY_INFO), libraryInfo),\r\n        serverTelemetryManager: serverTelemetryManager || null\r\n    };\r\n}\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Base application class which will construct requests to send to and handle responses from the Microsoft STS using the authorization code flow.\r\n */\r\nvar BaseClient = /** @class */ (function () {\r\n    function BaseClient(configuration) {\r\n        // Set the configuration\r\n        this.config = buildClientConfiguration(configuration);\r\n        // Initialize the logger\r\n        this.logger = new Logger(this.config.loggerOptions);\r\n        // Initialize crypto\r\n        this.cryptoUtils = this.config.cryptoInterface;\r\n        // Initialize storage interface\r\n        this.cacheManager = this.config.storageInterface;\r\n        // Set the network interface\r\n        this.networkClient = this.config.networkInterface;\r\n        // Set TelemetryManager\r\n        this.serverTelemetryManager = this.config.serverTelemetryManager;\r\n        TrustedAuthority.setTrustedAuthoritiesFromConfig(this.config.authOptions.knownAuthorities, this.config.authOptions.cloudDiscoveryMetadata);\r\n        this.authority = this.config.authOptions.authority;\r\n    }\r\n    /**\r\n     * Creates default headers for requests to token endpoint\r\n     */\r\n    BaseClient.prototype.createDefaultTokenRequestHeaders = function () {\r\n        var headers = this.createDefaultLibraryHeaders();\r\n        headers.set(HeaderNames.CONTENT_TYPE, Constants.URL_FORM_CONTENT_TYPE);\r\n        if (this.serverTelemetryManager) {\r\n            headers.set(HeaderNames.X_CLIENT_CURR_TELEM, this.serverTelemetryManager.generateCurrentRequestHeaderValue());\r\n            headers.set(HeaderNames.X_CLIENT_LAST_TELEM, this.serverTelemetryManager.generateLastRequestHeaderValue());\r\n        }\r\n        return headers;\r\n    };\r\n    /**\r\n     * addLibraryData\r\n     */\r\n    BaseClient.prototype.createDefaultLibraryHeaders = function () {\r\n        var headers = new Map();\r\n        // client info headers\r\n        headers.set(\"\" + AADServerParamKeys.X_CLIENT_SKU, this.config.libraryInfo.sku);\r\n        headers.set(\"\" + AADServerParamKeys.X_CLIENT_VER, this.config.libraryInfo.version);\r\n        headers.set(\"\" + AADServerParamKeys.X_CLIENT_OS, this.config.libraryInfo.os);\r\n        headers.set(\"\" + AADServerParamKeys.X_CLIENT_CPU, this.config.libraryInfo.cpu);\r\n        return headers;\r\n    };\r\n    /**\r\n     * Http post to token endpoint\r\n     * @param tokenEndpoint\r\n     * @param queryString\r\n     * @param headers\r\n     */\r\n    BaseClient.prototype.executePostToTokenEndpoint = function (tokenEndpoint, queryString, headers) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var response;\r\n            return __generator$1(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.networkClient.sendPostRequestAsync(tokenEndpoint, {\r\n                            body: queryString,\r\n                            headers: headers,\r\n                        })];\r\n                    case 1:\r\n                        response = _a.sent();\r\n                        if (this.config.serverTelemetryManager && response.status < 500 && response.status !== 429) {\r\n                            // Telemetry data successfully logged by server, clear Telemetry cache\r\n                            this.config.serverTelemetryManager.clearTelemetryCache();\r\n                        }\r\n                        return [2 /*return*/, response];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return BaseClient;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Validates server consumable params from the \"request\" objects\r\n */\r\nvar RequestValidator = /** @class */ (function () {\r\n    function RequestValidator() {\r\n    }\r\n    /**\r\n     * Utility to check if the `redirectUri` in the request is a non-null value\r\n     * @param redirectUri\r\n     */\r\n    RequestValidator.validateRedirectUri = function (redirectUri) {\r\n        if (StringUtils.isEmpty(redirectUri)) {\r\n            throw ClientConfigurationError.createRedirectUriEmptyError();\r\n        }\r\n    };\r\n    /**\r\n     * Utility to validate prompt sent by the user in the request\r\n     * @param prompt\r\n     */\r\n    RequestValidator.validatePrompt = function (prompt) {\r\n        if ([\r\n            PromptValue.LOGIN,\r\n            PromptValue.SELECT_ACCOUNT,\r\n            PromptValue.CONSENT,\r\n            PromptValue.NONE\r\n        ].indexOf(prompt) < 0) {\r\n            throw ClientConfigurationError.createInvalidPromptError(prompt);\r\n        }\r\n    };\r\n    /**\r\n     * Utility to validate code_challenge and code_challenge_method\r\n     * @param codeChallenge\r\n     * @param codeChallengeMethod\r\n     */\r\n    RequestValidator.validateCodeChallengeParams = function (codeChallenge, codeChallengeMethod) {\r\n        if (StringUtils.isEmpty(codeChallenge) || StringUtils.isEmpty(codeChallengeMethod)) {\r\n            throw ClientConfigurationError.createInvalidCodeChallengeParamsError();\r\n        }\r\n        else {\r\n            this.validateCodeChallengeMethod(codeChallengeMethod);\r\n        }\r\n    };\r\n    /**\r\n     * Utility to validate code_challenge_method\r\n     * @param codeChallengeMethod\r\n     */\r\n    RequestValidator.validateCodeChallengeMethod = function (codeChallengeMethod) {\r\n        if ([\r\n            CodeChallengeMethodValues.PLAIN,\r\n            CodeChallengeMethodValues.S256\r\n        ].indexOf(codeChallengeMethod) < 0) {\r\n            throw ClientConfigurationError.createInvalidCodeChallengeMethodError();\r\n        }\r\n    };\r\n    /**\r\n     * Removes unnecessary or duplicate query parameters from extraQueryParameters\r\n     * @param request\r\n     */\r\n    RequestValidator.sanitizeEQParams = function (eQParams, queryParams) {\r\n        if (!eQParams) {\r\n            return null;\r\n        }\r\n        // Remove any query parameters already included in SSO params\r\n        queryParams.forEach(function (value, key) {\r\n            if (eQParams[key]) {\r\n                delete eQParams[key];\r\n            }\r\n        });\r\n        return eQParams;\r\n    };\r\n    return RequestValidator;\r\n}());\n\n/*\r\n* Copyright (c) Microsoft Corporation. All rights reserved.\r\n* Licensed under the MIT License.\r\n*/\r\nvar RequestParameterBuilder = /** @class */ (function () {\r\n    function RequestParameterBuilder() {\r\n        this.parameters = new Map();\r\n    }\r\n    /**\r\n     * add response_type = code\r\n     */\r\n    RequestParameterBuilder.prototype.addResponseTypeCode = function () {\r\n        this.parameters.set(AADServerParamKeys.RESPONSE_TYPE, encodeURIComponent(Constants.CODE_RESPONSE_TYPE));\r\n    };\r\n    /**\r\n     * add response_mode. defaults to query.\r\n     * @param responseMode\r\n     */\r\n    RequestParameterBuilder.prototype.addResponseMode = function (responseMode) {\r\n        this.parameters.set(AADServerParamKeys.RESPONSE_MODE, encodeURIComponent((responseMode) ? responseMode : ResponseMode.QUERY));\r\n    };\r\n    /**\r\n     * add scopes\r\n     * @param scopeSet\r\n     */\r\n    RequestParameterBuilder.prototype.addScopes = function (scopeSet) {\r\n        this.parameters.set(AADServerParamKeys.SCOPE, encodeURIComponent(scopeSet.printScopes()));\r\n    };\r\n    /**\r\n     * add clientId\r\n     * @param clientId\r\n     */\r\n    RequestParameterBuilder.prototype.addClientId = function (clientId) {\r\n        this.parameters.set(AADServerParamKeys.CLIENT_ID, encodeURIComponent(clientId));\r\n    };\r\n    /**\r\n     * add redirect_uri\r\n     * @param redirectUri\r\n     */\r\n    RequestParameterBuilder.prototype.addRedirectUri = function (redirectUri) {\r\n        RequestValidator.validateRedirectUri(redirectUri);\r\n        this.parameters.set(AADServerParamKeys.REDIRECT_URI, encodeURIComponent(redirectUri));\r\n    };\r\n    /**\r\n     * add domain_hint\r\n     * @param domainHint\r\n     */\r\n    RequestParameterBuilder.prototype.addDomainHint = function (domainHint) {\r\n        this.parameters.set(SSOTypes.DOMAIN_HINT, encodeURIComponent(domainHint));\r\n    };\r\n    /**\r\n     * add login_hint\r\n     * @param loginHint\r\n     */\r\n    RequestParameterBuilder.prototype.addLoginHint = function (loginHint) {\r\n        this.parameters.set(SSOTypes.LOGIN_HINT, encodeURIComponent(loginHint));\r\n    };\r\n    /**\r\n     * add sid\r\n     * @param sid\r\n     */\r\n    RequestParameterBuilder.prototype.addSid = function (sid) {\r\n        this.parameters.set(SSOTypes.SID, encodeURIComponent(sid));\r\n    };\r\n    /**\r\n     * add claims\r\n     * @param claims\r\n     */\r\n    RequestParameterBuilder.prototype.addClaims = function (claims) {\r\n        this.parameters.set(AADServerParamKeys.CLAIMS, encodeURIComponent(claims));\r\n    };\r\n    /**\r\n     * add correlationId\r\n     * @param correlationId\r\n     */\r\n    RequestParameterBuilder.prototype.addCorrelationId = function (correlationId) {\r\n        this.parameters.set(AADServerParamKeys.CLIENT_REQUEST_ID, encodeURIComponent(correlationId));\r\n    };\r\n    /**\r\n     * add library info query params\r\n     * @param libraryInfo\r\n     */\r\n    RequestParameterBuilder.prototype.addLibraryInfo = function (libraryInfo) {\r\n        // Telemetry Info\r\n        this.parameters.set(AADServerParamKeys.X_CLIENT_SKU, libraryInfo.sku);\r\n        this.parameters.set(AADServerParamKeys.X_CLIENT_VER, libraryInfo.version);\r\n        this.parameters.set(AADServerParamKeys.X_CLIENT_OS, libraryInfo.os);\r\n        this.parameters.set(AADServerParamKeys.X_CLIENT_CPU, libraryInfo.cpu);\r\n    };\r\n    /**\r\n     * add prompt\r\n     * @param prompt\r\n     */\r\n    RequestParameterBuilder.prototype.addPrompt = function (prompt) {\r\n        RequestValidator.validatePrompt(prompt);\r\n        this.parameters.set(\"\" + AADServerParamKeys.PROMPT, encodeURIComponent(prompt));\r\n    };\r\n    /**\r\n     * add state\r\n     * @param state\r\n     */\r\n    RequestParameterBuilder.prototype.addState = function (state) {\r\n        if (!StringUtils.isEmpty(state)) {\r\n            this.parameters.set(AADServerParamKeys.STATE, encodeURIComponent(state));\r\n        }\r\n    };\r\n    /**\r\n     * add nonce\r\n     * @param nonce\r\n     */\r\n    RequestParameterBuilder.prototype.addNonce = function (nonce) {\r\n        this.parameters.set(AADServerParamKeys.NONCE, encodeURIComponent(nonce));\r\n    };\r\n    /**\r\n     * add code_challenge and code_challenge_method\r\n     * - throw if either of them are not passed\r\n     * @param codeChallenge\r\n     * @param codeChallengeMethod\r\n     */\r\n    RequestParameterBuilder.prototype.addCodeChallengeParams = function (codeChallenge, codeChallengeMethod) {\r\n        RequestValidator.validateCodeChallengeParams(codeChallenge, codeChallengeMethod);\r\n        if (codeChallenge && codeChallengeMethod) {\r\n            this.parameters.set(AADServerParamKeys.CODE_CHALLENGE, encodeURIComponent(codeChallenge));\r\n            this.parameters.set(AADServerParamKeys.CODE_CHALLENGE_METHOD, encodeURIComponent(codeChallengeMethod));\r\n        }\r\n        else {\r\n            throw ClientConfigurationError.createInvalidCodeChallengeParamsError();\r\n        }\r\n    };\r\n    /**\r\n     * add the `authorization_code` passed by the user to exchange for a token\r\n     * @param code\r\n     */\r\n    RequestParameterBuilder.prototype.addAuthorizationCode = function (code) {\r\n        this.parameters.set(AADServerParamKeys.CODE, encodeURIComponent(code));\r\n    };\r\n    /**\r\n     * add the `authorization_code` passed by the user to exchange for a token\r\n     * @param code\r\n     */\r\n    RequestParameterBuilder.prototype.addDeviceCode = function (code) {\r\n        this.parameters.set(AADServerParamKeys.DEVICE_CODE, encodeURIComponent(code));\r\n    };\r\n    /**\r\n     * add the `refreshToken` passed by the user\r\n     * @param refreshToken\r\n     */\r\n    RequestParameterBuilder.prototype.addRefreshToken = function (refreshToken) {\r\n        this.parameters.set(AADServerParamKeys.REFRESH_TOKEN, encodeURIComponent(refreshToken));\r\n    };\r\n    /**\r\n     * add the `code_verifier` passed by the user to exchange for a token\r\n     * @param codeVerifier\r\n     */\r\n    RequestParameterBuilder.prototype.addCodeVerifier = function (codeVerifier) {\r\n        this.parameters.set(AADServerParamKeys.CODE_VERIFIER, encodeURIComponent(codeVerifier));\r\n    };\r\n    /**\r\n     * add client_secret\r\n     * @param clientSecret\r\n     */\r\n    RequestParameterBuilder.prototype.addClientSecret = function (clientSecret) {\r\n        this.parameters.set(AADServerParamKeys.CLIENT_SECRET, encodeURIComponent(clientSecret));\r\n    };\r\n    /**\r\n     * add clientAssertion for confidential client flows\r\n     * @param clientAssertion\r\n     */\r\n    RequestParameterBuilder.prototype.addClientAssertion = function (clientAssertion) {\r\n        this.parameters.set(AADServerParamKeys.CLIENT_ASSERTION, encodeURIComponent(clientAssertion));\r\n    };\r\n    /**\r\n     * add clientAssertionType for confidential client flows\r\n     * @param clientAssertionType\r\n     */\r\n    RequestParameterBuilder.prototype.addClientAssertionType = function (clientAssertionType) {\r\n        this.parameters.set(AADServerParamKeys.CLIENT_ASSERTION_TYPE, encodeURIComponent(clientAssertionType));\r\n    };\r\n    /**\r\n     * add grant type\r\n     * @param grantType\r\n     */\r\n    RequestParameterBuilder.prototype.addGrantType = function (grantType) {\r\n        this.parameters.set(AADServerParamKeys.GRANT_TYPE, encodeURIComponent(grantType));\r\n    };\r\n    /**\r\n     * add client info\r\n     *\r\n     */\r\n    RequestParameterBuilder.prototype.addClientInfo = function () {\r\n        this.parameters.set(ClientInfo, \"1\");\r\n    };\r\n    /**\r\n     * add extraQueryParams\r\n     * @param eQparams\r\n     */\r\n    RequestParameterBuilder.prototype.addExtraQueryParameters = function (eQparams) {\r\n        var _this = this;\r\n        RequestValidator.sanitizeEQParams(eQparams, this.parameters);\r\n        Object.keys(eQparams).forEach(function (key) {\r\n            _this.parameters.set(key, eQparams[key]);\r\n        });\r\n    };\r\n    /**\r\n     * Utility to create a URL from the params map\r\n     */\r\n    RequestParameterBuilder.prototype.createQueryString = function () {\r\n        var queryParameterArray = new Array();\r\n        this.parameters.forEach(function (value, key) {\r\n            queryParameterArray.push(key + \"=\" + value);\r\n        });\r\n        return queryParameterArray.join(\"&\");\r\n    };\r\n    return RequestParameterBuilder;\r\n}());\n\n/**\r\n * Error thrown when there is an error with the server code, for example, unavailability.\r\n */\r\nvar ServerError = /** @class */ (function (_super) {\r\n    __extends$1(ServerError, _super);\r\n    function ServerError(errorCode, errorMessage, subError) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"ServerError\";\r\n        _this.subError = subError;\r\n        Object.setPrototypeOf(_this, ServerError.prototype);\r\n        return _this;\r\n    }\r\n    return ServerError;\r\n}(AuthError));\n\n/**\r\n * Id Token representation class. Parses id token string and generates claims object.\r\n */\r\nvar IdToken = /** @class */ (function () {\r\n    function IdToken(rawIdToken, crypto) {\r\n        if (StringUtils.isEmpty(rawIdToken)) {\r\n            throw ClientAuthError.createIdTokenNullOrEmptyError(rawIdToken);\r\n        }\r\n        this.rawIdToken = rawIdToken;\r\n        this.claims = IdToken.extractIdToken(rawIdToken, crypto);\r\n    }\r\n    /**\r\n     * Extract IdToken by decoding the RAWIdToken\r\n     *\r\n     * @param encodedIdToken\r\n     */\r\n    IdToken.extractIdToken = function (encodedIdToken, crypto) {\r\n        // id token will be decoded to get the username\r\n        var decodedToken = StringUtils.decodeJwt(encodedIdToken);\r\n        if (!decodedToken) {\r\n            return null;\r\n        }\r\n        try {\r\n            var base64IdTokenPayload = decodedToken.JWSPayload;\r\n            // base64Decode() should throw an error if there is an issue\r\n            var base64Decoded = crypto.base64Decode(base64IdTokenPayload);\r\n            return JSON.parse(base64Decoded);\r\n        }\r\n        catch (err) {\r\n            throw ClientAuthError.createIdTokenParsingError(err);\r\n        }\r\n    };\r\n    return IdToken;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Utility class which exposes functions for managing date and time operations.\r\n */\r\nvar TimeUtils = /** @class */ (function () {\r\n    function TimeUtils() {\r\n    }\r\n    /**\r\n     * return the current time in Unix time (seconds).\r\n     */\r\n    TimeUtils.nowSeconds = function () {\r\n        // Date.getTime() returns in milliseconds.\r\n        return Math.round(new Date().getTime() / 1000.0);\r\n    };\r\n    return TimeUtils;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Authority types supported by MSAL.\r\n */\r\nvar AuthorityType;\r\n(function (AuthorityType) {\r\n    AuthorityType[AuthorityType[\"Default\"] = 0] = \"Default\";\r\n    AuthorityType[AuthorityType[\"Adfs\"] = 1] = \"Adfs\";\r\n})(AuthorityType || (AuthorityType = {}));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * ID_TOKEN Cache\r\n *\r\n * Key:Value Schema:\r\n *\r\n * Key Example: uid.utid-login.microsoftonline.com-idtoken-clientId-contoso.com-\r\n *\r\n * Value Schema:\r\n * {\r\n *      homeAccountId: home account identifier for the auth scheme,\r\n *      environment: entity that issued the token, represented as a full host\r\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\r\n *      clientId: client ID of the application\r\n *      secret: Actual credential as a string\r\n *      realm: Full tenant or organizational identifier that the account belongs to\r\n * }\r\n */\r\nvar IdTokenEntity = /** @class */ (function (_super) {\r\n    __extends$1(IdTokenEntity, _super);\r\n    function IdTokenEntity() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Create IdTokenEntity\r\n     * @param homeAccountId\r\n     * @param authenticationResult\r\n     * @param clientId\r\n     * @param authority\r\n     */\r\n    IdTokenEntity.createIdTokenEntity = function (homeAccountId, environment, idToken, clientId, tenantId) {\r\n        var idTokenEntity = new IdTokenEntity();\r\n        idTokenEntity.credentialType = CredentialType.ID_TOKEN;\r\n        idTokenEntity.homeAccountId = homeAccountId;\r\n        idTokenEntity.environment = environment;\r\n        idTokenEntity.clientId = clientId;\r\n        idTokenEntity.secret = idToken;\r\n        idTokenEntity.realm = tenantId;\r\n        return idTokenEntity;\r\n    };\r\n    return IdTokenEntity;\r\n}(CredentialEntity));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * ACCESS_TOKEN Credential Type\r\n *\r\n * Key:Value Schema:\r\n *\r\n * Key Example: uid.utid-login.microsoftonline.com-accesstoken-clientId-contoso.com-user.read\r\n *\r\n * Value Schema:\r\n * {\r\n *      homeAccountId: home account identifier for the auth scheme,\r\n *      environment: entity that issued the token, represented as a full host\r\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\r\n *      clientId: client ID of the application\r\n *      secret: Actual credential as a string\r\n *      familyId: Family ID identifier, usually only used for refresh tokens\r\n *      realm: Full tenant or organizational identifier that the account belongs to\r\n *      target: Permissions that are included in the token, or for refresh tokens, the resource identifier.\r\n *      cachedAt: Absolute device time when entry was created in the cache.\r\n *      expiresOn: Token expiry time, calculated based on current UTC time in seconds. Represented as a string.\r\n *      extendedExpiresOn: Additional extended expiry time until when token is valid in case of server-side outage. Represented as string in UTC seconds.\r\n *      keyId: used for POP and SSH tokenTypes\r\n *      tokenType: Type of the token issued. Usually \"Bearer\"\r\n * }\r\n */\r\nvar AccessTokenEntity = /** @class */ (function (_super) {\r\n    __extends$1(AccessTokenEntity, _super);\r\n    function AccessTokenEntity() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Create AccessTokenEntity\r\n     * @param homeAccountId\r\n     * @param environment\r\n     * @param accessToken\r\n     * @param clientId\r\n     * @param tenantId\r\n     * @param scopes\r\n     * @param expiresOn\r\n     * @param extExpiresOn\r\n     */\r\n    AccessTokenEntity.createAccessTokenEntity = function (homeAccountId, environment, accessToken, clientId, tenantId, scopes, expiresOn, extExpiresOn) {\r\n        var atEntity = new AccessTokenEntity();\r\n        atEntity.homeAccountId = homeAccountId;\r\n        atEntity.credentialType = CredentialType.ACCESS_TOKEN;\r\n        atEntity.secret = accessToken;\r\n        var currentTime = TimeUtils.nowSeconds();\r\n        atEntity.cachedAt = currentTime.toString();\r\n        // Token expiry time.\r\n        // This value should be  calculated based on the current UTC time measured locally and the value  expires_in Represented as a string in JSON.\r\n        atEntity.expiresOn = expiresOn.toString();\r\n        atEntity.extendedExpiresOn = extExpiresOn.toString();\r\n        atEntity.environment = environment;\r\n        atEntity.clientId = clientId;\r\n        atEntity.realm = tenantId;\r\n        atEntity.target = scopes;\r\n        return atEntity;\r\n    };\r\n    return AccessTokenEntity;\r\n}(CredentialEntity));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * REFRESH_TOKEN Cache\r\n *\r\n * Key:Value Schema:\r\n *\r\n * Key Example: uid.utid-login.microsoftonline.com-refreshtoken-clientId--\r\n *\r\n * Value:\r\n * {\r\n *      homeAccountId: home account identifier for the auth scheme,\r\n *      environment: entity that issued the token, represented as a full host\r\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\r\n *      clientId: client ID of the application\r\n *      secret: Actual credential as a string\r\n *      familyId: Family ID identifier, '1' represents Microsoft Family\r\n *      realm: Full tenant or organizational identifier that the account belongs to\r\n *      target: Permissions that are included in the token, or for refresh tokens, the resource identifier.\r\n * }\r\n */\r\nvar RefreshTokenEntity = /** @class */ (function (_super) {\r\n    __extends$1(RefreshTokenEntity, _super);\r\n    function RefreshTokenEntity() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Create RefreshTokenEntity\r\n     * @param homeAccountId\r\n     * @param authenticationResult\r\n     * @param clientId\r\n     * @param authority\r\n     */\r\n    RefreshTokenEntity.createRefreshTokenEntity = function (homeAccountId, environment, refreshToken, clientId, familyId) {\r\n        var rtEntity = new RefreshTokenEntity();\r\n        rtEntity.clientId = clientId;\r\n        rtEntity.credentialType = CredentialType.REFRESH_TOKEN;\r\n        rtEntity.environment = environment;\r\n        rtEntity.homeAccountId = homeAccountId;\r\n        rtEntity.secret = refreshToken;\r\n        if (familyId)\r\n            rtEntity.familyId = familyId;\r\n        return rtEntity;\r\n    };\r\n    return RefreshTokenEntity;\r\n}(CredentialEntity));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * InteractionRequiredAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nvar InteractionRequiredAuthErrorMessage = [\r\n    \"interaction_required\",\r\n    \"consent_required\",\r\n    \"login_required\"\r\n];\r\nvar InteractionRequiredAuthSubErrorMessage = [\r\n    \"message_only\",\r\n    \"additional_action\",\r\n    \"basic_action\",\r\n    \"user_password_expired\",\r\n    \"consent_required\"\r\n];\r\n/**\r\n * Error thrown when user interaction is required at the auth server.\r\n */\r\nvar InteractionRequiredAuthError = /** @class */ (function (_super) {\r\n    __extends$1(InteractionRequiredAuthError, _super);\r\n    function InteractionRequiredAuthError(errorCode, errorMessage, subError) {\r\n        var _this = _super.call(this, errorCode, errorMessage, subError) || this;\r\n        _this.name = \"InteractionRequiredAuthError\";\r\n        Object.setPrototypeOf(_this, InteractionRequiredAuthError.prototype);\r\n        return _this;\r\n    }\r\n    InteractionRequiredAuthError.isInteractionRequiredError = function (errorCode, errorString, subError) {\r\n        var isInteractionRequiredErrorCode = !StringUtils.isEmpty(errorCode) && InteractionRequiredAuthErrorMessage.indexOf(errorCode) > -1;\r\n        var isInteractionRequiredSubError = !StringUtils.isEmpty(subError) && InteractionRequiredAuthSubErrorMessage.indexOf(subError) > -1;\r\n        var isInteractionRequiredErrorDesc = !StringUtils.isEmpty(errorString) && InteractionRequiredAuthErrorMessage.some(function (irErrorCode) {\r\n            return errorString.indexOf(irErrorCode) > -1;\r\n        });\r\n        return isInteractionRequiredErrorCode || isInteractionRequiredErrorDesc || isInteractionRequiredSubError;\r\n    };\r\n    return InteractionRequiredAuthError;\r\n}(ServerError));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar CacheRecord = /** @class */ (function () {\r\n    function CacheRecord(accountEntity, idTokenEntity, accessTokenEntity, refreshTokenEntity) {\r\n        this.account = accountEntity;\r\n        this.idToken = idTokenEntity;\r\n        this.accessToken = accessTokenEntity;\r\n        this.refreshToken = refreshTokenEntity;\r\n    }\r\n    return CacheRecord;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Class which provides helpers for OAuth 2.0 protocol specific values\r\n */\r\nvar ProtocolUtils = /** @class */ (function () {\r\n    function ProtocolUtils() {\r\n    }\r\n    /**\r\n     * Appends user state with random guid, or returns random guid.\r\n     * @param userState\r\n     * @param randomGuid\r\n     */\r\n    ProtocolUtils.setRequestState = function (cryptoObj, userState, meta) {\r\n        var libraryState = ProtocolUtils.generateLibraryState(cryptoObj, meta);\r\n        return !StringUtils.isEmpty(userState) ? \"\" + libraryState + Constants.RESOURCE_DELIM + userState : libraryState;\r\n    };\r\n    /**\r\n     * Generates the state value used by the common library.\r\n     * @param randomGuid\r\n     * @param cryptoObj\r\n     */\r\n    ProtocolUtils.generateLibraryState = function (cryptoObj, meta) {\r\n        if (!cryptoObj) {\r\n            throw ClientAuthError.createNoCryptoObjectError(\"generateLibraryState\");\r\n        }\r\n        // Create a state object containing a unique id and the timestamp of the request creation\r\n        var stateObj = {\r\n            id: cryptoObj.createNewGuid(),\r\n            ts: TimeUtils.nowSeconds()\r\n        };\r\n        if (meta) {\r\n            stateObj.meta = meta;\r\n        }\r\n        var stateString = JSON.stringify(stateObj);\r\n        return cryptoObj.base64Encode(stateString);\r\n    };\r\n    /**\r\n     * Parses the state into the RequestStateObject, which contains the LibraryState info and the state passed by the user.\r\n     * @param state\r\n     * @param cryptoObj\r\n     */\r\n    ProtocolUtils.parseRequestState = function (cryptoObj, state) {\r\n        if (!cryptoObj) {\r\n            throw ClientAuthError.createNoCryptoObjectError(\"parseRequestState\");\r\n        }\r\n        if (StringUtils.isEmpty(state)) {\r\n            throw ClientAuthError.createInvalidStateError(state, \"Null, undefined or empty state\");\r\n        }\r\n        try {\r\n            // Split the state between library state and user passed state and decode them separately\r\n            var splitState = decodeURIComponent(state).split(Constants.RESOURCE_DELIM);\r\n            var libraryState = splitState[0];\r\n            var userState = splitState.length > 1 ? splitState.slice(1).join(Constants.RESOURCE_DELIM) : \"\";\r\n            var libraryStateString = cryptoObj.base64Decode(libraryState);\r\n            var libraryStateObj = JSON.parse(libraryStateString);\r\n            return {\r\n                userRequestState: !StringUtils.isEmpty(userState) ? userState : \"\",\r\n                libraryState: libraryStateObj\r\n            };\r\n        }\r\n        catch (e) {\r\n            throw ClientAuthError.createInvalidStateError(state, e);\r\n        }\r\n    };\r\n    return ProtocolUtils;\r\n}());\n\n/**\r\n * Class that handles response parsing.\r\n */\r\nvar ResponseHandler = /** @class */ (function () {\r\n    function ResponseHandler(clientId, cacheStorage, cryptoObj, logger) {\r\n        this.clientId = clientId;\r\n        this.cacheStorage = cacheStorage;\r\n        this.cryptoObj = cryptoObj;\r\n        this.logger = logger;\r\n    }\r\n    /**\r\n     * Function which validates server authorization code response.\r\n     * @param serverResponseHash\r\n     * @param cachedState\r\n     * @param cryptoObj\r\n     */\r\n    ResponseHandler.prototype.validateServerAuthorizationCodeResponse = function (serverResponseHash, cachedState, cryptoObj) {\r\n        if (decodeURIComponent(serverResponseHash.state) !== decodeURIComponent(cachedState)) {\r\n            throw ClientAuthError.createStateMismatchError();\r\n        }\r\n        // Check for error\r\n        if (serverResponseHash.error || serverResponseHash.error_description || serverResponseHash.suberror) {\r\n            if (InteractionRequiredAuthError.isInteractionRequiredError(serverResponseHash.error, serverResponseHash.error_description, serverResponseHash.suberror)) {\r\n                throw new InteractionRequiredAuthError(serverResponseHash.error, serverResponseHash.error_description, serverResponseHash.suberror);\r\n            }\r\n            throw new ServerError(serverResponseHash.error, serverResponseHash.error_description, serverResponseHash.suberror);\r\n        }\r\n        if (serverResponseHash.client_info) {\r\n            buildClientInfo(serverResponseHash.client_info, cryptoObj);\r\n        }\r\n    };\r\n    /**\r\n     * Function which validates server authorization token response.\r\n     * @param serverResponse\r\n     */\r\n    ResponseHandler.prototype.validateTokenResponse = function (serverResponse) {\r\n        // Check for error\r\n        if (serverResponse.error || serverResponse.error_description || serverResponse.suberror) {\r\n            if (InteractionRequiredAuthError.isInteractionRequiredError(serverResponse.error, serverResponse.error_description, serverResponse.suberror)) {\r\n                throw new InteractionRequiredAuthError(serverResponse.error, serverResponse.error_description, serverResponse.suberror);\r\n            }\r\n            var errString = serverResponse.error_codes + \" - [\" + serverResponse.timestamp + \"]: \" + serverResponse.error_description + \" - Correlation ID: \" + serverResponse.correlation_id + \" - Trace ID: \" + serverResponse.trace_id;\r\n            throw new ServerError(serverResponse.error, errString);\r\n        }\r\n        // generate homeAccountId\r\n        if (serverResponse.client_info) {\r\n            this.clientInfo = buildClientInfo(serverResponse.client_info, this.cryptoObj);\r\n            if (!StringUtils.isEmpty(this.clientInfo.uid) && !StringUtils.isEmpty(this.clientInfo.utid)) {\r\n                this.homeAccountIdentifier = this.clientInfo.uid + \".\" + this.clientInfo.utid;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a constructed token response based on given string. Also manages the cache updates and cleanups.\r\n     * @param serverTokenResponse\r\n     * @param authority\r\n     */\r\n    ResponseHandler.prototype.handleServerTokenResponse = function (serverTokenResponse, authority, cachedNonce, cachedState) {\r\n        // create an idToken object (not entity)\r\n        var idTokenObj = new IdToken(serverTokenResponse.id_token, this.cryptoObj);\r\n        // token nonce check (TODO: Add a warning if no nonce is given?)\r\n        if (!StringUtils.isEmpty(cachedNonce)) {\r\n            if (idTokenObj.claims.nonce !== cachedNonce) {\r\n                throw ClientAuthError.createNonceMismatchError();\r\n            }\r\n        }\r\n        // save the response tokens\r\n        var requestStateObj = null;\r\n        if (!StringUtils.isEmpty(cachedState)) {\r\n            requestStateObj = ProtocolUtils.parseRequestState(this.cryptoObj, cachedState);\r\n        }\r\n        var cacheRecord = this.generateCacheRecord(serverTokenResponse, idTokenObj, authority, requestStateObj && requestStateObj.libraryState);\r\n        this.cacheStorage.saveCacheRecord(cacheRecord);\r\n        return ResponseHandler.generateAuthenticationResult(cacheRecord, idTokenObj, false, requestStateObj);\r\n    };\r\n    /**\r\n     * Generates CacheRecord\r\n     * @param serverTokenResponse\r\n     * @param idTokenObj\r\n     * @param authority\r\n     */\r\n    ResponseHandler.prototype.generateCacheRecord = function (serverTokenResponse, idTokenObj, authority, libraryState) {\r\n        // Account\r\n        var cachedAccount = this.generateAccountEntity(serverTokenResponse, idTokenObj, authority);\r\n        var reqEnvironment = authority.canonicalAuthorityUrlComponents.HostNameAndPort;\r\n        var env = TrustedAuthority.getCloudDiscoveryMetadata(reqEnvironment) ? TrustedAuthority.getCloudDiscoveryMetadata(reqEnvironment).preferred_cache : \"\";\r\n        if (StringUtils.isEmpty(env)) {\r\n            throw ClientAuthError.createInvalidCacheEnvironmentError();\r\n        }\r\n        // IdToken\r\n        var cachedIdToken = null;\r\n        if (!StringUtils.isEmpty(serverTokenResponse.id_token)) {\r\n            cachedIdToken = IdTokenEntity.createIdTokenEntity(this.homeAccountIdentifier, env, serverTokenResponse.id_token, this.clientId, idTokenObj.claims.tid);\r\n        }\r\n        // AccessToken\r\n        var cachedAccessToken = null;\r\n        if (!StringUtils.isEmpty(serverTokenResponse.access_token)) {\r\n            var responseScopes = ScopeSet.fromString(serverTokenResponse.scope);\r\n            // Expiration calculation\r\n            var currentTime = TimeUtils.nowSeconds();\r\n            // If the request timestamp was sent in the library state, use that timestamp to calculate expiration. Otherwise, use current time.\r\n            var timestamp = libraryState ? libraryState.ts : currentTime;\r\n            var tokenExpirationSeconds = timestamp + serverTokenResponse.expires_in;\r\n            var extendedTokenExpirationSeconds = tokenExpirationSeconds + serverTokenResponse.ext_expires_in;\r\n            cachedAccessToken = AccessTokenEntity.createAccessTokenEntity(this.homeAccountIdentifier, env, serverTokenResponse.access_token, this.clientId, idTokenObj.claims.tid, responseScopes.printScopesLowerCase(), tokenExpirationSeconds, extendedTokenExpirationSeconds);\r\n        }\r\n        // refreshToken\r\n        var cachedRefreshToken = null;\r\n        if (!StringUtils.isEmpty(serverTokenResponse.refresh_token)) {\r\n            cachedRefreshToken = RefreshTokenEntity.createRefreshTokenEntity(this.homeAccountIdentifier, env, serverTokenResponse.refresh_token, this.clientId, serverTokenResponse.foci);\r\n        }\r\n        return new CacheRecord(cachedAccount, cachedIdToken, cachedAccessToken, cachedRefreshToken);\r\n    };\r\n    /**\r\n     * Generate Account\r\n     * @param serverTokenResponse\r\n     * @param idToken\r\n     * @param authority\r\n     */\r\n    ResponseHandler.prototype.generateAccountEntity = function (serverTokenResponse, idToken, authority) {\r\n        var authorityType = authority.authorityType;\r\n        if (StringUtils.isEmpty(serverTokenResponse.client_info)) {\r\n            throw ClientAuthError.createClientInfoEmptyError(serverTokenResponse.client_info);\r\n        }\r\n        return (authorityType === AuthorityType.Adfs) ?\r\n            AccountEntity.createADFSAccount(authority, idToken) :\r\n            AccountEntity.createAccount(serverTokenResponse.client_info, authority, idToken, this.cryptoObj);\r\n    };\r\n    /**\r\n     * Creates an @AuthenticationResult from @CacheRecord , @IdToken , and a boolean that states whether or not the result is from cache.\r\n     *\r\n     * Optionally takes a state string that is set as-is in the response.\r\n     *\r\n     * @param cacheRecord\r\n     * @param idTokenObj\r\n     * @param fromTokenCache\r\n     * @param stateString\r\n     */\r\n    ResponseHandler.generateAuthenticationResult = function (cacheRecord, idTokenObj, fromTokenCache, requestState) {\r\n        var accessToken = \"\";\r\n        var responseScopes = [];\r\n        var expiresOn = null;\r\n        var extExpiresOn = null;\r\n        var familyId = null;\r\n        if (cacheRecord.accessToken) {\r\n            accessToken = cacheRecord.accessToken.secret;\r\n            responseScopes = ScopeSet.fromString(cacheRecord.accessToken.target).asArray();\r\n            expiresOn = new Date(Number(cacheRecord.accessToken.expiresOn) * 1000);\r\n            extExpiresOn = new Date(Number(cacheRecord.accessToken.extendedExpiresOn) * 1000);\r\n        }\r\n        if (cacheRecord.refreshToken) {\r\n            familyId = cacheRecord.refreshToken.familyId || null;\r\n        }\r\n        return {\r\n            uniqueId: idTokenObj.claims.oid || idTokenObj.claims.sub,\r\n            tenantId: idTokenObj.claims.tid,\r\n            scopes: responseScopes,\r\n            account: cacheRecord.account.getAccountInfo(),\r\n            idToken: idTokenObj.rawIdToken,\r\n            idTokenClaims: idTokenObj.claims,\r\n            accessToken: accessToken,\r\n            fromCache: fromTokenCache,\r\n            expiresOn: expiresOn,\r\n            extExpiresOn: extExpiresOn,\r\n            familyId: familyId,\r\n            state: requestState ? requestState.userRequestState : \"\"\r\n        };\r\n    };\r\n    return ResponseHandler;\r\n}());\n\n/**\r\n * Url object class which can perform various transformations on url strings.\r\n */\r\nvar UrlString = /** @class */ (function () {\r\n    function UrlString(url) {\r\n        this._urlString = url;\r\n        if (!StringUtils.isEmpty(this._urlString) && StringUtils.isEmpty(this.getHash())) {\r\n            this._urlString = UrlString.canonicalizeUri(url);\r\n        }\r\n        else if (StringUtils.isEmpty(this._urlString)) {\r\n            // Throws error if url is empty\r\n            throw ClientConfigurationError.createUrlEmptyError();\r\n        }\r\n    }\r\n    Object.defineProperty(UrlString.prototype, \"urlString\", {\r\n        get: function () {\r\n            return this._urlString;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Ensure urls are lower case and end with a / character.\r\n     * @param url\r\n     */\r\n    UrlString.canonicalizeUri = function (url) {\r\n        if (url) {\r\n            url = url.toLowerCase();\r\n        }\r\n        if (url && !StringUtils.endsWith(url, \"/\")) {\r\n            url += \"/\";\r\n        }\r\n        return url;\r\n    };\r\n    /**\r\n     * Throws if urlString passed is not a valid authority URI string.\r\n     */\r\n    UrlString.prototype.validateAsUri = function () {\r\n        // Attempts to parse url for uri components\r\n        var components;\r\n        try {\r\n            components = this.getUrlComponents();\r\n        }\r\n        catch (e) {\r\n            throw ClientConfigurationError.createUrlParseError(e);\r\n        }\r\n        // Throw error if URI or path segments are not parseable.\r\n        if (!components.HostNameAndPort || !components.PathSegments || components.PathSegments.length < 1) {\r\n            throw ClientConfigurationError.createUrlParseError(\"Given url string: \" + this.urlString);\r\n        }\r\n        // Throw error if uri is insecure.\r\n        if (!components.Protocol || components.Protocol.toLowerCase() !== \"https:\") {\r\n            throw ClientConfigurationError.createInsecureAuthorityUriError(this.urlString);\r\n        }\r\n    };\r\n    /**\r\n     * Function to remove query string params from url. Returns the new url.\r\n     * @param url\r\n     * @param name\r\n     */\r\n    UrlString.prototype.urlRemoveQueryStringParameter = function (name) {\r\n        var regex = new RegExp(\"(\\\\&\" + name + \"=)[^\\&]+\");\r\n        this._urlString = this.urlString.replace(regex, \"\");\r\n        // name=value&\r\n        regex = new RegExp(\"(\" + name + \"=)[^\\&]+&\");\r\n        this._urlString = this.urlString.replace(regex, \"\");\r\n        // name=value\r\n        regex = new RegExp(\"(\" + name + \"=)[^\\&]+\");\r\n        this._urlString = this.urlString.replace(regex, \"\");\r\n        return this.urlString;\r\n    };\r\n    UrlString.removeHashFromUrl = function (url) {\r\n        return UrlString.canonicalizeUri(url.split(\"#\")[0]);\r\n    };\r\n    /**\r\n     * Given a url like https://a:b/common/d?e=f#g, and a tenantId, returns https://a:b/tenantId/d\r\n     * @param href The url\r\n     * @param tenantId The tenant id to replace\r\n     */\r\n    UrlString.prototype.replaceTenantPath = function (tenantId) {\r\n        var urlObject = this.getUrlComponents();\r\n        var pathArray = urlObject.PathSegments;\r\n        if (tenantId && (pathArray.length !== 0 && (pathArray[0] === AADAuthorityConstants.COMMON || pathArray[0] === AADAuthorityConstants.ORGANIZATIONS))) {\r\n            pathArray[0] = tenantId;\r\n        }\r\n        return UrlString.constructAuthorityUriFromObject(urlObject);\r\n    };\r\n    /**\r\n     * Returns the anchor part(#) of the URL\r\n     */\r\n    UrlString.prototype.getHash = function () {\r\n        var hashIndex1 = this.urlString.indexOf(\"#\");\r\n        var hashIndex2 = this.urlString.indexOf(\"#/\");\r\n        if (hashIndex2 > -1) {\r\n            return this.urlString.substring(hashIndex2 + 2);\r\n        }\r\n        else if (hashIndex1 > -1) {\r\n            return this.urlString.substring(hashIndex1 + 1);\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Parses out the components from a url string.\r\n     * @returns An object with the various components. Please cache this value insted of calling this multiple times on the same url.\r\n     */\r\n    UrlString.prototype.getUrlComponents = function () {\r\n        // https://gist.github.com/curtisz/11139b2cfcaef4a261e0\r\n        var regEx = RegExp(\"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\");\r\n        // If url string does not match regEx, we throw an error\r\n        var match = this.urlString.match(regEx);\r\n        if (!match) {\r\n            throw ClientConfigurationError.createUrlParseError(\"Given url string: \" + this.urlString);\r\n        }\r\n        // Url component object\r\n        var urlComponents = {\r\n            Protocol: match[1],\r\n            HostNameAndPort: match[4],\r\n            AbsolutePath: match[5]\r\n        };\r\n        var pathSegments = urlComponents.AbsolutePath.split(\"/\");\r\n        pathSegments = pathSegments.filter(function (val) { return val && val.length > 0; }); // remove empty elements\r\n        urlComponents.PathSegments = pathSegments;\r\n        return urlComponents;\r\n    };\r\n    UrlString.constructAuthorityUriFromObject = function (urlObject) {\r\n        return new UrlString(urlObject.Protocol + \"//\" + urlObject.HostNameAndPort + \"/\" + urlObject.PathSegments.join(\"/\"));\r\n    };\r\n    /**\r\n     * Returns deserialized portion of URL hash\r\n     */\r\n    UrlString.getDeserializedHash = function (hash) {\r\n        var deserializedHash = StringUtils.queryStringToObject(hash);\r\n        if (!deserializedHash) {\r\n            throw ClientAuthError.createHashNotDeserializedError(JSON.stringify(deserializedHash));\r\n        }\r\n        return deserializedHash;\r\n    };\r\n    /**\r\n     * Check if the hash of the URL string contains known properties\r\n     */\r\n    UrlString.hashContainsKnownProperties = function (url) {\r\n        if (StringUtils.isEmpty(url)) {\r\n            return false;\r\n        }\r\n        var urlString = new UrlString(url);\r\n        var parameters = UrlString.getDeserializedHash(urlString.getHash());\r\n        return !!(parameters.code ||\r\n            parameters.error_description ||\r\n            parameters.error ||\r\n            parameters.state);\r\n    };\r\n    return UrlString;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Oauth2.0 Authorization Code client\r\n */\r\nvar AuthorizationCodeClient = /** @class */ (function (_super) {\r\n    __extends$1(AuthorizationCodeClient, _super);\r\n    function AuthorizationCodeClient(configuration) {\r\n        return _super.call(this, configuration) || this;\r\n    }\r\n    /**\r\n     * Creates the URL of the authorization request letting the user input credentials and consent to the\r\n     * application. The URL target the /authorize endpoint of the authority configured in the\r\n     * application object.\r\n     *\r\n     * Once the user inputs their credentials and consents, the authority will send a response to the redirect URI\r\n     * sent in the request and should contain an authorization code, which can then be used to acquire tokens via\r\n     * acquireToken(AuthorizationCodeRequest)\r\n     * @param request\r\n     */\r\n    AuthorizationCodeClient.prototype.getAuthCodeUrl = function (request) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var queryString;\r\n            return __generator$1(this, function (_a) {\r\n                queryString = this.createAuthCodeUrlQueryString(request);\r\n                return [2 /*return*/, this.authority.authorizationEndpoint + \"?\" + queryString];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * API to acquire a token in exchange of 'authorization_code` acquired by the user in the first leg of the\r\n     * authorization_code_grant\r\n     * @param request\r\n     */\r\n    AuthorizationCodeClient.prototype.acquireToken = function (request, cachedNonce, cachedState) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var response, responseHandler, tokenResponse;\r\n            return __generator$1(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.info(\"in acquireToken call\");\r\n                        // If no code response is given, we cannot acquire a token.\r\n                        if (!request || StringUtils.isEmpty(request.code)) {\r\n                            throw ClientAuthError.createTokenRequestCannotBeMadeError();\r\n                        }\r\n                        return [4 /*yield*/, this.executeTokenRequest(this.authority, request)];\r\n                    case 1:\r\n                        response = _a.sent();\r\n                        responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger);\r\n                        // Validate response. This function throws a server error if an error is returned by the server.\r\n                        responseHandler.validateTokenResponse(response.body);\r\n                        tokenResponse = responseHandler.handleServerTokenResponse(response.body, this.authority, cachedNonce, cachedState);\r\n                        return [2 /*return*/, tokenResponse];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Handles the hash fragment response from public client code request. Returns a code response used by\r\n     * the client to exchange for a token in acquireToken.\r\n     * @param hashFragment\r\n     */\r\n    AuthorizationCodeClient.prototype.handleFragmentResponse = function (hashFragment, cachedState) {\r\n        // Handle responses.\r\n        var responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger);\r\n        // Create UrlString object to remove leading # using getHash()\r\n        var hashUrlString = new UrlString(hashFragment);\r\n        // Deserialize hash fragment response parameters.\r\n        var serverParams = UrlString.getDeserializedHash(hashUrlString.getHash());\r\n        // Get code response\r\n        responseHandler.validateServerAuthorizationCodeResponse(serverParams, cachedState, this.cryptoUtils);\r\n        return serverParams.code;\r\n    };\r\n    /**\r\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\r\n     * Default behaviour is to redirect the user to `window.location.href`.\r\n     * @param authorityUri\r\n     */\r\n    AuthorizationCodeClient.prototype.getLogoutUri = function (logoutRequest) {\r\n        // Throw error if logoutRequest is null/undefined\r\n        if (!logoutRequest) {\r\n            throw ClientConfigurationError.createEmptyLogoutRequestError();\r\n        }\r\n        if (logoutRequest.account) {\r\n            // Clear given account.\r\n            this.cacheManager.removeAccount(AccountEntity.generateAccountCacheKey(logoutRequest.account));\r\n        }\r\n        else {\r\n            // Clear all accounts and tokens\r\n            this.cacheManager.clear();\r\n        }\r\n        // Get postLogoutRedirectUri.\r\n        var postLogoutUriParam = logoutRequest.postLogoutRedirectUri ?\r\n            \"?\" + AADServerParamKeys.POST_LOGOUT_URI + \"=\" + encodeURIComponent(logoutRequest.postLogoutRedirectUri) : \"\";\r\n        var correlationIdParam = logoutRequest.correlationId ?\r\n            \"&\" + AADServerParamKeys.CLIENT_REQUEST_ID + \"=\" + encodeURIComponent(logoutRequest.correlationId) : \"\";\r\n        // Construct logout URI.\r\n        var logoutUri = \"\" + this.authority.endSessionEndpoint + postLogoutUriParam + correlationIdParam;\r\n        return logoutUri;\r\n    };\r\n    /**\r\n     * Executes POST request to token endpoint\r\n     * @param authority\r\n     * @param request\r\n     */\r\n    AuthorizationCodeClient.prototype.executeTokenRequest = function (authority, request) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var requestBody, headers;\r\n            return __generator$1(this, function (_a) {\r\n                requestBody = this.createTokenRequestBody(request);\r\n                headers = this.createDefaultTokenRequestHeaders();\r\n                return [2 /*return*/, this.executePostToTokenEndpoint(authority.tokenEndpoint, requestBody, headers)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Generates a map for all the params to be sent to the service\r\n     * @param request\r\n     */\r\n    AuthorizationCodeClient.prototype.createTokenRequestBody = function (request) {\r\n        var parameterBuilder = new RequestParameterBuilder();\r\n        parameterBuilder.addClientId(this.config.authOptions.clientId);\r\n        // validate the redirectUri (to be a non null value)\r\n        parameterBuilder.addRedirectUri(request.redirectUri);\r\n        var scopeSet = new ScopeSet(request.scopes || []);\r\n        parameterBuilder.addScopes(scopeSet);\r\n        // add code: user set, not validated\r\n        parameterBuilder.addAuthorizationCode(request.code);\r\n        // add code_verifier if passed\r\n        if (request.codeVerifier) {\r\n            parameterBuilder.addCodeVerifier(request.codeVerifier);\r\n        }\r\n        if (this.config.clientCredentials.clientSecret) {\r\n            parameterBuilder.addClientSecret(this.config.clientCredentials.clientSecret);\r\n        }\r\n        if (this.config.clientCredentials.clientAssertion) {\r\n            var clientAssertion = this.config.clientCredentials.clientAssertion;\r\n            parameterBuilder.addClientAssertion(clientAssertion.assertion);\r\n            parameterBuilder.addClientAssertionType(clientAssertion.assertionType);\r\n        }\r\n        parameterBuilder.addGrantType(GrantType.AUTHORIZATION_CODE_GRANT);\r\n        parameterBuilder.addClientInfo();\r\n        var correlationId = request.correlationId || this.config.cryptoInterface.createNewGuid();\r\n        parameterBuilder.addCorrelationId(correlationId);\r\n        return parameterBuilder.createQueryString();\r\n    };\r\n    /**\r\n     * This API validates the `AuthorizationCodeUrlRequest` and creates a URL\r\n     * @param request\r\n     */\r\n    AuthorizationCodeClient.prototype.createAuthCodeUrlQueryString = function (request) {\r\n        var parameterBuilder = new RequestParameterBuilder();\r\n        parameterBuilder.addClientId(this.config.authOptions.clientId);\r\n        var scopeSet = new ScopeSet(request.scopes || []);\r\n        if (request.extraScopesToConsent) {\r\n            scopeSet.appendScopes(request.extraScopesToConsent);\r\n        }\r\n        parameterBuilder.addScopes(scopeSet);\r\n        // validate the redirectUri (to be a non null value)\r\n        parameterBuilder.addRedirectUri(request.redirectUri);\r\n        // generate the correlationId if not set by the user and add\r\n        var correlationId = request.correlationId || this.config.cryptoInterface.createNewGuid();\r\n        parameterBuilder.addCorrelationId(correlationId);\r\n        // add response_mode. If not passed in it defaults to query.\r\n        parameterBuilder.addResponseMode(request.responseMode);\r\n        // add response_type = code\r\n        parameterBuilder.addResponseTypeCode();\r\n        // add library info parameters\r\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\r\n        // add client_info=1\r\n        parameterBuilder.addClientInfo();\r\n        if (request.codeChallenge) {\r\n            parameterBuilder.addCodeChallengeParams(request.codeChallenge, request.codeChallengeMethod);\r\n        }\r\n        if (request.prompt) {\r\n            parameterBuilder.addPrompt(request.prompt);\r\n        }\r\n        if (request.loginHint) {\r\n            parameterBuilder.addLoginHint(request.loginHint);\r\n        }\r\n        if (request.domainHint) {\r\n            parameterBuilder.addDomainHint(request.domainHint);\r\n        }\r\n        if (request.sid) {\r\n            parameterBuilder.addSid(request.sid);\r\n        }\r\n        if (request.nonce) {\r\n            parameterBuilder.addNonce(request.nonce);\r\n        }\r\n        if (request.state) {\r\n            parameterBuilder.addState(request.state);\r\n        }\r\n        if (request.claims) {\r\n            parameterBuilder.addClaims(request.claims);\r\n        }\r\n        if (request.extraQueryParameters) {\r\n            parameterBuilder.addExtraQueryParameters(request.extraQueryParameters);\r\n        }\r\n        return parameterBuilder.createQueryString();\r\n    };\r\n    return AuthorizationCodeClient;\r\n}(BaseClient));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * OAuth2.0 Device code client\r\n */\r\nvar DeviceCodeClient = /** @class */ (function (_super) {\r\n    __extends$1(DeviceCodeClient, _super);\r\n    function DeviceCodeClient(configuration) {\r\n        return _super.call(this, configuration) || this;\r\n    }\r\n    /**\r\n     * Gets device code from device code endpoint, calls back to with device code response, and\r\n     * polls token endpoint to exchange device code for tokens\r\n     * @param request\r\n     */\r\n    DeviceCodeClient.prototype.acquireToken = function (request) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var deviceCodeResponse, response, responseHandler, tokenResponse;\r\n            return __generator$1(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getDeviceCode(request)];\r\n                    case 1:\r\n                        deviceCodeResponse = _a.sent();\r\n                        request.deviceCodeCallback(deviceCodeResponse);\r\n                        return [4 /*yield*/, this.acquireTokenWithDeviceCode(request, deviceCodeResponse)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger);\r\n                        // Validate response. This function throws a server error if an error is returned by the server.\r\n                        responseHandler.validateTokenResponse(response);\r\n                        tokenResponse = responseHandler.handleServerTokenResponse(response, this.authority);\r\n                        return [2 /*return*/, tokenResponse];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates device code request and executes http GET\r\n     * @param request\r\n     */\r\n    DeviceCodeClient.prototype.getDeviceCode = function (request) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var queryString, headers;\r\n            return __generator$1(this, function (_a) {\r\n                queryString = this.createQueryString(request);\r\n                headers = this.createDefaultLibraryHeaders();\r\n                return [2 /*return*/, this.executePostRequestToDeviceCodeEndpoint(this.authority.deviceCodeEndpoint, queryString, headers)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Executes POST request to device code endpoint\r\n     * @param deviceCodeEndpoint\r\n     * @param queryString\r\n     * @param headers\r\n     */\r\n    DeviceCodeClient.prototype.executePostRequestToDeviceCodeEndpoint = function (deviceCodeEndpoint, queryString, headers) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var _a, userCode, deviceCode, verificationUri, expiresIn, interval, message;\r\n            return __generator$1(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, this.networkClient.sendPostRequestAsync(deviceCodeEndpoint, {\r\n                            body: queryString,\r\n                            headers: headers\r\n                        })];\r\n                    case 1:\r\n                        _a = (_b.sent()).body, userCode = _a.user_code, deviceCode = _a.device_code, verificationUri = _a.verification_uri, expiresIn = _a.expires_in, interval = _a.interval, message = _a.message;\r\n                        return [2 /*return*/, {\r\n                                userCode: userCode,\r\n                                deviceCode: deviceCode,\r\n                                verificationUri: verificationUri,\r\n                                expiresIn: expiresIn,\r\n                                interval: interval,\r\n                                message: message\r\n                            }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Create device code endpoint query parameters and returns string\r\n     */\r\n    DeviceCodeClient.prototype.createQueryString = function (request) {\r\n        var parameterBuilder = new RequestParameterBuilder();\r\n        var scopeSet = new ScopeSet(request.scopes || []);\r\n        parameterBuilder.addScopes(scopeSet);\r\n        parameterBuilder.addClientId(this.config.authOptions.clientId);\r\n        return parameterBuilder.createQueryString();\r\n    };\r\n    /**\r\n     * Creates token request with device code response and polls token endpoint at interval set by the device code\r\n     * response\r\n     * @param request\r\n     * @param deviceCodeResponse\r\n     */\r\n    DeviceCodeClient.prototype.acquireTokenWithDeviceCode = function (request, deviceCodeResponse) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var requestBody, headers, deviceCodeExpirationTime, pollingIntervalMilli;\r\n            var _this = this;\r\n            return __generator$1(this, function (_a) {\r\n                requestBody = this.createTokenRequestBody(request, deviceCodeResponse);\r\n                headers = this.createDefaultTokenRequestHeaders();\r\n                deviceCodeExpirationTime = TimeUtils.nowSeconds() + deviceCodeResponse.expiresIn;\r\n                pollingIntervalMilli = deviceCodeResponse.interval * 1000;\r\n                // Poll token endpoint while (device code is not expired AND operation has not been cancelled by\r\n                // setting CancellationToken.cancel = true). POST request is sent at interval set by pollingIntervalMilli\r\n                return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                        var intervalId = setInterval(function () { return __awaiter$1(_this, void 0, void 0, function () {\r\n                            var response, error_1;\r\n                            return __generator$1(this, function (_a) {\r\n                                switch (_a.label) {\r\n                                    case 0:\r\n                                        _a.trys.push([0, 5, , 6]);\r\n                                        if (!request.cancel) return [3 /*break*/, 1];\r\n                                        this.logger.error(\"Token request cancelled by setting DeviceCodeRequest.cancel = true\");\r\n                                        clearInterval(intervalId);\r\n                                        reject(ClientAuthError.createDeviceCodeCancelledError());\r\n                                        return [3 /*break*/, 4];\r\n                                    case 1:\r\n                                        if (!(TimeUtils.nowSeconds() > deviceCodeExpirationTime)) return [3 /*break*/, 2];\r\n                                        this.logger.error(\"Device code expired. Expiration time of device code was \" + deviceCodeExpirationTime);\r\n                                        clearInterval(intervalId);\r\n                                        reject(ClientAuthError.createDeviceCodeExpiredError());\r\n                                        return [3 /*break*/, 4];\r\n                                    case 2: return [4 /*yield*/, this.executePostToTokenEndpoint(this.authority.tokenEndpoint, requestBody, headers)];\r\n                                    case 3:\r\n                                        response = _a.sent();\r\n                                        if (response.body && response.body.error == Constants.AUTHORIZATION_PENDING) {\r\n                                            // user authorization is pending. Sleep for polling interval and try again\r\n                                            this.logger.info(response.body.error_description);\r\n                                        }\r\n                                        else {\r\n                                            clearInterval(intervalId);\r\n                                            resolve(response.body);\r\n                                        }\r\n                                        _a.label = 4;\r\n                                    case 4: return [3 /*break*/, 6];\r\n                                    case 5:\r\n                                        error_1 = _a.sent();\r\n                                        clearInterval(intervalId);\r\n                                        reject(error_1);\r\n                                        return [3 /*break*/, 6];\r\n                                    case 6: return [2 /*return*/];\r\n                                }\r\n                            });\r\n                        }); }, pollingIntervalMilli);\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates query parameters and converts to string.\r\n     * @param request\r\n     * @param deviceCodeResponse\r\n     */\r\n    DeviceCodeClient.prototype.createTokenRequestBody = function (request, deviceCodeResponse) {\r\n        var requestParameters = new RequestParameterBuilder();\r\n        var scopeSet = new ScopeSet(request.scopes || []);\r\n        requestParameters.addScopes(scopeSet);\r\n        requestParameters.addClientId(this.config.authOptions.clientId);\r\n        requestParameters.addGrantType(GrantType.DEVICE_CODE_GRANT);\r\n        requestParameters.addDeviceCode(deviceCodeResponse.deviceCode);\r\n        var correlationId = request.correlationId || this.config.cryptoInterface.createNewGuid();\r\n        requestParameters.addCorrelationId(correlationId);\r\n        requestParameters.addClientInfo();\r\n        return requestParameters.createQueryString();\r\n    };\r\n    return DeviceCodeClient;\r\n}(BaseClient));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * OAuth2.0 refresh token client\r\n */\r\nvar RefreshTokenClient = /** @class */ (function (_super) {\r\n    __extends$1(RefreshTokenClient, _super);\r\n    function RefreshTokenClient(configuration) {\r\n        return _super.call(this, configuration) || this;\r\n    }\r\n    RefreshTokenClient.prototype.acquireToken = function (request) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var response, responseHandler, tokenResponse;\r\n            return __generator$1(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.executeTokenRequest(request, this.authority)];\r\n                    case 1:\r\n                        response = _a.sent();\r\n                        responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger);\r\n                        responseHandler.validateTokenResponse(response.body);\r\n                        tokenResponse = responseHandler.handleServerTokenResponse(response.body, this.authority);\r\n                        return [2 /*return*/, tokenResponse];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RefreshTokenClient.prototype.executeTokenRequest = function (request, authority) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var requestBody, headers;\r\n            return __generator$1(this, function (_a) {\r\n                requestBody = this.createTokenRequestBody(request);\r\n                headers = this.createDefaultTokenRequestHeaders();\r\n                return [2 /*return*/, this.executePostToTokenEndpoint(authority.tokenEndpoint, requestBody, headers)];\r\n            });\r\n        });\r\n    };\r\n    RefreshTokenClient.prototype.createTokenRequestBody = function (request) {\r\n        var parameterBuilder = new RequestParameterBuilder();\r\n        parameterBuilder.addClientId(this.config.authOptions.clientId);\r\n        var scopeSet = new ScopeSet(request.scopes || []);\r\n        parameterBuilder.addScopes(scopeSet);\r\n        parameterBuilder.addGrantType(GrantType.REFRESH_TOKEN_GRANT);\r\n        parameterBuilder.addClientInfo();\r\n        var correlationId = request.correlationId || this.config.cryptoInterface.createNewGuid();\r\n        parameterBuilder.addCorrelationId(correlationId);\r\n        parameterBuilder.addRefreshToken(request.refreshToken);\r\n        if (this.config.clientCredentials.clientSecret) {\r\n            parameterBuilder.addClientSecret(this.config.clientCredentials.clientSecret);\r\n        }\r\n        if (this.config.clientCredentials.clientAssertion) {\r\n            var clientAssertion = this.config.clientCredentials.clientAssertion;\r\n            parameterBuilder.addClientAssertion(clientAssertion.assertion);\r\n            parameterBuilder.addClientAssertionType(clientAssertion.assertionType);\r\n        }\r\n        return parameterBuilder.createQueryString();\r\n    };\r\n    return RefreshTokenClient;\r\n}(BaseClient));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar SilentFlowClient = /** @class */ (function (_super) {\r\n    __extends$1(SilentFlowClient, _super);\r\n    function SilentFlowClient(configuration) {\r\n        return _super.call(this, configuration) || this;\r\n    }\r\n    /**\r\n     * Retrieves a token from cache if it is still valid, or uses the cached refresh token to renew\r\n     * the given token and returns the renewed token\r\n     * @param request\r\n     */\r\n    SilentFlowClient.prototype.acquireToken = function (request) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var requestScopes, accountKey, cachedAccount, homeAccountId, environment, cachedAccessToken, cachedRefreshToken, refreshTokenClient, refreshTokenRequest, cachedIdToken, idTokenObj;\r\n            return __generator$1(this, function (_a) {\r\n                // Cannot renew token if no request object is given.\r\n                if (!request) {\r\n                    throw ClientConfigurationError.createEmptyTokenRequestError();\r\n                }\r\n                // We currently do not support silent flow for account === null use cases; This will be revisited for confidential flow usecases\r\n                if (!request.account) {\r\n                    throw ClientAuthError.createNoAccountInSilentRequestError();\r\n                }\r\n                requestScopes = new ScopeSet(request.scopes || []);\r\n                accountKey = AccountEntity.generateAccountCacheKey(request.account);\r\n                cachedAccount = this.cacheManager.getAccount(accountKey);\r\n                homeAccountId = cachedAccount.homeAccountId;\r\n                environment = cachedAccount.environment;\r\n                cachedAccessToken = this.readAccessTokenFromCache(homeAccountId, environment, requestScopes, cachedAccount.realm);\r\n                cachedRefreshToken = this.readRefreshTokenFromCache(homeAccountId, environment);\r\n                // Check if refresh is forced, or if tokens are expired. If neither are true, return a token response with the found token entry.\r\n                if (request.forceRefresh || !cachedAccessToken || this.isTokenExpired(cachedAccessToken.expiresOn)) {\r\n                    // no refresh Token\r\n                    if (!cachedRefreshToken) {\r\n                        throw ClientAuthError.createNoTokensFoundError();\r\n                    }\r\n                    refreshTokenClient = new RefreshTokenClient(this.config);\r\n                    refreshTokenRequest = __assign$1(__assign$1({}, request), { refreshToken: cachedRefreshToken.secret });\r\n                    return [2 /*return*/, refreshTokenClient.acquireToken(refreshTokenRequest)];\r\n                }\r\n                // Return tokens from cache\r\n                this.config.serverTelemetryManager.incrementCacheHits();\r\n                cachedIdToken = this.readIdTokenFromCache(homeAccountId, environment, cachedAccount.realm);\r\n                idTokenObj = new IdToken(cachedIdToken.secret, this.config.cryptoInterface);\r\n                return [2 /*return*/, ResponseHandler.generateAuthenticationResult({\r\n                        account: cachedAccount,\r\n                        accessToken: cachedAccessToken,\r\n                        idToken: cachedIdToken,\r\n                        refreshToken: cachedRefreshToken\r\n                    }, idTokenObj, true)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * fetches idToken from cache if present\r\n     * @param request\r\n     */\r\n    SilentFlowClient.prototype.readIdTokenFromCache = function (homeAccountId, environment, inputRealm) {\r\n        var idTokenKey = CredentialEntity.generateCredentialCacheKey(homeAccountId, environment, CredentialType.ID_TOKEN, this.config.authOptions.clientId, inputRealm);\r\n        return this.cacheManager.getCredential(idTokenKey);\r\n    };\r\n    /**\r\n     * fetches accessToken from cache if present\r\n     * @param request\r\n     * @param scopes\r\n     */\r\n    SilentFlowClient.prototype.readAccessTokenFromCache = function (homeAccountId, environment, scopes, inputRealm) {\r\n        var accessTokenFilter = {\r\n            homeAccountId: homeAccountId,\r\n            environment: environment,\r\n            credentialType: CredentialType.ACCESS_TOKEN,\r\n            clientId: this.config.authOptions.clientId,\r\n            realm: inputRealm,\r\n            target: scopes.printScopesLowerCase()\r\n        };\r\n        var credentialCache = this.cacheManager.getCredentialsFilteredBy(accessTokenFilter);\r\n        var accessTokens = Object.keys(credentialCache.accessTokens).map(function (key) { return credentialCache.accessTokens[key]; });\r\n        if (accessTokens.length > 1) ;\r\n        else if (accessTokens.length < 1) {\r\n            return null;\r\n        }\r\n        return accessTokens[0];\r\n    };\r\n    /**\r\n     * fetches refreshToken from cache if present\r\n     * @param request\r\n     */\r\n    SilentFlowClient.prototype.readRefreshTokenFromCache = function (homeAccountId, environment) {\r\n        var refreshTokenKey = CredentialEntity.generateCredentialCacheKey(homeAccountId, environment, CredentialType.REFRESH_TOKEN, this.config.authOptions.clientId);\r\n        return this.cacheManager.getCredential(refreshTokenKey);\r\n    };\r\n    /**\r\n     * check if a token is expired based on given UTC time in seconds.\r\n     * @param expiresOn\r\n     */\r\n    SilentFlowClient.prototype.isTokenExpired = function (expiresOn) {\r\n        // check for access token expiry\r\n        var expirationSec = Number(expiresOn) || 0;\r\n        var offsetCurrentTimeSec = TimeUtils.nowSeconds() + this.config.systemOptions.tokenRenewalOffsetSeconds;\r\n        // If current time + offset is greater than token expiration time, then token is expired.\r\n        return (offsetCurrentTimeSec > expirationSec);\r\n    };\r\n    return SilentFlowClient;\r\n}(BaseClient));\n\n/**\r\n * The authority class validates the authority URIs used by the user, and retrieves the OpenID Configuration Data from the\r\n * endpoint. It will store the pertinent config data in this object for use during token calls.\r\n */\r\nvar Authority = /** @class */ (function () {\r\n    function Authority(authority, networkInterface) {\r\n        this.canonicalAuthority = authority;\r\n        this._canonicalAuthority.validateAsUri();\r\n        this.networkInterface = networkInterface;\r\n    }\r\n    Object.defineProperty(Authority.prototype, \"authorityType\", {\r\n        // See above for AuthorityType\r\n        get: function () {\r\n            var pathSegments = this.canonicalAuthorityUrlComponents.PathSegments;\r\n            if (pathSegments.length && pathSegments[0].toLowerCase() === Constants.ADFS) {\r\n                return AuthorityType.Adfs;\r\n            }\r\n            return AuthorityType.Default;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"canonicalAuthority\", {\r\n        /**\r\n         * A URL that is the authority set by the developer\r\n         */\r\n        get: function () {\r\n            return this._canonicalAuthority.urlString;\r\n        },\r\n        /**\r\n         * Sets canonical authority.\r\n         */\r\n        set: function (url) {\r\n            this._canonicalAuthority = new UrlString(url);\r\n            this._canonicalAuthority.validateAsUri();\r\n            this._canonicalAuthorityUrlComponents = null;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"canonicalAuthorityUrlComponents\", {\r\n        /**\r\n         * Get authority components.\r\n         */\r\n        get: function () {\r\n            if (!this._canonicalAuthorityUrlComponents) {\r\n                this._canonicalAuthorityUrlComponents = this._canonicalAuthority.getUrlComponents();\r\n            }\r\n            return this._canonicalAuthorityUrlComponents;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"tenant\", {\r\n        /**\r\n         * Get tenant for authority.\r\n         */\r\n        get: function () {\r\n            return this.canonicalAuthorityUrlComponents.PathSegments[0];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"authorizationEndpoint\", {\r\n        /**\r\n         * OAuth /authorize endpoint for requests\r\n         */\r\n        get: function () {\r\n            if (this.discoveryComplete()) {\r\n                return this.replaceTenant(this.tenantDiscoveryResponse.authorization_endpoint);\r\n            }\r\n            else {\r\n                throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"tokenEndpoint\", {\r\n        /**\r\n         * OAuth /token endpoint for requests\r\n         */\r\n        get: function () {\r\n            if (this.discoveryComplete()) {\r\n                return this.replaceTenant(this.tenantDiscoveryResponse.token_endpoint);\r\n            }\r\n            else {\r\n                throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"deviceCodeEndpoint\", {\r\n        get: function () {\r\n            if (this.discoveryComplete()) {\r\n                return this.tenantDiscoveryResponse.token_endpoint.replace(\"/token\", \"/devicecode\");\r\n            }\r\n            else {\r\n                throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"endSessionEndpoint\", {\r\n        /**\r\n         * OAuth logout endpoint for requests\r\n         */\r\n        get: function () {\r\n            if (this.discoveryComplete()) {\r\n                return this.replaceTenant(this.tenantDiscoveryResponse.end_session_endpoint);\r\n            }\r\n            else {\r\n                throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"selfSignedJwtAudience\", {\r\n        /**\r\n         * OAuth issuer for requests\r\n         */\r\n        get: function () {\r\n            if (this.discoveryComplete()) {\r\n                return this.replaceTenant(this.tenantDiscoveryResponse.issuer);\r\n            }\r\n            else {\r\n                throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Replaces tenant in url path with current tenant. Defaults to common.\r\n     * @param urlString\r\n     */\r\n    Authority.prototype.replaceTenant = function (urlString) {\r\n        return urlString.replace(/{tenant}|{tenantid}/g, this.tenant);\r\n    };\r\n    Object.defineProperty(Authority.prototype, \"defaultOpenIdConfigurationEndpoint\", {\r\n        /**\r\n         * The default open id configuration endpoint for any canonical authority.\r\n         */\r\n        get: function () {\r\n            if (this.authorityType === AuthorityType.Adfs) {\r\n                return this.canonicalAuthority + \".well-known/openid-configuration\";\r\n            }\r\n            return this.canonicalAuthority + \"v2.0/.well-known/openid-configuration\";\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Boolean that returns whethr or not tenant discovery has been completed.\r\n     */\r\n    Authority.prototype.discoveryComplete = function () {\r\n        return !!this.tenantDiscoveryResponse;\r\n    };\r\n    /**\r\n     * Gets OAuth endpoints from the given OpenID configuration endpoint.\r\n     * @param openIdConfigurationEndpoint\r\n     */\r\n    Authority.prototype.discoverEndpoints = function (openIdConfigurationEndpoint) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            return __generator$1(this, function (_a) {\r\n                return [2 /*return*/, this.networkInterface.sendGetRequestAsync(openIdConfigurationEndpoint)];\r\n            });\r\n        });\r\n    };\r\n    Object.defineProperty(Authority.prototype, \"aadInstanceDiscoveryEndpointUrl\", {\r\n        // Default AAD Instance Discovery Endpoint\r\n        get: function () {\r\n            return \"\" + Constants.AAD_INSTANCE_DISCOVERY_ENDPT + this.canonicalAuthority + \"oauth2/v2.0/authorize\";\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Authority.prototype.validateAndSetPreferredNetwork = function () {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var host, preferredNetwork;\r\n            return __generator$1(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        host = this.canonicalAuthorityUrlComponents.HostNameAndPort;\r\n                        if (!(TrustedAuthority.getTrustedHostList().length === 0)) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, TrustedAuthority.setTrustedAuthoritiesFromNetwork(this._canonicalAuthority, this.networkInterface)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        if (!TrustedAuthority.IsInTrustedHostList(host)) {\r\n                            throw ClientConfigurationError.createUntrustedAuthorityError();\r\n                        }\r\n                        preferredNetwork = TrustedAuthority.getCloudDiscoveryMetadata(host).preferred_network;\r\n                        if (host !== preferredNetwork) {\r\n                            this.canonicalAuthority = this.canonicalAuthority.replace(host, preferredNetwork);\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Perform endpoint discovery to discover the /authorize, /token and logout endpoints.\r\n     */\r\n    Authority.prototype.resolveEndpointsAsync = function () {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var openIdConfigEndpoint, response;\r\n            return __generator$1(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.validateAndSetPreferredNetwork()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        openIdConfigEndpoint = this.defaultOpenIdConfigurationEndpoint;\r\n                        return [4 /*yield*/, this.discoverEndpoints(openIdConfigEndpoint)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        this.tenantDiscoveryResponse = response.body;\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return Authority;\r\n}());\n\nvar AuthorityFactory = /** @class */ (function () {\r\n    function AuthorityFactory() {\r\n    }\r\n    /**\r\n     * Create an authority object of the correct type based on the url\r\n     * Performs basic authority validation - checks to see if the authority is of a valid type (i.e. aad, b2c, adfs)\r\n     *\r\n     * Also performs endpoint discovery.\r\n     *\r\n     * @param authorityUri\r\n     * @param networkClient\r\n     */\r\n    AuthorityFactory.createDiscoveredInstance = function (authorityUri, networkClient) {\r\n        return __awaiter$1(this, void 0, void 0, function () {\r\n            var acquireTokenAuthority, e_1;\r\n            return __generator$1(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        acquireTokenAuthority = AuthorityFactory.createInstance(authorityUri, networkClient);\r\n                        if (acquireTokenAuthority.discoveryComplete()) {\r\n                            return [2 /*return*/, acquireTokenAuthority];\r\n                        }\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, acquireTokenAuthority.resolveEndpointsAsync()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/, acquireTokenAuthority];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        throw ClientAuthError.createEndpointDiscoveryIncompleteError(e_1);\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Create an authority object of the correct type based on the url\r\n     * Performs basic authority validation - checks to see if the authority is of a valid type (i.e. aad, b2c, adfs)\r\n     *\r\n     * Does not perform endpoint discovery.\r\n     *\r\n     * @param authorityUrl\r\n     * @param networkInterface\r\n     */\r\n    AuthorityFactory.createInstance = function (authorityUrl, networkInterface) {\r\n        // Throw error if authority url is empty\r\n        if (StringUtils.isEmpty(authorityUrl)) {\r\n            throw ClientConfigurationError.createUrlEmptyError();\r\n        }\r\n        return new Authority(authorityUrl, networkInterface);\r\n    };\r\n    return AuthorityFactory;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar ServerTelemetryManager = /** @class */ (function () {\r\n    function ServerTelemetryManager(telemetryRequest, cacheManager) {\r\n        this.cacheManager = cacheManager;\r\n        this.apiId = telemetryRequest.apiId;\r\n        this.correlationId = telemetryRequest.correlationId;\r\n        this.forceRefresh = telemetryRequest.forceRefresh || false;\r\n        this.telemetryCacheKey = SERVER_TELEM_CONSTANTS.CACHE_KEY + Separators.CACHE_KEY_SEPARATOR + telemetryRequest.clientId;\r\n    }\r\n    // API to add MSER Telemetry to request\r\n    ServerTelemetryManager.prototype.generateCurrentRequestHeaderValue = function () {\r\n        var forceRefreshInt = this.forceRefresh ? 1 : 0;\r\n        var request = \"\" + this.apiId + SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR + forceRefreshInt;\r\n        var platformFields = \"\"; // TODO: Determine what we want to include\r\n        return [SERVER_TELEM_CONSTANTS.SCHEMA_VERSION, request, platformFields].join(SERVER_TELEM_CONSTANTS.CATEGORY_SEPARATOR);\r\n    };\r\n    // API to add MSER Telemetry for the last failed request\r\n    ServerTelemetryManager.prototype.generateLastRequestHeaderValue = function () {\r\n        var lastRequests = this.getLastRequests();\r\n        var failedRequests = lastRequests.failedRequests.join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\r\n        var errors = lastRequests.errors.join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\r\n        var platformFields = lastRequests.errorCount;\r\n        return [SERVER_TELEM_CONSTANTS.SCHEMA_VERSION, lastRequests.cacheHits, failedRequests, errors, platformFields].join(SERVER_TELEM_CONSTANTS.CATEGORY_SEPARATOR);\r\n    };\r\n    // API to cache token failures for MSER data capture\r\n    ServerTelemetryManager.prototype.cacheFailedRequest = function (error) {\r\n        var lastRequests = this.getLastRequests();\r\n        lastRequests.failedRequests.push(this.apiId, this.correlationId);\r\n        lastRequests.errors.push(error.errorCode);\r\n        lastRequests.errorCount += 1;\r\n        if (lastRequests.errors.length > SERVER_TELEM_CONSTANTS.FAILURE_LIMIT) {\r\n            // Prevent request headers from becoming too large due to excessive failures\r\n            lastRequests.failedRequests.shift(); // Remove apiId\r\n            lastRequests.failedRequests.shift(); // Remove correlationId\r\n            lastRequests.errors.shift();\r\n        }\r\n        this.cacheManager.setItem(this.telemetryCacheKey, lastRequests, CacheSchemaType.TELEMETRY);\r\n        return;\r\n    };\r\n    ServerTelemetryManager.prototype.incrementCacheHits = function () {\r\n        var lastRequests = this.getLastRequests();\r\n        lastRequests.cacheHits += 1;\r\n        this.cacheManager.setItem(this.telemetryCacheKey, lastRequests, CacheSchemaType.TELEMETRY);\r\n        return lastRequests.cacheHits;\r\n    };\r\n    ServerTelemetryManager.prototype.getLastRequests = function () {\r\n        var initialValue = {\r\n            failedRequests: [],\r\n            errors: [],\r\n            errorCount: 0,\r\n            cacheHits: 0\r\n        };\r\n        var lastRequests = this.cacheManager.getItem(this.telemetryCacheKey, CacheSchemaType.TELEMETRY);\r\n        return lastRequests || initialValue;\r\n    };\r\n    ServerTelemetryManager.prototype.clearTelemetryCache = function () {\r\n        this.cacheManager.removeItem(this.telemetryCacheKey);\r\n    };\r\n    return ServerTelemetryManager;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Constants\r\n */\r\nvar BrowserConstants = {\r\n    // Local storage constant string\r\n    CACHE_LOCATION_LOCAL: \"localStorage\",\r\n    // Session storage constant string\r\n    CACHE_LOCATION_SESSION: \"sessionStorage\",\r\n    // Interaction status key (only used for browsers)\r\n    INTERACTION_STATUS_KEY: \"interaction.status\",\r\n    // Interaction in progress cache value\r\n    INTERACTION_IN_PROGRESS_VALUE: \"interaction_in_progress\",\r\n    // Invalid grant error code\r\n    INVALID_GRANT_ERROR: \"invalid_grant\",\r\n    // Default popup window width\r\n    POPUP_WIDTH: 483,\r\n    // Default popup window height\r\n    POPUP_HEIGHT: 600,\r\n    // Default popup monitor poll interval in milliseconds\r\n    POLL_INTERVAL_MS: 50,\r\n    // msal-browser SKU\r\n    MSAL_SKU: \"msal.js.browser\",\r\n};\r\n/**\r\n * HTTP Request types supported by MSAL.\r\n */\r\nvar HTTP_REQUEST_TYPE;\r\n(function (HTTP_REQUEST_TYPE) {\r\n    HTTP_REQUEST_TYPE[\"GET\"] = \"GET\";\r\n    HTTP_REQUEST_TYPE[\"POST\"] = \"POST\";\r\n})(HTTP_REQUEST_TYPE || (HTTP_REQUEST_TYPE = {}));\r\n/**\r\n * Temporary cache keys for MSAL, deleted after any request.\r\n */\r\nvar TemporaryCacheKeys;\r\n(function (TemporaryCacheKeys) {\r\n    TemporaryCacheKeys[\"AUTHORITY\"] = \"authority\";\r\n    TemporaryCacheKeys[\"ACQUIRE_TOKEN_ACCOUNT\"] = \"acquireToken.account\";\r\n    TemporaryCacheKeys[\"SESSION_STATE\"] = \"session.state\";\r\n    TemporaryCacheKeys[\"REQUEST_STATE\"] = \"request.state\";\r\n    TemporaryCacheKeys[\"NONCE_IDTOKEN\"] = \"nonce.id_token\";\r\n    TemporaryCacheKeys[\"ORIGIN_URI\"] = \"request.origin\";\r\n    TemporaryCacheKeys[\"RENEW_STATUS\"] = \"token.renew.status\";\r\n    TemporaryCacheKeys[\"URL_HASH\"] = \"urlHash\";\r\n    TemporaryCacheKeys[\"REQUEST_PARAMS\"] = \"request.params\";\r\n    TemporaryCacheKeys[\"SCOPES\"] = \"scopes\";\r\n})(TemporaryCacheKeys || (TemporaryCacheKeys = {}));\r\n/**\r\n * API Codes for Telemetry purposes.\r\n * Before adding a new code you must claim it in the MSAL Telemetry tracker as these number spaces are shared across all MSALs\r\n * 0-99 Silent Flow\r\n * 800-899 Auth Code Flow\r\n */\r\nvar ApiId;\r\n(function (ApiId) {\r\n    ApiId[ApiId[\"acquireTokenRedirect\"] = 861] = \"acquireTokenRedirect\";\r\n    ApiId[ApiId[\"acquireTokenPopup\"] = 862] = \"acquireTokenPopup\";\r\n    ApiId[ApiId[\"ssoSilent\"] = 863] = \"ssoSilent\";\r\n    ApiId[ApiId[\"acquireTokenSilent_authCode\"] = 864] = \"acquireTokenSilent_authCode\";\r\n    ApiId[ApiId[\"handleRedirectPromise\"] = 865] = \"handleRedirectPromise\";\r\n    ApiId[ApiId[\"acquireTokenSilent_silentFlow\"] = 61] = \"acquireTokenSilent_silentFlow\";\r\n})(ApiId || (ApiId = {}));\r\n/*\r\n * Interaction type of the API - used for state and telemetry\r\n */\r\nvar InteractionType;\r\n(function (InteractionType) {\r\n    InteractionType[\"REDIRECT\"] = \"redirect\";\r\n    InteractionType[\"POPUP\"] = \"popup\";\r\n    InteractionType[\"SILENT\"] = \"silent\";\r\n})(InteractionType || (InteractionType = {}));\r\nvar DEFAULT_REQUEST = {\r\n    scopes: [Constants.OPENID_SCOPE, Constants.PROFILE_SCOPE]\r\n};\n\n/**\r\n * This class implements the Fetch API for GET and POST requests. See more here: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\r\n */\r\nvar FetchClient = /** @class */ (function () {\r\n    function FetchClient() {\r\n    }\r\n    /**\r\n     * Fetch Client for REST endpoints - Get request\r\n     * @param url\r\n     * @param headers\r\n     * @param body\r\n     */\r\n    FetchClient.prototype.sendGetRequestAsync = function (url, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, fetch(url, {\r\n                            method: HTTP_REQUEST_TYPE.GET,\r\n                            headers: this.getFetchHeaders(options)\r\n                        })];\r\n                    case 1:\r\n                        response = _b.sent();\r\n                        _a = {\r\n                            headers: this.getHeaderMap(response.headers)\r\n                        };\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 2: return [2 /*return*/, (_a.body = (_b.sent()),\r\n                            _a.status = response.status,\r\n                            _a)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Fetch Client for REST endpoints - Post request\r\n     * @param url\r\n     * @param headers\r\n     * @param body\r\n     */\r\n    FetchClient.prototype.sendPostRequestAsync = function (url, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var reqBody, response, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        reqBody = (options && options.body) || \"\";\r\n                        return [4 /*yield*/, fetch(url, {\r\n                                method: HTTP_REQUEST_TYPE.POST,\r\n                                headers: this.getFetchHeaders(options),\r\n                                body: reqBody\r\n                            })];\r\n                    case 1:\r\n                        response = _b.sent();\r\n                        _a = {\r\n                            headers: this.getHeaderMap(response.headers)\r\n                        };\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 2: return [2 /*return*/, (_a.body = (_b.sent()),\r\n                            _a.status = response.status,\r\n                            _a)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Get Fetch API Headers object from string map\r\n     * @param inputHeaders\r\n     */\r\n    FetchClient.prototype.getFetchHeaders = function (options) {\r\n        var headers = new Headers();\r\n        if (!(options && options.headers)) {\r\n            return headers;\r\n        }\r\n        options.headers.forEach(function (value, key) {\r\n            headers.append(key, value);\r\n        });\r\n        return headers;\r\n    };\r\n    FetchClient.prototype.getHeaderMap = function (headers) {\r\n        var headerMap = new Map();\r\n        headers.forEach(function (value, key) {\r\n            headerMap.set(key, value);\r\n        });\r\n        return headerMap;\r\n    };\r\n    return FetchClient;\r\n}());\n\n/**\r\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nvar BrowserAuthErrorMessage = {\r\n    noWindowObjectError: {\r\n        code: \"no_window_object\",\r\n        desc: \"No window object detected.\"\r\n    },\r\n    pkceNotGenerated: {\r\n        code: \"pkce_not_created\",\r\n        desc: \"The PKCE code challenge and verifier could not be generated.\"\r\n    },\r\n    cryptoDoesNotExist: {\r\n        code: \"crypto_nonexistent\",\r\n        desc: \"The crypto object or function is not available.\"\r\n    },\r\n    httpMethodNotImplementedError: {\r\n        code: \"http_method_not_implemented\",\r\n        desc: \"The HTTP method given has not been implemented in this library.\"\r\n    },\r\n    emptyNavigateUriError: {\r\n        code: \"empty_navigate_uri\",\r\n        desc: \"Navigation URI is empty. Please check stack trace for more info.\"\r\n    },\r\n    hashEmptyError: {\r\n        code: \"hash_empty_error\",\r\n        desc: \"Hash value cannot be processed because it is empty.\"\r\n    },\r\n    interactionInProgress: {\r\n        code: \"interaction_in_progress\",\r\n        desc: \"Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.\"\r\n    },\r\n    popUpWindowError: {\r\n        code: \"popup_window_error\",\r\n        desc: \"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.\"\r\n    },\r\n    emptyWindowError: {\r\n        code: \"empty_window_error\",\r\n        desc: \"window.open returned null or undefined window object.\"\r\n    },\r\n    userCancelledError: {\r\n        code: \"user_cancelled\",\r\n        desc: \"User cancelled the flow.\"\r\n    },\r\n    monitorWindowTimeoutError: {\r\n        code: \"monitor_window_timeout\",\r\n        desc: \"Token acquisition in popup failed due to timeout.\"\r\n    },\r\n    redirectInIframeError: {\r\n        code: \"redirect_in_iframe\",\r\n        desc: \"Code flow is not supported inside an iframe. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.\"\r\n    },\r\n    blockTokenRequestsInHiddenIframeError: {\r\n        code: \"block_iframe_reload\",\r\n        desc: \"Request was blocked inside an iframe because MSAL detected an authentication response. Please ensure monitorWindowForHash was called.\"\r\n    },\r\n    iframeClosedPrematurelyError: {\r\n        code: \"iframe_closed_prematurely\",\r\n        desc: \"The iframe being monitored was closed prematurely.\"\r\n    },\r\n    silentSSOInsufficientInfoError: {\r\n        code: \"silent_sso_error\",\r\n        desc: \"Silent SSO could not be completed - insufficient information was provided. Please provide either a loginHint or sid.\"\r\n    },\r\n    silentPromptValueError: {\r\n        code: \"silent_prompt_value_error\",\r\n        desc: \"The value given for the prompt value is not valid for silent requests - must be set to 'none'.\"\r\n    },\r\n    tokenRequestCacheError: {\r\n        code: \"token_request_cache_error\",\r\n        desc: \"The token request could not be fetched from the cache correctly.\"\r\n    },\r\n    invalidCacheType: {\r\n        code: \"invalid_cache_type\",\r\n        desc: \"Invalid cache type\"\r\n    }\r\n};\r\n/**\r\n * Browser library error class thrown by the MSAL.js library for SPAs\r\n */\r\nvar BrowserAuthError = /** @class */ (function (_super) {\r\n    __extends(BrowserAuthError, _super);\r\n    function BrowserAuthError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        Object.setPrototypeOf(_this, BrowserAuthError.prototype);\r\n        _this.name = \"BrowserAuthError\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates error thrown when no window object can be found.\r\n     */\r\n    BrowserAuthError.createNoWindowObjectError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.noWindowObjectError.code, BrowserAuthErrorMessage.noWindowObjectError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when PKCE is not implemented.\r\n     * @param errDetail\r\n     */\r\n    BrowserAuthError.createPkceNotGeneratedError = function (errDetail) {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.pkceNotGenerated.code, BrowserAuthErrorMessage.pkceNotGenerated.desc + \" Detail:\" + errDetail);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the crypto object is unavailable.\r\n     * @param errDetail\r\n     */\r\n    BrowserAuthError.createCryptoNotAvailableError = function (errDetail) {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.cryptoDoesNotExist.code, BrowserAuthErrorMessage.cryptoDoesNotExist.desc + \" Detail:\" + errDetail);\r\n    };\r\n    /**\r\n     * Creates an error thrown when an HTTP method hasn't been implemented by the browser class.\r\n     * @param method\r\n     */\r\n    BrowserAuthError.createHttpMethodNotImplementedError = function (method) {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.httpMethodNotImplementedError.code, BrowserAuthErrorMessage.httpMethodNotImplementedError.desc + \" Given Method: \" + method);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the navigation URI is empty.\r\n     */\r\n    BrowserAuthError.createEmptyNavigationUriError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.emptyNavigateUriError.code, BrowserAuthErrorMessage.emptyNavigateUriError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the hash string value is unexpectedly empty.\r\n     * @param hashValue\r\n     */\r\n    BrowserAuthError.createEmptyHashError = function (hashValue) {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.hashEmptyError.code, BrowserAuthErrorMessage.hashEmptyError.desc + \" Given Url: \" + hashValue);\r\n    };\r\n    /**\r\n     * Creates an error thrown when a browser interaction (redirect or popup) is in progress.\r\n     */\r\n    BrowserAuthError.createInteractionInProgressError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.interactionInProgress.code, BrowserAuthErrorMessage.interactionInProgress.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the popup window could not be opened.\r\n     * @param errDetail\r\n     */\r\n    BrowserAuthError.createPopupWindowError = function (errDetail) {\r\n        var errorMessage = BrowserAuthErrorMessage.popUpWindowError.desc;\r\n        errorMessage = !StringUtils.isEmpty(errDetail) ? errorMessage + \" Details: \" + errDetail : errorMessage;\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.popUpWindowError.code, errorMessage);\r\n    };\r\n    /**\r\n     * Creates an error thrown when window.open returns an empty window object.\r\n     * @param errDetail\r\n     */\r\n    BrowserAuthError.createEmptyWindowCreatedError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.emptyWindowError.code, BrowserAuthErrorMessage.emptyWindowError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the user closes a popup.\r\n     */\r\n    BrowserAuthError.createUserCancelledError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.userCancelledError.code, BrowserAuthErrorMessage.userCancelledError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when monitorWindowFromHash times out for a given popup.\r\n     * @param urlNavigate\r\n     */\r\n    BrowserAuthError.createMonitorWindowTimeoutError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.monitorWindowTimeoutError.code, BrowserAuthErrorMessage.monitorWindowTimeoutError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when navigateWindow is called inside an iframe.\r\n     * @param windowParentCheck\r\n     */\r\n    BrowserAuthError.createRedirectInIframeError = function (windowParentCheck) {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.redirectInIframeError.code, BrowserAuthErrorMessage.redirectInIframeError.desc + \" (window.parent !== window) => \" + windowParentCheck);\r\n    };\r\n    /**\r\n     * Creates an error thrown when an auth reload is done inside an iframe.\r\n     */\r\n    BrowserAuthError.createBlockReloadInHiddenIframeError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.blockTokenRequestsInHiddenIframeError.code, BrowserAuthErrorMessage.blockTokenRequestsInHiddenIframeError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when an iframe is found to be closed before the timeout is reached.\r\n     */\r\n    BrowserAuthError.createIframeClosedPrematurelyError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.iframeClosedPrematurelyError.code, BrowserAuthErrorMessage.iframeClosedPrematurelyError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the login_hint, sid or account object is not provided in the ssoSilent API.\r\n     */\r\n    BrowserAuthError.createSilentSSOInsufficientInfoError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.silentSSOInsufficientInfoError.code, BrowserAuthErrorMessage.silentSSOInsufficientInfoError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when a given prompt value is invalid for silent requests.\r\n     */\r\n    BrowserAuthError.createSilentPromptValueError = function (givenPrompt) {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.silentPromptValueError.code, BrowserAuthErrorMessage.silentPromptValueError.desc + \" Given value: \" + givenPrompt);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the token request could not be retrieved from the cache\r\n     * @param errDetail\r\n     */\r\n    BrowserAuthError.createTokenRequestCacheError = function (errDetail) {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.tokenRequestCacheError.code, BrowserAuthErrorMessage.tokenRequestCacheError.desc + \" Error Detail: \" + errDetail);\r\n    };\r\n    /**\r\n    * Creates an error thrown if cache type is invalid.\r\n    */\r\n    BrowserAuthError.createInvalidCacheTypeError = function () {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.invalidCacheType.code, \"\" + BrowserAuthErrorMessage.invalidCacheType.desc);\r\n    };\r\n    return BrowserAuthError;\r\n}(AuthError));\n\n/**\r\n * This client implements the XMLHttpRequest class to send GET and POST requests.\r\n */\r\nvar XhrClient = /** @class */ (function () {\r\n    function XhrClient() {\r\n    }\r\n    /**\r\n     * XhrClient for REST endpoints - Get request\r\n     * @param url\r\n     * @param headers\r\n     * @param body\r\n     */\r\n    XhrClient.prototype.sendGetRequestAsync = function (url, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.sendRequestAsync(url, HTTP_REQUEST_TYPE.GET, options)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * XhrClient for REST endpoints - Post request\r\n     * @param url\r\n     * @param headers\r\n     * @param body\r\n     */\r\n    XhrClient.prototype.sendPostRequestAsync = function (url, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.sendRequestAsync(url, HTTP_REQUEST_TYPE.POST, options)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Helper for XhrClient requests.\r\n     * @param url\r\n     * @param method\r\n     * @param options\r\n     */\r\n    XhrClient.prototype.sendRequestAsync = function (url, method, options) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.open(method, url, /* async: */ true);\r\n            _this.setXhrHeaders(xhr, options);\r\n            xhr.onload = function () {\r\n                if (xhr.status < 200 || xhr.status >= 300) {\r\n                    reject(xhr.responseText);\r\n                }\r\n                try {\r\n                    var jsonResponse = JSON.parse(xhr.responseText);\r\n                    var networkResponse = {\r\n                        headers: _this.getHeaderMap(xhr),\r\n                        body: jsonResponse,\r\n                        status: xhr.status\r\n                    };\r\n                    resolve(networkResponse);\r\n                }\r\n                catch (e) {\r\n                    reject(xhr.responseText);\r\n                }\r\n            };\r\n            xhr.onerror = function () {\r\n                reject(xhr.status);\r\n            };\r\n            if (method === \"POST\" && options.body) {\r\n                xhr.send(options.body);\r\n            }\r\n            else if (method === \"GET\") {\r\n                xhr.send();\r\n            }\r\n            else {\r\n                throw BrowserAuthError.createHttpMethodNotImplementedError(method);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Helper to set XHR headers for request.\r\n     * @param xhr\r\n     * @param options\r\n     */\r\n    XhrClient.prototype.setXhrHeaders = function (xhr, options) {\r\n        if (options && options.headers) {\r\n            options.headers.forEach(function (value, key) {\r\n                xhr.setRequestHeader(key, value);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Gets a string map of the headers received in the response.\r\n     *\r\n     * Algorithm comes from https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/getAllResponseHeaders\r\n     * @param xhr\r\n     */\r\n    XhrClient.prototype.getHeaderMap = function (xhr) {\r\n        var headerString = xhr.getAllResponseHeaders();\r\n        var headerArr = headerString.trim().split(/[\\r\\n]+/);\r\n        var headerMap = new Map();\r\n        headerArr.forEach(function (value) {\r\n            var parts = value.split(\": \");\r\n            var headerName = parts.shift();\r\n            var headerVal = parts.join(\": \");\r\n            headerMap.set(headerName, headerVal);\r\n        });\r\n        return headerMap;\r\n    };\r\n    return XhrClient;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Utility class for browser specific functions\r\n */\r\nvar BrowserUtils = /** @class */ (function () {\r\n    function BrowserUtils() {\r\n    }\r\n    // #region Window Navigation and URL management\r\n    /**\r\n     * Used to redirect the browser to the STS authorization endpoint\r\n     * @param {string} urlNavigate - URL of the authorization endpoint\r\n     * @param {boolean} noHistory - boolean flag, uses .replace() instead of .assign() if true\r\n     */\r\n    BrowserUtils.navigateWindow = function (urlNavigate, noHistory) {\r\n        if (noHistory) {\r\n            window.location.replace(urlNavigate);\r\n        }\r\n        else {\r\n            window.location.assign(urlNavigate);\r\n        }\r\n    };\r\n    /**\r\n     * Clears hash from window url.\r\n     */\r\n    BrowserUtils.clearHash = function () {\r\n        window.location.hash = \"\";\r\n    };\r\n    /**\r\n     * Replaces current hash with hash from provided url\r\n     */\r\n    BrowserUtils.replaceHash = function (url) {\r\n        var urlParts = url.split(\"#\");\r\n        urlParts.shift(); // Remove part before the hash\r\n        window.location.hash = urlParts.length > 0 ? urlParts.join(\"#\") : \"\";\r\n    };\r\n    /**\r\n     * Returns boolean of whether the current window is in an iframe or not.\r\n     */\r\n    BrowserUtils.isInIframe = function () {\r\n        return window.parent !== window;\r\n    };\r\n    // #endregion\r\n    /**\r\n     * Returns current window URL as redirect uri\r\n     */\r\n    BrowserUtils.getCurrentUri = function () {\r\n        return window.location.href.split(\"?\")[0].split(\"#\")[0];\r\n    };\r\n    /**\r\n     * Gets the homepage url for the current window location.\r\n     */\r\n    BrowserUtils.getHomepage = function () {\r\n        var currentUrl = new UrlString(window.location.href);\r\n        var urlComponents = currentUrl.getUrlComponents();\r\n        return urlComponents.Protocol + \"//\" + urlComponents.HostNameAndPort + \"/\";\r\n    };\r\n    /**\r\n     * Returns best compatible network client object.\r\n     */\r\n    BrowserUtils.getBrowserNetworkClient = function () {\r\n        if (window.fetch) {\r\n            return new FetchClient();\r\n        }\r\n        else {\r\n            return new XhrClient();\r\n        }\r\n    };\r\n    /**\r\n     * Throws error if we have completed an auth and are\r\n     * attempting another auth request inside an iframe.\r\n     */\r\n    BrowserUtils.blockReloadInHiddenIframes = function () {\r\n        var isResponseHash = UrlString.hashContainsKnownProperties(window.location.hash);\r\n        // return an error if called from the hidden iframe created by the msal js silent calls\r\n        if (isResponseHash && BrowserUtils.isInIframe()) {\r\n            throw BrowserAuthError.createBlockReloadInHiddenIframeError();\r\n        }\r\n    };\r\n    /**\r\n     * Returns boolean of whether current browser is an Internet Explorer or Edge browser.\r\n     */\r\n    BrowserUtils.detectIEOrEdge = function () {\r\n        var ua = window.navigator.userAgent;\r\n        var msie = ua.indexOf(\"MSIE \");\r\n        var msie11 = ua.indexOf(\"Trident/\");\r\n        var msedge = ua.indexOf(\"Edge/\");\r\n        var isIE = msie > 0 || msie11 > 0;\r\n        var isEdge = msedge > 0;\r\n        return isIE || isEdge;\r\n    };\r\n    return BrowserUtils;\r\n}());\n\n// Default timeout for popup windows and iframes in milliseconds\r\nvar DEFAULT_POPUP_TIMEOUT_MS = 60000;\r\nvar DEFAULT_IFRAME_TIMEOUT_MS = 6000;\r\n// Default auth options for browser\r\nvar DEFAULT_AUTH_OPTIONS$1 = {\r\n    clientId: \"\",\r\n    authority: \"\" + Constants.DEFAULT_AUTHORITY,\r\n    knownAuthorities: [],\r\n    cloudDiscoveryMetadata: \"\",\r\n    redirectUri: \"\",\r\n    postLogoutRedirectUri: \"\",\r\n    navigateToLoginRequestUrl: true\r\n};\r\n// Default cache options for browser\r\nvar DEFAULT_CACHE_OPTIONS = {\r\n    cacheLocation: BrowserConstants.CACHE_LOCATION_SESSION,\r\n    storeAuthStateInCookie: false\r\n};\r\n// Default logger options for browser\r\nvar DEFAULT_LOGGER_OPTIONS = {\r\n    loggerCallback: function () { },\r\n    piiLoggingEnabled: false\r\n};\r\n// Default system options for browser\r\nvar DEFAULT_BROWSER_SYSTEM_OPTIONS = __assign(__assign({}, DEFAULT_SYSTEM_OPTIONS), { loggerOptions: DEFAULT_LOGGER_OPTIONS, networkClient: BrowserUtils.getBrowserNetworkClient(), windowHashTimeout: DEFAULT_POPUP_TIMEOUT_MS, iframeHashTimeout: DEFAULT_IFRAME_TIMEOUT_MS, loadFrameTimeout: BrowserUtils.detectIEOrEdge() ? 500 : 0 });\r\n/**\r\n * MSAL function that sets the default options when not explicitly configured from app developer\r\n *\r\n * @param auth\r\n * @param cache\r\n * @param system\r\n *\r\n * @returns Configuration object\r\n */\r\nfunction buildConfiguration(_a) {\r\n    var userInputAuth = _a.auth, userInputCache = _a.cache, userInputSystem = _a.system;\r\n    var overlayedConfig = {\r\n        auth: __assign(__assign({}, DEFAULT_AUTH_OPTIONS$1), userInputAuth),\r\n        cache: __assign(__assign({}, DEFAULT_CACHE_OPTIONS), userInputCache),\r\n        system: __assign(__assign({}, DEFAULT_BROWSER_SYSTEM_OPTIONS), userInputSystem)\r\n    };\r\n    return overlayedConfig;\r\n}\n\n/**\r\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nvar BrowserConfigurationAuthErrorMessage = {\r\n    redirectUriNotSet: {\r\n        code: \"redirect_uri_empty\",\r\n        desc: \"A redirect URI is required for all calls, and none has been set.\"\r\n    },\r\n    postLogoutUriNotSet: {\r\n        code: \"post_logout_uri_empty\",\r\n        desc: \"A post logout redirect has not been set.\"\r\n    },\r\n    storageNotSupportedError: {\r\n        code: \"storage_not_supported\",\r\n        desc: \"Given storage configuration option was not supported.\"\r\n    },\r\n    noRedirectCallbacksSet: {\r\n        code: \"no_redirect_callbacks\",\r\n        desc: \"No redirect callbacks have been set. Please call setRedirectCallbacks() with the appropriate function arguments before continuing. \" +\r\n            \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\r\n    },\r\n    invalidCallbackObject: {\r\n        code: \"invalid_callback_object\",\r\n        desc: \"The object passed for the callback was invalid. \" +\r\n            \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\r\n    },\r\n};\r\n/**\r\n * Browser library error class thrown by the MSAL.js library for SPAs\r\n */\r\nvar BrowserConfigurationAuthError = /** @class */ (function (_super) {\r\n    __extends(BrowserConfigurationAuthError, _super);\r\n    function BrowserConfigurationAuthError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"BrowserConfigurationAuthError\";\r\n        Object.setPrototypeOf(_this, BrowserConfigurationAuthError.prototype);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates an error thrown when the redirect uri is empty (not set by caller)\r\n     */\r\n    BrowserConfigurationAuthError.createRedirectUriEmptyError = function () {\r\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.redirectUriNotSet.code, BrowserConfigurationAuthErrorMessage.redirectUriNotSet.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the post-logout redirect uri is empty (not set by caller)\r\n     */\r\n    BrowserConfigurationAuthError.createPostLogoutRedirectUriEmptyError = function () {\r\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.postLogoutUriNotSet.code, BrowserConfigurationAuthErrorMessage.postLogoutUriNotSet.desc);\r\n    };\r\n    /**\r\n     * Creates error thrown when given storage location is not supported.\r\n     * @param givenStorageLocation\r\n     */\r\n    BrowserConfigurationAuthError.createStorageNotSupportedError = function (givenStorageLocation) {\r\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.storageNotSupportedError.code, BrowserConfigurationAuthErrorMessage.storageNotSupportedError.desc + \" Given Location: \" + givenStorageLocation);\r\n    };\r\n    /**\r\n     * Creates error thrown when callback object is invalid.\r\n     * @param callbackObject\r\n     */\r\n    BrowserConfigurationAuthError.createInvalidCallbackObjectError = function (callbackObject) {\r\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.invalidCallbackObject.code, BrowserConfigurationAuthErrorMessage.invalidCallbackObject.desc + \" Given value for callback function: \" + callbackObject);\r\n    };\r\n    /**\r\n     * Creates error thrown when redirect callbacks are not set before calling loginRedirect() or acquireTokenRedirect().\r\n     */\r\n    BrowserConfigurationAuthError.createRedirectCallbacksNotSetError = function () {\r\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.code, BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.desc);\r\n    };\r\n    return BrowserConfigurationAuthError;\r\n}(AuthError));\n\n// Cookie life calculation (hours * minutes * seconds * ms)\r\nvar COOKIE_LIFE_MULTIPLIER = 24 * 60 * 60 * 1000;\r\n/**\r\n * This class implements the cache storage interface for MSAL through browser local or session storage.\r\n * Cookies are only used if storeAuthStateInCookie is true, and are only used for\r\n * parameters such as state and nonce, generally.\r\n */\r\nvar BrowserStorage = /** @class */ (function (_super) {\r\n    __extends(BrowserStorage, _super);\r\n    function BrowserStorage(clientId, cacheConfig) {\r\n        var _this = _super.call(this) || this;\r\n        // Validate cache location\r\n        _this.validateWindowStorage(cacheConfig.cacheLocation);\r\n        _this.cacheConfig = cacheConfig;\r\n        _this.windowStorage = window[_this.cacheConfig.cacheLocation];\r\n        _this.clientId = clientId;\r\n        // Migrate any cache entries from older versions of MSAL.\r\n        _this.migrateCacheEntries();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Validates the the given cache location string is an expected value:\r\n     * - localStorage\r\n     * - sessionStorage (default)\r\n     * Also validates if given cacheLocation is supported on the browser.\r\n     * @param cacheLocation\r\n     */\r\n    BrowserStorage.prototype.validateWindowStorage = function (cacheLocation) {\r\n        if (typeof window === \"undefined\" || !window) {\r\n            throw BrowserAuthError.createNoWindowObjectError();\r\n        }\r\n        if (cacheLocation !== BrowserConstants.CACHE_LOCATION_LOCAL && cacheLocation !== BrowserConstants.CACHE_LOCATION_SESSION) {\r\n            throw BrowserConfigurationAuthError.createStorageNotSupportedError(cacheLocation);\r\n        }\r\n        var storageSupported = !!window[cacheLocation];\r\n        if (!storageSupported) {\r\n            throw BrowserConfigurationAuthError.createStorageNotSupportedError(cacheLocation);\r\n        }\r\n    };\r\n    /**\r\n     * Migrate all old cache entries to new schema. No rollback supported.\r\n     * @param storeAuthStateInCookie\r\n     */\r\n    BrowserStorage.prototype.migrateCacheEntries = function () {\r\n        var _this = this;\r\n        var idTokenKey = Constants.CACHE_PREFIX + \".\" + PersistentCacheKeys.ID_TOKEN;\r\n        var clientInfoKey = Constants.CACHE_PREFIX + \".\" + PersistentCacheKeys.CLIENT_INFO;\r\n        var errorKey = Constants.CACHE_PREFIX + \".\" + PersistentCacheKeys.ERROR;\r\n        var errorDescKey = Constants.CACHE_PREFIX + \".\" + PersistentCacheKeys.ERROR_DESC;\r\n        var idTokenValue = this.windowStorage.getItem(idTokenKey);\r\n        var clientInfoValue = this.windowStorage.getItem(clientInfoKey);\r\n        var errorValue = this.windowStorage.getItem(errorKey);\r\n        var errorDescValue = this.windowStorage.getItem(errorDescKey);\r\n        var values = [idTokenValue, clientInfoValue, errorValue, errorDescValue];\r\n        var keysToMigrate = [PersistentCacheKeys.ID_TOKEN, PersistentCacheKeys.CLIENT_INFO, PersistentCacheKeys.ERROR, PersistentCacheKeys.ERROR_DESC];\r\n        keysToMigrate.forEach(function (cacheKey, index) { return _this.migrateCacheEntry(cacheKey, values[index]); });\r\n    };\r\n    /**\r\n     * Utility function to help with migration.\r\n     * @param newKey\r\n     * @param value\r\n     * @param storeAuthStateInCookie\r\n     */\r\n    BrowserStorage.prototype.migrateCacheEntry = function (newKey, value) {\r\n        if (value) {\r\n            this.setItem(this.generateCacheKey(newKey), value, CacheSchemaType.TEMPORARY);\r\n        }\r\n    };\r\n    /**\r\n     * Parses key as JSON object, JSON.parse() will throw an error.\r\n     * @param key\r\n     */\r\n    BrowserStorage.prototype.validateObjectKey = function (key) {\r\n        JSON.parse(key);\r\n    };\r\n    /**\r\n     * Sets the cache item with the key and value given.\r\n     * Stores in cookie if storeAuthStateInCookie is set to true.\r\n     * This can cause cookie overflow if used incorrectly.\r\n     * @param key\r\n     * @param value\r\n     */\r\n    BrowserStorage.prototype.setItem = function (key, value, type) {\r\n        // save the cacheItem\r\n        switch (type) {\r\n            case CacheSchemaType.ACCOUNT:\r\n            case CacheSchemaType.CREDENTIAL:\r\n            case CacheSchemaType.APP_META_DATA:\r\n                this.windowStorage.setItem(key, JSON.stringify(value));\r\n                break;\r\n            case CacheSchemaType.TEMPORARY: {\r\n                var stringVal = value;\r\n                this.windowStorage.setItem(key, stringVal);\r\n                if (this.cacheConfig.storeAuthStateInCookie) {\r\n                    this.setItemCookie(key, stringVal);\r\n                }\r\n                break;\r\n            }\r\n            case CacheSchemaType.TELEMETRY: {\r\n                this.windowStorage.setItem(key, JSON.stringify(value));\r\n                break;\r\n            }\r\n            default: {\r\n                throw BrowserAuthError.createInvalidCacheTypeError();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets cache item with given key.\r\n     * Will retrieve frm cookies if storeAuthStateInCookie is set to true.\r\n     * @param key\r\n     */\r\n    BrowserStorage.prototype.getItem = function (key, type) {\r\n        var value = this.windowStorage.getItem(key);\r\n        if (StringUtils.isEmpty(value)) {\r\n            return null;\r\n        }\r\n        switch (type) {\r\n            case CacheSchemaType.ACCOUNT: {\r\n                var account = new AccountEntity();\r\n                return CacheManager.toObject(account, JSON.parse(value));\r\n            }\r\n            case CacheSchemaType.CREDENTIAL: {\r\n                var credentialType = CredentialEntity.getCredentialType(key);\r\n                switch (credentialType) {\r\n                    case CredentialType.ID_TOKEN: {\r\n                        var idTokenEntity = new IdTokenEntity();\r\n                        return CacheManager.toObject(idTokenEntity, JSON.parse(value));\r\n                    }\r\n                    case CredentialType.ACCESS_TOKEN: {\r\n                        var accessTokenEntity = new AccessTokenEntity();\r\n                        return CacheManager.toObject(accessTokenEntity, JSON.parse(value));\r\n                    }\r\n                    case CredentialType.REFRESH_TOKEN: {\r\n                        var refreshTokenEntity = new RefreshTokenEntity();\r\n                        return CacheManager.toObject(refreshTokenEntity, JSON.parse(value));\r\n                    }\r\n                }\r\n            }\r\n            case CacheSchemaType.APP_META_DATA: {\r\n                return JSON.parse(value);\r\n            }\r\n            case CacheSchemaType.TEMPORARY: {\r\n                var itemCookie = this.getItemCookie(key);\r\n                if (this.cacheConfig.storeAuthStateInCookie) {\r\n                    return itemCookie;\r\n                }\r\n                return value;\r\n            }\r\n            case CacheSchemaType.TELEMETRY: {\r\n                return JSON.parse(value);\r\n            }\r\n            default: {\r\n                throw BrowserAuthError.createInvalidCacheTypeError();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Removes the cache item with the given key.\r\n     * Will also clear the cookie item if storeAuthStateInCookie is set to true.\r\n     * @param key\r\n     */\r\n    BrowserStorage.prototype.removeItem = function (key) {\r\n        this.windowStorage.removeItem(key);\r\n        if (this.cacheConfig.storeAuthStateInCookie) {\r\n            this.clearItemCookie(key);\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Checks whether key is in cache.\r\n     * @param key\r\n     */\r\n    BrowserStorage.prototype.containsKey = function (key) {\r\n        return this.windowStorage.hasOwnProperty(key);\r\n    };\r\n    /**\r\n     * Gets all keys in window.\r\n     */\r\n    BrowserStorage.prototype.getKeys = function () {\r\n        return Object.keys(this.windowStorage);\r\n    };\r\n    /**\r\n     * Clears all cache entries created by MSAL (except tokens).\r\n     */\r\n    BrowserStorage.prototype.clear = function () {\r\n        this.removeAllAccounts();\r\n        this.removeAppMetadata();\r\n        var key;\r\n        for (key in this.windowStorage) {\r\n            // Check if key contains msal prefix; For now, we are clearing all the cache items created by MSAL.js\r\n            if (this.windowStorage.hasOwnProperty(key) && ((key.indexOf(Constants.CACHE_PREFIX) !== -1) || (key.indexOf(this.clientId) !== -1))) {\r\n                this.removeItem(key);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Add value to cookies\r\n     * @param cookieName\r\n     * @param cookieValue\r\n     * @param expires\r\n     */\r\n    BrowserStorage.prototype.setItemCookie = function (cookieName, cookieValue, expires) {\r\n        var cookieStr = encodeURIComponent(cookieName) + \"=\" + encodeURIComponent(cookieValue) + \";path=/;\";\r\n        if (expires) {\r\n            var expireTime = this.getCookieExpirationTime(expires);\r\n            cookieStr += \"expires=\" + expireTime + \";\";\r\n        }\r\n        document.cookie = cookieStr;\r\n    };\r\n    /**\r\n     * Get one item by key from cookies\r\n     * @param cookieName\r\n     */\r\n    BrowserStorage.prototype.getItemCookie = function (cookieName) {\r\n        var name = encodeURIComponent(cookieName) + \"=\";\r\n        var cookieList = document.cookie.split(\";\");\r\n        for (var i = 0; i < cookieList.length; i++) {\r\n            var cookie = cookieList[i];\r\n            while (cookie.charAt(0) === \" \") {\r\n                cookie = cookie.substring(1);\r\n            }\r\n            if (cookie.indexOf(name) === 0) {\r\n                return decodeURIComponent(cookie.substring(name.length, cookie.length));\r\n            }\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Clear an item in the cookies by key\r\n     * @param cookieName\r\n     */\r\n    BrowserStorage.prototype.clearItemCookie = function (cookieName) {\r\n        this.setItemCookie(cookieName, \"\", -1);\r\n    };\r\n    /**\r\n     * Clear all msal cookies\r\n     */\r\n    BrowserStorage.prototype.clearMsalCookie = function (state) {\r\n        var nonceKey = state ? TemporaryCacheKeys.NONCE_IDTOKEN + \"|\" + state : TemporaryCacheKeys.NONCE_IDTOKEN;\r\n        this.clearItemCookie(this.generateCacheKey(nonceKey));\r\n        this.clearItemCookie(this.generateCacheKey(TemporaryCacheKeys.REQUEST_STATE));\r\n        this.clearItemCookie(this.generateCacheKey(TemporaryCacheKeys.ORIGIN_URI));\r\n    };\r\n    /**\r\n     * Get cookie expiration time\r\n     * @param cookieLifeDays\r\n     */\r\n    BrowserStorage.prototype.getCookieExpirationTime = function (cookieLifeDays) {\r\n        var today = new Date();\r\n        var expr = new Date(today.getTime() + cookieLifeDays * COOKIE_LIFE_MULTIPLIER);\r\n        return expr.toUTCString();\r\n    };\r\n    /**\r\n     * Gets the cache object referenced by the browser\r\n     */\r\n    BrowserStorage.prototype.getCache = function () {\r\n        return this.windowStorage;\r\n    };\r\n    /**\r\n     * interface compat, we cannot overwrite browser cache; Functionality is supported by individual entities in browser\r\n     */\r\n    BrowserStorage.prototype.setCache = function () {\r\n        // sets nothing\r\n    };\r\n    /**\r\n     * Prepend msal.<client-id> to each key; Skip for any JSON object as Key (defined schemas do not need the key appended: AccessToken Keys or the upcoming schema)\r\n     * @param key\r\n     * @param addInstanceId\r\n     */\r\n    BrowserStorage.prototype.generateCacheKey = function (key) {\r\n        try {\r\n            // Defined schemas do not need the key migrated\r\n            this.validateObjectKey(key);\r\n            return key;\r\n        }\r\n        catch (e) {\r\n            if (StringUtils.startsWith(key, Constants.CACHE_PREFIX) || StringUtils.startsWith(key, PersistentCacheKeys.ADAL_ID_TOKEN)) {\r\n                return key;\r\n            }\r\n            return Constants.CACHE_PREFIX + \".\" + this.clientId + \".\" + key;\r\n        }\r\n    };\r\n    /**\r\n     * Create authorityKey to cache authority\r\n     * @param state\r\n     */\r\n    BrowserStorage.prototype.generateAuthorityKey = function (state) {\r\n        return \"\" + TemporaryCacheKeys.AUTHORITY + Constants.RESOURCE_DELIM + state;\r\n    };\r\n    /**\r\n     * Create Nonce key to cache nonce\r\n     * @param state\r\n     */\r\n    BrowserStorage.prototype.generateNonceKey = function (state) {\r\n        return \"\" + TemporaryCacheKeys.NONCE_IDTOKEN + Constants.RESOURCE_DELIM + state;\r\n    };\r\n    /**\r\n     * Sets the cacheKey for and stores the authority information in cache\r\n     * @param state\r\n     * @param authority\r\n     */\r\n    BrowserStorage.prototype.setAuthorityCache = function (authority, state) {\r\n        // Cache authorityKey\r\n        var authorityKey = this.generateAuthorityKey(state);\r\n        this.setItem(this.generateCacheKey(authorityKey), authority, CacheSchemaType.TEMPORARY);\r\n    };\r\n    /**\r\n     * Gets the cached authority based on the cached state. Returns empty if no cached state found.\r\n     */\r\n    BrowserStorage.prototype.getCachedAuthority = function () {\r\n        var state = this.getItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_STATE), CacheSchemaType.TEMPORARY);\r\n        if (!state) {\r\n            return null;\r\n        }\r\n        return this.getItem(this.generateCacheKey(this.generateAuthorityKey(state)), CacheSchemaType.TEMPORARY);\r\n    };\r\n    /**\r\n     * Updates account, authority, and state in cache\r\n     * @param serverAuthenticationRequest\r\n     * @param account\r\n     */\r\n    BrowserStorage.prototype.updateCacheEntries = function (state, nonce, authorityInstance) {\r\n        // Cache the request state\r\n        this.setItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_STATE), state, CacheSchemaType.TEMPORARY);\r\n        // Cache the nonce\r\n        this.setItem(this.generateCacheKey(this.generateNonceKey(state)), nonce, CacheSchemaType.TEMPORARY);\r\n        // Cache authorityKey\r\n        this.setAuthorityCache(authorityInstance, state);\r\n    };\r\n    /**\r\n     * Reset all temporary cache items\r\n     * @param state\r\n     */\r\n    BrowserStorage.prototype.resetRequestCache = function (state) {\r\n        var _this = this;\r\n        // check state and remove associated cache items\r\n        this.getKeys().forEach(function (key) {\r\n            if (!StringUtils.isEmpty(state) && key.indexOf(state) !== -1) {\r\n                _this.removeItem(key);\r\n            }\r\n        });\r\n        // delete generic interactive request parameters\r\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_STATE));\r\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS));\r\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.ORIGIN_URI));\r\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.URL_HASH));\r\n    };\r\n    BrowserStorage.prototype.cleanRequest = function () {\r\n        // Interaction is completed - remove interaction status.\r\n        this.removeItem(this.generateCacheKey(BrowserConstants.INTERACTION_STATUS_KEY));\r\n        var cachedState = this.getItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_STATE), CacheSchemaType.TEMPORARY);\r\n        this.resetRequestCache(cachedState || \"\");\r\n    };\r\n    BrowserStorage.prototype.cacheCodeRequest = function (authCodeRequest, browserCrypto) {\r\n        this.setItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS), browserCrypto.base64Encode(JSON.stringify(authCodeRequest)), CacheSchemaType.TEMPORARY);\r\n    };\r\n    /**\r\n     * Gets the token exchange parameters from the cache. Throws an error if nothing is found.\r\n     */\r\n    BrowserStorage.prototype.getCachedRequest = function (state, browserCrypto) {\r\n        try {\r\n            // Get token request from cache and parse as TokenExchangeParameters.\r\n            var encodedTokenRequest = this.getItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS), CacheSchemaType.TEMPORARY);\r\n            var parsedRequest = JSON.parse(browserCrypto.base64Decode(encodedTokenRequest));\r\n            this.removeItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS));\r\n            // Get cached authority and use if no authority is cached with request.\r\n            if (StringUtils.isEmpty(parsedRequest.authority)) {\r\n                var authorityKey = this.generateAuthorityKey(state);\r\n                var cachedAuthority = this.getItem(this.generateCacheKey(authorityKey), CacheSchemaType.TEMPORARY);\r\n                parsedRequest.authority = cachedAuthority;\r\n            }\r\n            return parsedRequest;\r\n        }\r\n        catch (err) {\r\n            throw BrowserAuthError.createTokenRequestCacheError(err);\r\n        }\r\n    };\r\n    return BrowserStorage;\r\n}(CacheManager));\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Utility class for math specific functions in browser.\r\n */\r\nvar MathUtils = /** @class */ (function () {\r\n    function MathUtils() {\r\n    }\r\n    /**\r\n     * Decimal to Hex\r\n     *\r\n     * @param num\r\n     */\r\n    MathUtils.decimalToHex = function (num) {\r\n        var hex = num.toString(16);\r\n        while (hex.length < 2) {\r\n            hex = \"0\" + hex;\r\n        }\r\n        return hex;\r\n    };\r\n    return MathUtils;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar GuidGenerator = /** @class */ (function () {\r\n    function GuidGenerator(cryptoObj) {\r\n        this.cryptoObj = cryptoObj;\r\n    }\r\n    /*\r\n     * RFC4122: The version 4 UUID is meant for generating UUIDs from truly-random or\r\n     * pseudo-random numbers.\r\n     * The algorithm is as follows:\r\n     *     Set the two most significant bits (bits 6 and 7) of the\r\n     *        clock_seq_hi_and_reserved to zero and one, respectively.\r\n     *     Set the four most significant bits (bits 12 through 15) of the\r\n     *        time_hi_and_version field to the 4-bit version number from\r\n     *        Section 4.1.3. Version4\r\n     *     Set all the other bits to randomly (or pseudo-randomly) chosen\r\n     *     values.\r\n     * UUID                   = time-low \"-\" time-mid \"-\"time-high-and-version \"-\"clock-seq-reserved and low(2hexOctet)\"-\" node\r\n     * time-low               = 4hexOctet\r\n     * time-mid               = 2hexOctet\r\n     * time-high-and-version  = 2hexOctet\r\n     * clock-seq-and-reserved = hexOctet:\r\n     * clock-seq-low          = hexOctet\r\n     * node                   = 6hexOctet\r\n     * Format: xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\r\n     * y could be 1000, 1001, 1010, 1011 since most significant two bits needs to be 10\r\n     * y values are 8, 9, A, B\r\n     */\r\n    GuidGenerator.prototype.generateGuid = function () {\r\n        try {\r\n            var buffer = new Uint8Array(16);\r\n            this.cryptoObj.getRandomValues(buffer);\r\n            // buffer[6] and buffer[7] represents the time_hi_and_version field. We will set the four most significant bits (4 through 7) of buffer[6] to represent decimal number 4 (UUID version number).\r\n            buffer[6] |= 0x40; // buffer[6] | 01000000 will set the 6 bit to 1.\r\n            buffer[6] &= 0x4f; // buffer[6] & 01001111 will set the 4, 5, and 7 bit to 0 such that bits 4-7 == 0100 = \"4\".\r\n            // buffer[8] represents the clock_seq_hi_and_reserved field. We will set the two most significant bits (6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively.\r\n            buffer[8] |= 0x80; // buffer[8] | 10000000 will set the 7 bit to 1.\r\n            buffer[8] &= 0xbf; // buffer[8] & 10111111 will set the 6 bit to 0.\r\n            return MathUtils.decimalToHex(buffer[0]) + MathUtils.decimalToHex(buffer[1])\r\n                + MathUtils.decimalToHex(buffer[2]) + MathUtils.decimalToHex(buffer[3])\r\n                + \"-\" + MathUtils.decimalToHex(buffer[4]) + MathUtils.decimalToHex(buffer[5])\r\n                + \"-\" + MathUtils.decimalToHex(buffer[6]) + MathUtils.decimalToHex(buffer[7])\r\n                + \"-\" + MathUtils.decimalToHex(buffer[8]) + MathUtils.decimalToHex(buffer[9])\r\n                + \"-\" + MathUtils.decimalToHex(buffer[10]) + MathUtils.decimalToHex(buffer[11])\r\n                + MathUtils.decimalToHex(buffer[12]) + MathUtils.decimalToHex(buffer[13])\r\n                + MathUtils.decimalToHex(buffer[14]) + MathUtils.decimalToHex(buffer[15]);\r\n        }\r\n        catch (err) {\r\n            var guidHolder = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\";\r\n            var hex = \"0123456789abcdef\";\r\n            var r = 0;\r\n            var guidResponse = \"\";\r\n            for (var i = 0; i < 36; i++) {\r\n                if (guidHolder[i] !== \"-\" && guidHolder[i] !== \"4\") {\r\n                    // each x and y needs to be random\r\n                    r = Math.random() * 16 | 0;\r\n                }\r\n                if (guidHolder[i] === \"x\") {\r\n                    guidResponse += hex[r];\r\n                }\r\n                else if (guidHolder[i] === \"y\") {\r\n                    // clock-seq-and-reserved first hex is filtered and remaining hex values are random\r\n                    r &= 0x3; // bit and with 0011 to set pos 2 to zero ?0??\r\n                    r |= 0x8; // set pos 3 to 1 as 1???\r\n                    guidResponse += hex[r];\r\n                }\r\n                else {\r\n                    guidResponse += guidHolder[i];\r\n                }\r\n            }\r\n            return guidResponse;\r\n        }\r\n    };\r\n    /**\r\n     * verifies if a string is  GUID\r\n     * @param guid\r\n     */\r\n    GuidGenerator.isGuid = function (guid) {\r\n        var regexGuid = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\r\n        return regexGuid.test(guid);\r\n    };\r\n    return GuidGenerator;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Utility functions for strings in a browser. See here for implementation details:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\r\n */\r\nvar BrowserStringUtils = /** @class */ (function () {\r\n    function BrowserStringUtils() {\r\n    }\r\n    /**\r\n     * Converts string to Uint8Array\r\n     * @param sDOMStr\r\n     */\r\n    BrowserStringUtils.stringToUtf8Arr = function (sDOMStr) {\r\n        var nChr;\r\n        var nArrLen = 0;\r\n        var nStrLen = sDOMStr.length;\r\n        /* mapping... */\r\n        for (var nMapIdx = 0; nMapIdx < nStrLen; nMapIdx++) {\r\n            nChr = sDOMStr.charCodeAt(nMapIdx);\r\n            nArrLen += nChr < 0x80 ? 1 : nChr < 0x800 ? 2 : nChr < 0x10000 ? 3 : nChr < 0x200000 ? 4 : nChr < 0x4000000 ? 5 : 6;\r\n        }\r\n        var aBytes = new Uint8Array(nArrLen);\r\n        /* transcription... */\r\n        for (var nIdx = 0, nChrIdx = 0; nIdx < nArrLen; nChrIdx++) {\r\n            nChr = sDOMStr.charCodeAt(nChrIdx);\r\n            if (nChr < 128) {\r\n                /* one byte */\r\n                aBytes[nIdx++] = nChr;\r\n            }\r\n            else if (nChr < 0x800) {\r\n                /* two bytes */\r\n                aBytes[nIdx++] = 192 + (nChr >>> 6);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            }\r\n            else if (nChr < 0x10000) {\r\n                /* three bytes */\r\n                aBytes[nIdx++] = 224 + (nChr >>> 12);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            }\r\n            else if (nChr < 0x200000) {\r\n                /* four bytes */\r\n                aBytes[nIdx++] = 240 + (nChr >>> 18);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            }\r\n            else if (nChr < 0x4000000) {\r\n                /* five bytes */\r\n                aBytes[nIdx++] = 248 + (nChr >>> 24);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 18 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            }\r\n            else /* if (nChr <= 0x7fffffff) */ {\r\n                /* six bytes */\r\n                aBytes[nIdx++] = 252 + (nChr >>> 30);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 24 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 18 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            }\r\n        }\r\n        return aBytes;\r\n    };\r\n    /**\r\n     * Converts Uint8Array to a string\r\n     * @param aBytes\r\n     */\r\n    BrowserStringUtils.utf8ArrToString = function (aBytes) {\r\n        var sView = \"\";\r\n        for (var nPart = void 0, nLen = aBytes.length, nIdx = 0; nIdx < nLen; nIdx++) {\r\n            nPart = aBytes[nIdx];\r\n            sView += String.fromCharCode(nPart > 251 && nPart < 254 && nIdx + 5 < nLen ? /* six bytes */\r\n                /* (nPart - 252 << 30) may be not so safe in ECMAScript! So...: */\r\n                (nPart - 252) * 1073741824 + (aBytes[++nIdx] - 128 << 24) + (aBytes[++nIdx] - 128 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                : nPart > 247 && nPart < 252 && nIdx + 4 < nLen ? /* five bytes */\r\n                    (nPart - 248 << 24) + (aBytes[++nIdx] - 128 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                    : nPart > 239 && nPart < 248 && nIdx + 3 < nLen ? /* four bytes */\r\n                        (nPart - 240 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                        : nPart > 223 && nPart < 240 && nIdx + 2 < nLen ? /* three bytes */\r\n                            (nPart - 224 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                            : nPart > 191 && nPart < 224 && nIdx + 1 < nLen ? /* two bytes */\r\n                                (nPart - 192 << 6) + aBytes[++nIdx] - 128\r\n                                : /* nPart < 127 ? */ /* one byte */\r\n                                    nPart);\r\n        }\r\n        return sView;\r\n    };\r\n    return BrowserStringUtils;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Class which exposes APIs to encode plaintext to base64 encoded string. See here for implementation details:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\r\n */\r\nvar Base64Encode = /** @class */ (function () {\r\n    function Base64Encode() {\r\n    }\r\n    /**\r\n     * Returns URL Safe b64 encoded string from a plaintext string.\r\n     * @param input\r\n     */\r\n    Base64Encode.prototype.urlEncode = function (input) {\r\n        return encodeURIComponent(this.encode(input)\r\n            .replace(/=/g, \"\")\r\n            .replace(/\\+/g, \"-\")\r\n            .replace(/\\//g, \"_\"));\r\n    };\r\n    /**\r\n     * Returns URL Safe b64 encoded string from an int8Array.\r\n     * @param inputArr\r\n     */\r\n    Base64Encode.prototype.urlEncodeArr = function (inputArr) {\r\n        return this.base64EncArr(inputArr)\r\n            .replace(/=/g, \"\")\r\n            .replace(/\\+/g, \"-\")\r\n            .replace(/\\//g, \"_\");\r\n    };\r\n    /**\r\n     * Returns b64 encoded string from plaintext string.\r\n     * @param input\r\n     */\r\n    Base64Encode.prototype.encode = function (input) {\r\n        var inputUtf8Arr = BrowserStringUtils.stringToUtf8Arr(input);\r\n        return this.base64EncArr(inputUtf8Arr);\r\n    };\r\n    /**\r\n     * Base64 encode byte array\r\n     * @param aBytes\r\n     */\r\n    Base64Encode.prototype.base64EncArr = function (aBytes) {\r\n        var eqLen = (3 - (aBytes.length % 3)) % 3;\r\n        var sB64Enc = \"\";\r\n        for (var nMod3 = void 0, nLen = aBytes.length, nUint24 = 0, nIdx = 0; nIdx < nLen; nIdx++) {\r\n            nMod3 = nIdx % 3;\r\n            /* Uncomment the following line in order to split the output in lines 76-character long: */\r\n            /*\r\n            if (nIdx > 0 && (nIdx * 4 / 3) % 76 === 0) { sB64Enc += \"\\r\\n\"; }\r\n            */\r\n            nUint24 |= aBytes[nIdx] << (16 >>> nMod3 & 24);\r\n            if (nMod3 === 2 || aBytes.length - nIdx === 1) {\r\n                sB64Enc += String.fromCharCode(this.uint6ToB64(nUint24 >>> 18 & 63), this.uint6ToB64(nUint24 >>> 12 & 63), this.uint6ToB64(nUint24 >>> 6 & 63), this.uint6ToB64(nUint24 & 63));\r\n                nUint24 = 0;\r\n            }\r\n        }\r\n        return eqLen === 0 ? sB64Enc : sB64Enc.substring(0, sB64Enc.length - eqLen) + (eqLen === 1 ? \"=\" : \"==\");\r\n    };\r\n    /**\r\n     * Base64 string to array encoding helper\r\n     * @param nUint6\r\n     */\r\n    Base64Encode.prototype.uint6ToB64 = function (nUint6) {\r\n        return nUint6 < 26 ?\r\n            nUint6 + 65\r\n            : nUint6 < 52 ?\r\n                nUint6 + 71\r\n                : nUint6 < 62 ?\r\n                    nUint6 - 4\r\n                    : nUint6 === 62 ?\r\n                        43\r\n                        : nUint6 === 63 ?\r\n                            47\r\n                            :\r\n                                65;\r\n    };\r\n    return Base64Encode;\r\n}());\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Class which exposes APIs to decode base64 strings to plaintext. See here for implementation details:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\r\n */\r\nvar Base64Decode = /** @class */ (function () {\r\n    function Base64Decode() {\r\n    }\r\n    /**\r\n     * Returns a URL-safe plaintext decoded string from b64 encoded input.\r\n     * @param input\r\n     */\r\n    Base64Decode.prototype.decode = function (input) {\r\n        var encodedString = input.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n        switch (encodedString.length % 4) {\r\n            case 0:\r\n                break;\r\n            case 2:\r\n                encodedString += \"==\";\r\n                break;\r\n            case 3:\r\n                encodedString += \"=\";\r\n                break;\r\n            default:\r\n                throw new Error(\"Invalid base64 string\");\r\n        }\r\n        var inputUtf8Arr = this.base64DecToArr(encodedString);\r\n        return decodeURIComponent(BrowserStringUtils.utf8ArrToString(inputUtf8Arr));\r\n    };\r\n    /**\r\n     * Decodes base64 into Uint8Array\r\n     * @param base64String\r\n     * @param nBlockSize\r\n     */\r\n    Base64Decode.prototype.base64DecToArr = function (base64String, nBlockSize) {\r\n        var sB64Enc = base64String.replace(/[^A-Za-z0-9\\+\\/]/g, \"\");\r\n        var nInLen = sB64Enc.length;\r\n        var nOutLen = nBlockSize ? Math.ceil((nInLen * 3 + 1 >>> 2) / nBlockSize) * nBlockSize : nInLen * 3 + 1 >>> 2;\r\n        var aBytes = new Uint8Array(nOutLen);\r\n        for (var nMod3 = void 0, nMod4 = void 0, nUint24 = 0, nOutIdx = 0, nInIdx = 0; nInIdx < nInLen; nInIdx++) {\r\n            nMod4 = nInIdx & 3;\r\n            nUint24 |= this.b64ToUint6(sB64Enc.charCodeAt(nInIdx)) << 18 - 6 * nMod4;\r\n            if (nMod4 === 3 || nInLen - nInIdx === 1) {\r\n                for (nMod3 = 0; nMod3 < 3 && nOutIdx < nOutLen; nMod3++, nOutIdx++) {\r\n                    aBytes[nOutIdx] = nUint24 >>> (16 >>> nMod3 & 24) & 255;\r\n                }\r\n                nUint24 = 0;\r\n            }\r\n        }\r\n        return aBytes;\r\n    };\r\n    /**\r\n     * Base64 string to array decoding helper\r\n     * @param charNum\r\n     */\r\n    Base64Decode.prototype.b64ToUint6 = function (charNum) {\r\n        return charNum > 64 && charNum < 91 ?\r\n            charNum - 65\r\n            : charNum > 96 && charNum < 123 ?\r\n                charNum - 71\r\n                : charNum > 47 && charNum < 58 ?\r\n                    charNum + 4\r\n                    : charNum === 43 ?\r\n                        62\r\n                        : charNum === 47 ?\r\n                            63\r\n                            :\r\n                                0;\r\n    };\r\n    return Base64Decode;\r\n}());\n\n// Constant byte array length\r\nvar RANDOM_BYTE_ARR_LENGTH = 32;\r\n/**\r\n * Class which exposes APIs to generate PKCE codes and code verifiers.\r\n */\r\nvar PkceGenerator = /** @class */ (function () {\r\n    function PkceGenerator(cryptoObj) {\r\n        this.base64Encode = new Base64Encode();\r\n        this.cryptoObj = cryptoObj;\r\n    }\r\n    /**\r\n     * Generates PKCE Codes. See the RFC for more information: https://tools.ietf.org/html/rfc7636\r\n     */\r\n    PkceGenerator.prototype.generateCodes = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var codeVerifier, codeChallenge;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        codeVerifier = this.generateCodeVerifier();\r\n                        return [4 /*yield*/, this.generateCodeChallengeFromVerifier(codeVerifier)];\r\n                    case 1:\r\n                        codeChallenge = _a.sent();\r\n                        return [2 /*return*/, {\r\n                                verifier: codeVerifier,\r\n                                challenge: codeChallenge\r\n                            }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Generates a random 32 byte buffer and returns the base64\r\n     * encoded string to be used as a PKCE Code Verifier\r\n     */\r\n    PkceGenerator.prototype.generateCodeVerifier = function () {\r\n        try {\r\n            // Generate random values as utf-8\r\n            var buffer = new Uint8Array(RANDOM_BYTE_ARR_LENGTH);\r\n            this.cryptoObj.getRandomValues(buffer);\r\n            // encode verifier as base64\r\n            var pkceCodeVerifierB64 = this.base64Encode.urlEncodeArr(buffer);\r\n            return pkceCodeVerifierB64;\r\n        }\r\n        catch (e) {\r\n            throw BrowserAuthError.createPkceNotGeneratedError(e);\r\n        }\r\n    };\r\n    /**\r\n     * Creates a base64 encoded PKCE Code Challenge string from the\r\n     * hash created from the PKCE Code Verifier supplied\r\n     */\r\n    PkceGenerator.prototype.generateCodeChallengeFromVerifier = function (pkceCodeVerifier) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var pkceHashedCodeVerifier, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 2, , 3]);\r\n                        return [4 /*yield*/, this.cryptoObj.sha256Digest(pkceCodeVerifier)];\r\n                    case 1:\r\n                        pkceHashedCodeVerifier = _a.sent();\r\n                        // encode hash as base64\r\n                        return [2 /*return*/, this.base64Encode.urlEncodeArr(new Uint8Array(pkceHashedCodeVerifier))];\r\n                    case 2:\r\n                        e_1 = _a.sent();\r\n                        throw BrowserAuthError.createPkceNotGeneratedError(e_1);\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return PkceGenerator;\r\n}());\n\n// SHA-256 hashing algorithm\r\nvar HASH_ALG = \"SHA-256\";\r\n/**\r\n * This class implements functions used by the browser library to perform cryptography operations such as\r\n * hashing and encoding. It also has helper functions to validate the availability of specific APIs.\r\n */\r\nvar BrowserCrypto = /** @class */ (function () {\r\n    function BrowserCrypto() {\r\n        if (!(this.hasCryptoAPI())) {\r\n            throw BrowserAuthError.createCryptoNotAvailableError(\"Browser crypto or msCrypto object not available.\");\r\n        }\r\n    }\r\n    /**\r\n     * Returns a sha-256 hash of the given dataString as an ArrayBuffer.\r\n     * @param dataString\r\n     */\r\n    BrowserCrypto.prototype.sha256Digest = function (dataString) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var data;\r\n            return __generator(this, function (_a) {\r\n                data = BrowserStringUtils.stringToUtf8Arr(dataString);\r\n                return [2 /*return*/, this.hasIECrypto() ? this.getMSCryptoDigest(HASH_ALG, data) : this.getSubtleCryptoDigest(HASH_ALG, data)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Populates buffer with cryptographically random values.\r\n     * @param dataBuffer\r\n     */\r\n    BrowserCrypto.prototype.getRandomValues = function (dataBuffer) {\r\n        var cryptoObj = window[\"msCrypto\"] || window.crypto;\r\n        if (!cryptoObj.getRandomValues) {\r\n            throw BrowserAuthError.createCryptoNotAvailableError(\"getRandomValues does not exist.\");\r\n        }\r\n        cryptoObj.getRandomValues(dataBuffer);\r\n    };\r\n    /**\r\n     * Checks whether IE crypto (AKA msCrypto) is available.\r\n     */\r\n    BrowserCrypto.prototype.hasIECrypto = function () {\r\n        return !!window[\"msCrypto\"];\r\n    };\r\n    /**\r\n     * Check whether browser crypto is available.\r\n     */\r\n    BrowserCrypto.prototype.hasBrowserCrypto = function () {\r\n        return !!window.crypto;\r\n    };\r\n    /**\r\n     * Check whether IE crypto or other browser cryptography is available.\r\n     */\r\n    BrowserCrypto.prototype.hasCryptoAPI = function () {\r\n        return this.hasIECrypto() || this.hasBrowserCrypto();\r\n    };\r\n    /**\r\n     * Helper function for SHA digest.\r\n     * @param algorithm\r\n     * @param data\r\n     */\r\n    BrowserCrypto.prototype.getSubtleCryptoDigest = function (algorithm, data) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, window.crypto.subtle.digest(algorithm, data)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Helper function for SHA digest.\r\n     * @param algorithm\r\n     * @param data\r\n     */\r\n    BrowserCrypto.prototype.getMSCryptoDigest = function (algorithm, data) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                        var digestOperation = window[\"msCrypto\"].subtle.digest(algorithm, data.buffer);\r\n                        digestOperation.addEventListener(\"complete\", function (e) {\r\n                            resolve(e.target.result);\r\n                        });\r\n                        digestOperation.addEventListener(\"error\", function (error) {\r\n                            reject(error);\r\n                        });\r\n                    })];\r\n            });\r\n        });\r\n    };\r\n    return BrowserCrypto;\r\n}());\n\n/**\r\n * This class implements MSAL's crypto interface, which allows it to perform base64 encoding and decoding, generating cryptographically random GUIDs and\r\n * implementing Proof Key for Code Exchange specs for the OAuth Authorization Code Flow using PKCE (rfc here: https://tools.ietf.org/html/rfc7636).\r\n */\r\nvar CryptoOps = /** @class */ (function () {\r\n    function CryptoOps() {\r\n        // Browser crypto needs to be validated first before any other classes can be set.\r\n        this.browserCrypto = new BrowserCrypto();\r\n        this.b64Encode = new Base64Encode();\r\n        this.b64Decode = new Base64Decode();\r\n        this.guidGenerator = new GuidGenerator(this.browserCrypto);\r\n        this.pkceGenerator = new PkceGenerator(this.browserCrypto);\r\n    }\r\n    /**\r\n     * Creates a new random GUID - used to populate state and nonce.\r\n     * @returns string (GUID)\r\n     */\r\n    CryptoOps.prototype.createNewGuid = function () {\r\n        return this.guidGenerator.generateGuid();\r\n    };\r\n    /**\r\n     * Encodes input string to base64.\r\n     * @param input\r\n     */\r\n    CryptoOps.prototype.base64Encode = function (input) {\r\n        return this.b64Encode.encode(input);\r\n    };\r\n    /**\r\n     * Decodes input string from base64.\r\n     * @param input\r\n     */\r\n    CryptoOps.prototype.base64Decode = function (input) {\r\n        return this.b64Decode.decode(input);\r\n    };\r\n    /**\r\n     * Generates PKCE codes used in Authorization Code Flow.\r\n     */\r\n    CryptoOps.prototype.generatePkceCodes = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.pkceGenerator.generateCodes()];\r\n            });\r\n        });\r\n    };\r\n    return CryptoOps;\r\n}());\n\n/**\r\n * Abstract class which defines operations for a browser interaction handling class.\r\n */\r\nvar InteractionHandler = /** @class */ (function () {\r\n    function InteractionHandler(authCodeModule, storageImpl) {\r\n        this.authModule = authCodeModule;\r\n        this.browserStorage = storageImpl;\r\n    }\r\n    /**\r\n     * Function to handle response parameters from hash.\r\n     * @param locationHash\r\n     */\r\n    InteractionHandler.prototype.handleCodeResponse = function (locationHash) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var requestState, authCode, cachedNonceKey, cachedNonce, tokenResponse;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // Check that location hash isn't empty.\r\n                        if (StringUtils.isEmpty(locationHash)) {\r\n                            throw BrowserAuthError.createEmptyHashError(locationHash);\r\n                        }\r\n                        requestState = this.browserStorage.getItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.REQUEST_STATE), CacheSchemaType.TEMPORARY);\r\n                        authCode = this.authModule.handleFragmentResponse(locationHash, requestState);\r\n                        cachedNonceKey = this.browserStorage.generateNonceKey(requestState);\r\n                        cachedNonce = this.browserStorage.getItem(this.browserStorage.generateCacheKey(cachedNonceKey), CacheSchemaType.TEMPORARY);\r\n                        // Assign code to request\r\n                        this.authCodeRequest.code = authCode;\r\n                        return [4 /*yield*/, this.authModule.acquireToken(this.authCodeRequest, cachedNonce, requestState)];\r\n                    case 1:\r\n                        tokenResponse = _a.sent();\r\n                        this.browserStorage.cleanRequest();\r\n                        return [2 /*return*/, tokenResponse];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return InteractionHandler;\r\n}());\n\nvar RedirectHandler = /** @class */ (function (_super) {\r\n    __extends(RedirectHandler, _super);\r\n    function RedirectHandler() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Redirects window to given URL.\r\n     * @param urlNavigate\r\n     */\r\n    RedirectHandler.prototype.initiateAuthRequest = function (requestUrl, authCodeRequest, redirectStartPage, browserCrypto) {\r\n        // Navigate if valid URL\r\n        if (!StringUtils.isEmpty(requestUrl)) {\r\n            // Cache start page, returns to this page after redirectUri if navigateToLoginRequestUrl is true\r\n            if (redirectStartPage) {\r\n                this.browserStorage.setItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.ORIGIN_URI), redirectStartPage, CacheSchemaType.TEMPORARY);\r\n            }\r\n            // Set interaction status in the library.\r\n            this.browserStorage.setItem(this.browserStorage.generateCacheKey(BrowserConstants.INTERACTION_STATUS_KEY), BrowserConstants.INTERACTION_IN_PROGRESS_VALUE, CacheSchemaType.TEMPORARY);\r\n            this.browserStorage.cacheCodeRequest(authCodeRequest, browserCrypto);\r\n            this.authModule.logger.infoPii(\"Navigate to:\" + requestUrl);\r\n            var isIframedApp = BrowserUtils.isInIframe();\r\n            if (isIframedApp) {\r\n                // If we are not in top frame, we shouldn't redirect. This is also handled by the service.\r\n                throw BrowserAuthError.createRedirectInIframeError(isIframedApp);\r\n            }\r\n            // Navigate window to request URL\r\n            BrowserUtils.navigateWindow(requestUrl);\r\n        }\r\n        else {\r\n            // Throw error if request URL is empty.\r\n            this.authModule.logger.info(\"Navigate url is empty\");\r\n            throw BrowserAuthError.createEmptyNavigationUriError();\r\n        }\r\n        // Return this window handle. Not used for redirect, but needed for API definition.\r\n        return window;\r\n    };\r\n    /**\r\n     * Handle authorization code response in the window.\r\n     * @param hash\r\n     */\r\n    RedirectHandler.prototype.handleCodeResponse = function (locationHash, browserCrypto) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var requestState, authCode, cachedNonceKey, cachedNonce, tokenResponse;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // Check that location hash isn't empty.\r\n                        if (StringUtils.isEmpty(locationHash)) {\r\n                            throw BrowserAuthError.createEmptyHashError(locationHash);\r\n                        }\r\n                        // Interaction is completed - remove interaction status.\r\n                        this.browserStorage.removeItem(this.browserStorage.generateCacheKey(BrowserConstants.INTERACTION_STATUS_KEY));\r\n                        requestState = this.browserStorage.getItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.REQUEST_STATE), CacheSchemaType.TEMPORARY);\r\n                        authCode = this.authModule.handleFragmentResponse(locationHash, requestState);\r\n                        cachedNonceKey = this.browserStorage.generateNonceKey(requestState);\r\n                        cachedNonce = this.browserStorage.getItem(this.browserStorage.generateCacheKey(cachedNonceKey), CacheSchemaType.TEMPORARY);\r\n                        this.authCodeRequest = this.browserStorage.getCachedRequest(requestState, browserCrypto);\r\n                        this.authCodeRequest.code = authCode;\r\n                        return [4 /*yield*/, this.authModule.acquireToken(this.authCodeRequest, cachedNonce, requestState)];\r\n                    case 1:\r\n                        tokenResponse = _a.sent();\r\n                        this.browserStorage.cleanRequest();\r\n                        return [2 /*return*/, tokenResponse];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return RedirectHandler;\r\n}(InteractionHandler));\n\n/**\r\n * This class implements the interaction handler base class for browsers. It is written specifically for handling\r\n * popup window scenarios. It includes functions for monitoring the popup window for a hash.\r\n */\r\nvar PopupHandler = /** @class */ (function (_super) {\r\n    __extends(PopupHandler, _super);\r\n    function PopupHandler(authCodeModule, storageImpl) {\r\n        var _this = _super.call(this, authCodeModule, storageImpl) || this;\r\n        // Properly sets this reference for the unload event.\r\n        _this.unloadWindow = _this.unloadWindow.bind(_this);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Opens a popup window with given request Url.\r\n     * @param requestUrl\r\n     */\r\n    PopupHandler.prototype.initiateAuthRequest = function (requestUrl, authCodeRequest) {\r\n        // Check that request url is not empty.\r\n        if (!StringUtils.isEmpty(requestUrl)) {\r\n            // Save auth code request\r\n            this.authCodeRequest = authCodeRequest;\r\n            // Set interaction status in the library.\r\n            this.browserStorage.setItem(this.browserStorage.generateCacheKey(BrowserConstants.INTERACTION_STATUS_KEY), BrowserConstants.INTERACTION_IN_PROGRESS_VALUE, CacheSchemaType.TEMPORARY);\r\n            this.authModule.logger.infoPii(\"Navigate to:\" + requestUrl);\r\n            // Open the popup window to requestUrl.\r\n            return this.openPopup(requestUrl, Constants.LIBRARY_NAME, BrowserConstants.POPUP_WIDTH, BrowserConstants.POPUP_HEIGHT);\r\n        }\r\n        else {\r\n            // Throw error if request URL is empty.\r\n            this.authModule.logger.error(\"Navigate url is empty\");\r\n            throw BrowserAuthError.createEmptyNavigationUriError();\r\n        }\r\n    };\r\n    /**\r\n     * Monitors a window until it loads a url with a known hash, or hits a specified timeout.\r\n     * @param popupWindow - window that is being monitored\r\n     * @param timeout - milliseconds until timeout\r\n     * @param urlNavigate - url that was navigated to\r\n     */\r\n    PopupHandler.prototype.monitorPopupForHash = function (popupWindow, timeout) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var maxTicks = timeout / BrowserConstants.POLL_INTERVAL_MS;\r\n            var ticks = 0;\r\n            var intervalId = setInterval(function () {\r\n                if (popupWindow.closed) {\r\n                    // Window is closed\r\n                    _this.cleanPopup();\r\n                    clearInterval(intervalId);\r\n                    reject(BrowserAuthError.createUserCancelledError());\r\n                    return;\r\n                }\r\n                var href;\r\n                try {\r\n                    /*\r\n                     * Will throw if cross origin,\r\n                     * which should be caught and ignored\r\n                     * since we need the interval to keep running while on STS UI.\r\n                     */\r\n                    href = popupWindow.location.href;\r\n                }\r\n                catch (e) { }\r\n                // Don't process blank pages or cross domain\r\n                if (!href || href === \"about:blank\") {\r\n                    return;\r\n                }\r\n                // Only run clock when we are on same domain\r\n                ticks++;\r\n                if (UrlString.hashContainsKnownProperties(href)) {\r\n                    // Success case\r\n                    var contentHash = popupWindow.location.hash;\r\n                    _this.cleanPopup(popupWindow);\r\n                    clearInterval(intervalId);\r\n                    resolve(contentHash);\r\n                    return;\r\n                }\r\n                else if (ticks > maxTicks) {\r\n                    // Timeout error\r\n                    _this.cleanPopup(popupWindow);\r\n                    clearInterval(intervalId);\r\n                    reject(BrowserAuthError.createMonitorWindowTimeoutError());\r\n                    return;\r\n                }\r\n            }, BrowserConstants.POLL_INTERVAL_MS);\r\n        });\r\n    };\r\n    /**\r\n     * @hidden\r\n     *\r\n     * Configures popup window for login.\r\n     *\r\n     * @param urlNavigate\r\n     * @param title\r\n     * @param popUpWidth\r\n     * @param popUpHeight\r\n     * @ignore\r\n     * @hidden\r\n     */\r\n    PopupHandler.prototype.openPopup = function (urlNavigate, title, popUpWidth, popUpHeight) {\r\n        try {\r\n            /**\r\n             * adding winLeft and winTop to account for dual monitor\r\n             * using screenLeft and screenTop for IE8 and earlier\r\n             */\r\n            var winLeft = window.screenLeft ? window.screenLeft : window.screenX;\r\n            var winTop = window.screenTop ? window.screenTop : window.screenY;\r\n            /**\r\n             * window.innerWidth displays browser window\"s height and width excluding toolbars\r\n             * using document.documentElement.clientWidth for IE8 and earlier\r\n             */\r\n            var width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n            var height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\r\n            var left = Math.max(0, ((width / 2) - (popUpWidth / 2)) + winLeft);\r\n            var top_1 = Math.max(0, ((height / 2) - (popUpHeight / 2)) + winTop);\r\n            // open the window\r\n            var popupWindow = window.open(urlNavigate, title, \"width=\" + popUpWidth + \", height=\" + popUpHeight + \", top=\" + top_1 + \", left=\" + left);\r\n            if (!popupWindow) {\r\n                throw BrowserAuthError.createEmptyWindowCreatedError();\r\n            }\r\n            if (popupWindow.focus) {\r\n                popupWindow.focus();\r\n            }\r\n            this.currentWindow = popupWindow;\r\n            window.addEventListener(\"beforeunload\", this.unloadWindow);\r\n            return popupWindow;\r\n        }\r\n        catch (e) {\r\n            this.authModule.logger.error(\"error opening popup \" + e.message);\r\n            this.browserStorage.removeItem(this.browserStorage.generateCacheKey(BrowserConstants.INTERACTION_STATUS_KEY));\r\n            throw BrowserAuthError.createPopupWindowError(e.toString());\r\n        }\r\n    };\r\n    /**\r\n     * Event callback to unload main window.\r\n     */\r\n    PopupHandler.prototype.unloadWindow = function (e) {\r\n        this.browserStorage.cleanRequest();\r\n        this.currentWindow.close();\r\n        // Guarantees browser unload will happen, so no other errors will be thrown.\r\n        delete e[\"returnValue\"];\r\n    };\r\n    /**\r\n     * Closes popup, removes any state vars created during popup calls.\r\n     * @param popupWindow\r\n     */\r\n    PopupHandler.prototype.cleanPopup = function (popupWindow) {\r\n        if (popupWindow) {\r\n            // Close window.\r\n            popupWindow.close();\r\n        }\r\n        // Remove window unload function\r\n        window.removeEventListener(\"beforeunload\", this.unloadWindow);\r\n        // Interaction is completed - remove interaction status.\r\n        this.browserStorage.removeItem(this.browserStorage.generateCacheKey(BrowserConstants.INTERACTION_STATUS_KEY));\r\n    };\r\n    return PopupHandler;\r\n}(InteractionHandler));\n\nvar SilentHandler = /** @class */ (function (_super) {\r\n    __extends(SilentHandler, _super);\r\n    function SilentHandler(authCodeModule, storageImpl, configuredLoadFrameTimeout) {\r\n        var _this = _super.call(this, authCodeModule, storageImpl) || this;\r\n        _this.loadFrameTimeout = configuredLoadFrameTimeout;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a hidden iframe to given URL using user-requested scopes as an id.\r\n     * @param urlNavigate\r\n     * @param userRequestScopes\r\n     */\r\n    SilentHandler.prototype.initiateAuthRequest = function (requestUrl, authCodeRequest, userRequestScopes) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var frameName, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (StringUtils.isEmpty(requestUrl)) {\r\n                            // Throw error if request URL is empty.\r\n                            this.authModule.logger.info(\"Navigate url is empty\");\r\n                            throw BrowserAuthError.createEmptyNavigationUriError();\r\n                        }\r\n                        // Save auth code request\r\n                        this.authCodeRequest = authCodeRequest;\r\n                        frameName = userRequestScopes ? \"msalTokenFrame\" + userRequestScopes : \"msalTokenFrame\";\r\n                        if (!this.loadFrameTimeout) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.loadFrame(requestUrl, frameName)];\r\n                    case 1:\r\n                        _a = _b.sent();\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        _a = this.loadFrameSync(requestUrl, frameName);\r\n                        _b.label = 3;\r\n                    case 3: return [2 /*return*/, _a];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Monitors an iframe content window until it loads a url with a known hash, or hits a specified timeout.\r\n     * @param iframe\r\n     * @param timeout\r\n     */\r\n    SilentHandler.prototype.monitorIframeForHash = function (iframe, timeout) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            /*\r\n             * Polling for iframes can be purely timing based,\r\n             * since we don't need to account for interaction.\r\n             */\r\n            var nowMark = window.performance.now();\r\n            var timeoutMark = nowMark + timeout;\r\n            var intervalId = setInterval(function () {\r\n                if (window.performance.now() > timeoutMark) {\r\n                    _this.removeHiddenIframe(iframe);\r\n                    clearInterval(intervalId);\r\n                    reject(BrowserAuthError.createMonitorWindowTimeoutError());\r\n                    return;\r\n                }\r\n                var href;\r\n                try {\r\n                    /*\r\n                     * Will throw if cross origin,\r\n                     * which should be caught and ignored\r\n                     * since we need the interval to keep running while on STS UI.\r\n                     */\r\n                    href = iframe.contentWindow.location.href;\r\n                }\r\n                catch (e) { }\r\n                if (UrlString.hashContainsKnownProperties(href)) {\r\n                    // Success case\r\n                    var contentHash = iframe.contentWindow.location.hash;\r\n                    _this.removeHiddenIframe(iframe);\r\n                    clearInterval(intervalId);\r\n                    resolve(contentHash);\r\n                    return;\r\n                }\r\n            }, BrowserConstants.POLL_INTERVAL_MS);\r\n        });\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Loads iframe with authorization endpoint URL\r\n     * @ignore\r\n     */\r\n    SilentHandler.prototype.loadFrame = function (urlNavigate, frameName) {\r\n        /*\r\n         * This trick overcomes iframe navigation in IE\r\n         * IE does not load the page consistently in iframe\r\n         */\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            setTimeout(function () {\r\n                var frameHandle = _this.loadFrameSync(urlNavigate, frameName);\r\n                if (!frameHandle) {\r\n                    reject(\"Unable to load iframe with name: \" + frameName);\r\n                    return;\r\n                }\r\n                resolve(frameHandle);\r\n            }, _this.loadFrameTimeout);\r\n        });\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Loads the iframe synchronously when the navigateTimeFrame is set to `0`\r\n     * @param urlNavigate\r\n     * @param frameName\r\n     * @param logger\r\n     */\r\n    SilentHandler.prototype.loadFrameSync = function (urlNavigate, frameName) {\r\n        var frameHandle = this.getHiddenIframe(frameName);\r\n        // returning to handle null in loadFrame, also to avoid null object access errors\r\n        if (!frameHandle) {\r\n            return null;\r\n        }\r\n        else if (frameHandle.src === \"\" || frameHandle.src === \"about:blank\") {\r\n            frameHandle.src = urlNavigate;\r\n        }\r\n        return frameHandle;\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Creates a new hidden iframe or gets an existing one for silent token renewal.\r\n     * @ignore\r\n     */\r\n    SilentHandler.prototype.getHiddenIframe = function (iframeId) {\r\n        if (typeof iframeId === \"undefined\") {\r\n            return null;\r\n        }\r\n        var authFrame = document.getElementById(iframeId);\r\n        if (!authFrame) {\r\n            if (document.createElement &&\r\n                document.documentElement &&\r\n                (window.navigator.userAgent.indexOf(\"MSIE 5.0\") === -1)) {\r\n                var ifr = document.createElement(\"iframe\");\r\n                ifr.setAttribute(\"id\", iframeId);\r\n                ifr.style.visibility = \"hidden\";\r\n                ifr.style.position = \"absolute\";\r\n                ifr.style.width = ifr.style.height = \"0\";\r\n                ifr.style.border = \"0\";\r\n                ifr.setAttribute(\"sandbox\", \"allow-scripts allow-same-origin allow-forms\");\r\n                authFrame = document.getElementsByTagName(\"body\")[0].appendChild(ifr);\r\n            }\r\n            else if (document.body && document.body.insertAdjacentHTML) {\r\n                document.body.insertAdjacentHTML(\"beforeend\", \"<iframe name='\" + iframeId + \"' id='\" + iframeId + \"' style='display:none'></iframe>\");\r\n            }\r\n            if (window.frames && window.frames[iframeId]) {\r\n                authFrame = window.frames[iframeId];\r\n            }\r\n        }\r\n        return authFrame;\r\n    };\r\n    /**\r\n     * @hidden\r\n     * Removes a hidden iframe from the page.\r\n     * @ignore\r\n     */\r\n    SilentHandler.prototype.removeHiddenIframe = function (iframe) {\r\n        if (document.body === iframe.parentNode) {\r\n            document.body.removeChild(iframe);\r\n        }\r\n    };\r\n    return SilentHandler;\r\n}(InteractionHandler));\n\nvar version$1 = \"2.0.1\";\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar BrowserProtocolUtils = /** @class */ (function () {\r\n    function BrowserProtocolUtils() {\r\n    }\r\n    /**\r\n     * Extracts the BrowserStateObject from the state string.\r\n     * @param browserCrypto\r\n     * @param state\r\n     */\r\n    BrowserProtocolUtils.extractBrowserRequestState = function (browserCrypto, state) {\r\n        if (StringUtils.isEmpty(state)) {\r\n            return null;\r\n        }\r\n        try {\r\n            var requestStateObj = ProtocolUtils.parseRequestState(browserCrypto, state);\r\n            return requestStateObj.libraryState.meta;\r\n        }\r\n        catch (e) {\r\n            throw ClientAuthError.createInvalidStateError(state, e);\r\n        }\r\n    };\r\n    return BrowserProtocolUtils;\r\n}());\n\n/**\r\n * The PublicClientApplication class is the object exposed by the library to perform authentication and authorization functions in Single Page Applications\r\n * to obtain JWT tokens as described in the OAuth 2.0 Authorization Code Flow with PKCE specification.\r\n */\r\nvar PublicClientApplication = /** @class */ (function () {\r\n    /**\r\n     * @constructor\r\n     * Constructor for the PublicClientApplication used to instantiate the PublicClientApplication object\r\n     *\r\n     * Important attributes in the Configuration object for auth are:\r\n     * - clientID: the application ID of your application. You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\r\n     * - authority: the authority URL for your application.\r\n     * - redirect_uri: the uri of your application registered in the portal.\r\n     *\r\n     * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\r\n     * It is of the form https://login.microsoftonline.com/{Enter_the_Tenant_Info_Here}\r\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\r\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\r\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\r\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\r\n     *\r\n     * In Azure B2C, authority is of the form https://{instance}/tfp/{tenant}/{policyName}/\r\n     * Full B2C functionality will be available in this library in future versions.\r\n     *\r\n     * @param {@link (Configuration:type)} configuration object for the MSAL PublicClientApplication instance\r\n     */\r\n    function PublicClientApplication(configuration) {\r\n        // Set the configuration.\r\n        this.config = buildConfiguration(configuration);\r\n        // Initialize the crypto class.\r\n        this.browserCrypto = new CryptoOps();\r\n        // Initialize the network module class.\r\n        this.networkClient = this.config.system.networkClient;\r\n        // Initialize the browser storage class.\r\n        this.browserStorage = new BrowserStorage(this.config.auth.clientId, this.config.cache);\r\n        // Initialize logger\r\n        this.logger = new Logger(this.config.system.loggerOptions);\r\n        // Initialize default authority instance\r\n        TrustedAuthority.setTrustedAuthoritiesFromConfig(this.config.auth.knownAuthorities, this.config.auth.cloudDiscoveryMetadata);\r\n        this.defaultAuthority = null;\r\n    }\r\n    // #region Redirect Flow\r\n    /**\r\n     * Event handler function which allows users to fire events after the PublicClientApplication object\r\n     * has loaded during redirect flows. This should be invoked on all page loads involved in redirect\r\n     * auth flows.\r\n     * @returns {Promise.<AuthenticationResult | null>} token response or null. If the return value is null, then no auth redirect was detected.\r\n     */\r\n    PublicClientApplication.prototype.handleRedirectPromise = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.handleRedirectResponse()];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Checks if navigateToLoginRequestUrl is set, and:\r\n     * - if true, performs logic to cache and navigate\r\n     * - if false, handles hash string and parses response\r\n     */\r\n    PublicClientApplication.prototype.handleRedirectResponse = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var responseHash, loginRequestUrl, loginRequestUrlNormalized, currentUrlNormalized, hashKey, homepage;\r\n            return __generator(this, function (_a) {\r\n                responseHash = this.getRedirectResponseHash();\r\n                if (!responseHash) {\r\n                    // Not a recognized server response hash or hash not associated with a redirect request\r\n                    return [2 /*return*/, null];\r\n                }\r\n                loginRequestUrl = this.browserStorage.getItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.ORIGIN_URI), CacheSchemaType.TEMPORARY);\r\n                loginRequestUrlNormalized = UrlString.removeHashFromUrl(loginRequestUrl || \"\");\r\n                currentUrlNormalized = UrlString.removeHashFromUrl(window.location.href);\r\n                if (loginRequestUrlNormalized === currentUrlNormalized && this.config.auth.navigateToLoginRequestUrl) {\r\n                    if (loginRequestUrl.indexOf(\"#\") > -1) {\r\n                        // Replace current hash with non-msal hash, if present\r\n                        BrowserUtils.replaceHash(loginRequestUrl);\r\n                    }\r\n                    // We are on the page we need to navigate to - handle hash\r\n                    return [2 /*return*/, this.handleHash(responseHash)];\r\n                }\r\n                else if (!this.config.auth.navigateToLoginRequestUrl) {\r\n                    return [2 /*return*/, this.handleHash(responseHash)];\r\n                }\r\n                else if (!BrowserUtils.isInIframe()) {\r\n                    hashKey = this.browserStorage.generateCacheKey(TemporaryCacheKeys.URL_HASH);\r\n                    this.browserStorage.setItem(hashKey, responseHash, CacheSchemaType.TEMPORARY);\r\n                    if (!loginRequestUrl || loginRequestUrl === \"null\") {\r\n                        homepage = BrowserUtils.getHomepage();\r\n                        // Cache the homepage under ORIGIN_URI to ensure cached hash is processed on homepage\r\n                        this.browserStorage.setItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.ORIGIN_URI), homepage, CacheSchemaType.TEMPORARY);\r\n                        this.logger.warning(\"Unable to get valid login request url from cache, redirecting to home page\");\r\n                        BrowserUtils.navigateWindow(homepage, true);\r\n                    }\r\n                    else {\r\n                        // Navigate to page that initiated the redirect request\r\n                        BrowserUtils.navigateWindow(loginRequestUrl, true);\r\n                    }\r\n                }\r\n                return [2 /*return*/, null];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets the response hash for a redirect request\r\n     * Returns null if interactionType in the state value is not \"redirect\" or the hash does not contain known properties\r\n     * @returns {string}\r\n     */\r\n    PublicClientApplication.prototype.getRedirectResponseHash = function () {\r\n        // Get current location hash from window or cache.\r\n        var hash = window.location.hash;\r\n        var isResponseHash = UrlString.hashContainsKnownProperties(hash);\r\n        var cachedHash = this.browserStorage.getItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.URL_HASH), CacheSchemaType.TEMPORARY);\r\n        this.browserStorage.removeItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.URL_HASH));\r\n        var responseHash = isResponseHash ? hash : cachedHash;\r\n        if (responseHash) {\r\n            // Deserialize hash fragment response parameters.\r\n            var serverParams = UrlString.getDeserializedHash(responseHash);\r\n            var platformStateObj = BrowserProtocolUtils.extractBrowserRequestState(this.browserCrypto, serverParams.state);\r\n            if (platformStateObj.interactionType !== InteractionType.REDIRECT) {\r\n                return null;\r\n            }\r\n            else {\r\n                BrowserUtils.clearHash();\r\n                return responseHash;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Checks if hash exists and handles in window.\r\n     * @param responseHash\r\n     * @param interactionHandler\r\n     */\r\n    PublicClientApplication.prototype.handleHash = function (responseHash) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var encodedTokenRequest, cachedRequest, serverTelemetryManager, currentAuthority, authClient, interactionHandler, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // There is no hash - clean cache and return null.\r\n                        if (StringUtils.isEmpty(responseHash)) {\r\n                            this.browserStorage.cleanRequest();\r\n                            return [2 /*return*/, null];\r\n                        }\r\n                        encodedTokenRequest = this.browserStorage.getItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS), CacheSchemaType.TEMPORARY);\r\n                        cachedRequest = JSON.parse(this.browserCrypto.base64Decode(encodedTokenRequest));\r\n                        serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.handleRedirectPromise, cachedRequest.correlationId);\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        currentAuthority = this.browserStorage.getCachedAuthority();\r\n                        return [4 /*yield*/, this.createAuthCodeClient(serverTelemetryManager, currentAuthority)];\r\n                    case 2:\r\n                        authClient = _a.sent();\r\n                        interactionHandler = new RedirectHandler(authClient, this.browserStorage);\r\n                        return [2 /*return*/, interactionHandler.handleCodeResponse(responseHash, this.browserCrypto)];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        serverTelemetryManager.cacheFailedRequest(e_1);\r\n                        this.browserStorage.cleanRequest();\r\n                        throw e_1;\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Use when initiating the login process by redirecting the user's browser to the authorization endpoint. This function redirects the page, so\r\n     * any code that follows this function will not execute.\r\n     *\r\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\r\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\r\n     *\r\n     * @param {@link (RedirectRequest:type)}\r\n     */\r\n    PublicClientApplication.prototype.loginRedirect = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.acquireTokenRedirect(request || DEFAULT_REQUEST)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Use when you want to obtain an access_token for your API by redirecting the user's browser window to the authorization endpoint. This function redirects\r\n     * the page, so any code that follows this function will not execute.\r\n     *\r\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\r\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\r\n     *\r\n     * @param {@link (RedirectRequest:type)}\r\n     */\r\n    PublicClientApplication.prototype.acquireTokenRedirect = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var validRequest, serverTelemetryManager, authCodeRequest, authClient, interactionHandler, navigateUrl, redirectStartPage, e_2;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        validRequest = this.preflightInteractiveRequest(request, InteractionType.REDIRECT);\r\n                        serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenRedirect, validRequest.correlationId);\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 5, , 6]);\r\n                        return [4 /*yield*/, this.initializeAuthorizationCodeRequest(validRequest)];\r\n                    case 2:\r\n                        authCodeRequest = _a.sent();\r\n                        return [4 /*yield*/, this.createAuthCodeClient(serverTelemetryManager, validRequest.authority)];\r\n                    case 3:\r\n                        authClient = _a.sent();\r\n                        interactionHandler = new RedirectHandler(authClient, this.browserStorage);\r\n                        return [4 /*yield*/, authClient.getAuthCodeUrl(validRequest)];\r\n                    case 4:\r\n                        navigateUrl = _a.sent();\r\n                        redirectStartPage = (request && request.redirectStartPage) || window.location.href;\r\n                        // Show the UI once the url has been created. Response will come back in the hash, which will be handled in the handleRedirectCallback function.\r\n                        interactionHandler.initiateAuthRequest(navigateUrl, authCodeRequest, redirectStartPage, this.browserCrypto);\r\n                        return [3 /*break*/, 6];\r\n                    case 5:\r\n                        e_2 = _a.sent();\r\n                        serverTelemetryManager.cacheFailedRequest(e_2);\r\n                        this.browserStorage.cleanRequest();\r\n                        throw e_2;\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // #endregion\r\n    // #region Popup Flow\r\n    /**\r\n     * Use when initiating the login process via opening a popup window in the user's browser\r\n     *\r\n     * @param {@link (PopupRequest:type)}\r\n     *\r\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n     */\r\n    PublicClientApplication.prototype.loginPopup = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.acquireTokenPopup(request || DEFAULT_REQUEST)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Use when you want to obtain an access_token for your API via opening a popup window in the user's browser\r\n     * @param {@link (PopupRequest:type)}\r\n     *\r\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n     */\r\n    PublicClientApplication.prototype.acquireTokenPopup = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var validRequest, serverTelemetryManager, authCodeRequest, authClient, navigateUrl, interactionHandler, popupWindow, hash, e_3;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        validRequest = this.preflightInteractiveRequest(request, InteractionType.POPUP);\r\n                        serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenPopup, validRequest.correlationId);\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 7, , 8]);\r\n                        return [4 /*yield*/, this.initializeAuthorizationCodeRequest(validRequest)];\r\n                    case 2:\r\n                        authCodeRequest = _a.sent();\r\n                        return [4 /*yield*/, this.createAuthCodeClient(serverTelemetryManager, validRequest.authority)];\r\n                    case 3:\r\n                        authClient = _a.sent();\r\n                        return [4 /*yield*/, authClient.getAuthCodeUrl(validRequest)];\r\n                    case 4:\r\n                        navigateUrl = _a.sent();\r\n                        interactionHandler = new PopupHandler(authClient, this.browserStorage);\r\n                        popupWindow = interactionHandler.initiateAuthRequest(navigateUrl, authCodeRequest);\r\n                        return [4 /*yield*/, interactionHandler.monitorPopupForHash(popupWindow, this.config.system.windowHashTimeout)];\r\n                    case 5:\r\n                        hash = _a.sent();\r\n                        return [4 /*yield*/, interactionHandler.handleCodeResponse(hash)];\r\n                    case 6: \r\n                    // Handle response from hash string.\r\n                    return [2 /*return*/, _a.sent()];\r\n                    case 7:\r\n                        e_3 = _a.sent();\r\n                        serverTelemetryManager.cacheFailedRequest(e_3);\r\n                        this.browserStorage.cleanRequest();\r\n                        throw e_3;\r\n                    case 8: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // #endregion\r\n    // #region Silent Flow\r\n    /**\r\n     * This function uses a hidden iframe to fetch an authorization code from the eSTS. There are cases where this may not work:\r\n     * - Any browser using a form of Intelligent Tracking Prevention\r\n     * - If there is not an established session with the service\r\n     *\r\n     * In these cases, the request must be done inside a popup or full frame redirect.\r\n     *\r\n     * For the cases where interaction is required, you cannot send a request with prompt=none.\r\n     *\r\n     * If your refresh token has expired, you can use this function to fetch a new set of tokens silently as long as\r\n     * you session on the server still exists.\r\n     * @param {@link AuthorizationUrlRequest}\r\n     *\r\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n     */\r\n    PublicClientApplication.prototype.ssoSilent = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var silentRequest, serverTelemetryManager, authCodeRequest, scopeString, authClient, navigateUrl, e_4;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // block the reload if it occurred inside a hidden iframe\r\n                        BrowserUtils.blockReloadInHiddenIframes();\r\n                        // Check that we have some SSO data\r\n                        if (StringUtils.isEmpty(request.loginHint) && StringUtils.isEmpty(request.sid)) {\r\n                            throw BrowserAuthError.createSilentSSOInsufficientInfoError();\r\n                        }\r\n                        // Check that prompt is set to none, throw error if it is set to anything else.\r\n                        if (request.prompt && request.prompt !== PromptValue.NONE) {\r\n                            throw BrowserAuthError.createSilentPromptValueError(request.prompt);\r\n                        }\r\n                        silentRequest = this.initializeAuthorizationRequest(__assign(__assign({}, request), { prompt: PromptValue.NONE }), InteractionType.SILENT);\r\n                        serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.ssoSilent, silentRequest.correlationId);\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 6, , 7]);\r\n                        return [4 /*yield*/, this.initializeAuthorizationCodeRequest(silentRequest)];\r\n                    case 2:\r\n                        authCodeRequest = _a.sent();\r\n                        scopeString = silentRequest.scopes ? silentRequest.scopes.join(\" \") : \"\";\r\n                        return [4 /*yield*/, this.createAuthCodeClient(serverTelemetryManager, silentRequest.authority)];\r\n                    case 3:\r\n                        authClient = _a.sent();\r\n                        return [4 /*yield*/, authClient.getAuthCodeUrl(silentRequest)];\r\n                    case 4:\r\n                        navigateUrl = _a.sent();\r\n                        return [4 /*yield*/, this.silentTokenHelper(navigateUrl, authCodeRequest, authClient, scopeString)];\r\n                    case 5: return [2 /*return*/, _a.sent()];\r\n                    case 6:\r\n                        e_4 = _a.sent();\r\n                        serverTelemetryManager.cacheFailedRequest(e_4);\r\n                        this.browserStorage.cleanRequest();\r\n                        throw e_4;\r\n                    case 7: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Use this function to obtain a token before every call to the API / resource provider\r\n     *\r\n     * MSAL return's a cached token when available\r\n     * Or it send's a request to the STS to obtain a new token using a refresh token.\r\n     *\r\n     * @param {@link (SilentRequest:type)}\r\n     *\r\n     * To renew idToken, please pass clientId as the only scope in the Authentication Parameters\r\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n     *\r\n     */\r\n    PublicClientApplication.prototype.acquireTokenSilent = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var silentRequest, serverTelemetryManager, silentAuthClient, e_5, isServerError, isInteractionRequiredError, isInvalidGrantError, silentAuthUrlRequest, authCodeRequest, authClient, navigateUrl, scopeString, e_6;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // block the reload if it occurred inside a hidden iframe\r\n                        BrowserUtils.blockReloadInHiddenIframes();\r\n                        silentRequest = __assign(__assign({}, request), this.initializeBaseRequest(request));\r\n                        serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenSilent_silentFlow, silentRequest.correlationId);\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 4, , 12]);\r\n                        return [4 /*yield*/, this.createSilentFlowClient(serverTelemetryManager, silentRequest.authority)];\r\n                    case 2:\r\n                        silentAuthClient = _a.sent();\r\n                        return [4 /*yield*/, silentAuthClient.acquireToken(silentRequest)];\r\n                    case 3: \r\n                    // Send request to renew token. Auth module will throw errors if token cannot be renewed.\r\n                    return [2 /*return*/, _a.sent()];\r\n                    case 4:\r\n                        e_5 = _a.sent();\r\n                        serverTelemetryManager.cacheFailedRequest(e_5);\r\n                        isServerError = e_5 instanceof ServerError;\r\n                        isInteractionRequiredError = e_5 instanceof InteractionRequiredAuthError;\r\n                        isInvalidGrantError = (e_5.errorCode === BrowserConstants.INVALID_GRANT_ERROR);\r\n                        if (!(isServerError && isInvalidGrantError && !isInteractionRequiredError)) return [3 /*break*/, 11];\r\n                        silentAuthUrlRequest = this.initializeAuthorizationRequest(__assign(__assign({}, silentRequest), { redirectUri: request.redirectUri, prompt: PromptValue.NONE }), InteractionType.SILENT);\r\n                        serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenSilent_authCode, silentAuthUrlRequest.correlationId);\r\n                        _a.label = 5;\r\n                    case 5:\r\n                        _a.trys.push([5, 10, , 11]);\r\n                        return [4 /*yield*/, this.initializeAuthorizationCodeRequest(silentAuthUrlRequest)];\r\n                    case 6:\r\n                        authCodeRequest = _a.sent();\r\n                        return [4 /*yield*/, this.createAuthCodeClient(serverTelemetryManager, silentAuthUrlRequest.authority)];\r\n                    case 7:\r\n                        authClient = _a.sent();\r\n                        return [4 /*yield*/, authClient.getAuthCodeUrl(silentAuthUrlRequest)];\r\n                    case 8:\r\n                        navigateUrl = _a.sent();\r\n                        scopeString = silentAuthUrlRequest.scopes ? silentAuthUrlRequest.scopes.join(\" \") : \"\";\r\n                        return [4 /*yield*/, this.silentTokenHelper(navigateUrl, authCodeRequest, authClient, scopeString)];\r\n                    case 9: return [2 /*return*/, _a.sent()];\r\n                    case 10:\r\n                        e_6 = _a.sent();\r\n                        serverTelemetryManager.cacheFailedRequest(e_6);\r\n                        this.browserStorage.cleanRequest();\r\n                        throw e_6;\r\n                    case 11: throw e_5;\r\n                    case 12: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Helper which acquires an authorization code silently using a hidden iframe from given url\r\n     * using the scopes requested as part of the id, and exchanges the code for a set of OAuth tokens.\r\n     * @param navigateUrl\r\n     * @param userRequestScopes\r\n     */\r\n    PublicClientApplication.prototype.silentTokenHelper = function (navigateUrl, authCodeRequest, authClient, userRequestScopes) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var silentHandler, msalFrame, hash;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        silentHandler = new SilentHandler(authClient, this.browserStorage, this.config.system.loadFrameTimeout);\r\n                        return [4 /*yield*/, silentHandler.initiateAuthRequest(navigateUrl, authCodeRequest, userRequestScopes)];\r\n                    case 1:\r\n                        msalFrame = _a.sent();\r\n                        return [4 /*yield*/, silentHandler.monitorIframeForHash(msalFrame, this.config.system.iframeHashTimeout)];\r\n                    case 2:\r\n                        hash = _a.sent();\r\n                        // Handle response from hash string.\r\n                        return [2 /*return*/, silentHandler.handleCodeResponse(hash)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // #endregion\r\n    // #region Logout\r\n    /**\r\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\r\n     * Default behaviour is to redirect the user to `window.location.href`.\r\n     * @param {@link (EndSessionRequest:type)}\r\n     */\r\n    PublicClientApplication.prototype.logout = function (logoutRequest) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var validLogoutRequest, authClient, logoutUri;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\r\n                        return [4 /*yield*/, this.createAuthCodeClient(null, validLogoutRequest && validLogoutRequest.authority)];\r\n                    case 1:\r\n                        authClient = _a.sent();\r\n                        logoutUri = authClient.getLogoutUri(validLogoutRequest);\r\n                        BrowserUtils.navigateWindow(logoutUri);\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // #endregion\r\n    // #region Account APIs\r\n    /**\r\n     * Returns all accounts that MSAL currently has data for.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no state is found\r\n     * @returns {@link AccountInfo[]} - Array of account objects in cache\r\n     */\r\n    PublicClientApplication.prototype.getAllAccounts = function () {\r\n        return this.browserStorage.getAllAccounts();\r\n    };\r\n    /**\r\n     * Returns the signed in account matching username.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no state is found\r\n     * @returns {@link AccountInfo} - the account object stored in MSAL\r\n     */\r\n    PublicClientApplication.prototype.getAccountByUsername = function (userName) {\r\n        var allAccounts = this.getAllAccounts();\r\n        return allAccounts && allAccounts.length ? allAccounts.filter(function (accountObj) { return accountObj.username.toLowerCase() === userName.toLowerCase(); })[0] : null;\r\n    };\r\n    // #endregion\r\n    // #region Helpers\r\n    /**\r\n     *\r\n     * Use to get the redirect uri configured in MSAL or null.\r\n     * @returns {string} redirect URL\r\n     *\r\n     */\r\n    PublicClientApplication.prototype.getRedirectUri = function (requestRedirectUri) {\r\n        return requestRedirectUri || this.config.auth.redirectUri || BrowserUtils.getCurrentUri();\r\n    };\r\n    /**\r\n     * Use to get the post logout redirect uri configured in MSAL or null.\r\n     *\r\n     * @returns {string} post logout redirect URL\r\n     */\r\n    PublicClientApplication.prototype.getPostLogoutRedirectUri = function (requestPostLogoutRedirectUri) {\r\n        return requestPostLogoutRedirectUri || this.config.auth.postLogoutRedirectUri || BrowserUtils.getCurrentUri();\r\n    };\r\n    /**\r\n     * Used to get a discovered version of the default authority.\r\n     */\r\n    PublicClientApplication.prototype.getDiscoveredDefaultAuthority = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (!!this.defaultAuthority) return [3 /*break*/, 2];\r\n                        _a = this;\r\n                        return [4 /*yield*/, AuthorityFactory.createDiscoveredInstance(this.config.auth.authority, this.config.system.networkClient)];\r\n                    case 1:\r\n                        _a.defaultAuthority = _b.sent();\r\n                        _b.label = 2;\r\n                    case 2: return [2 /*return*/, this.defaultAuthority];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Helper to check whether interaction is in progress.\r\n     */\r\n    PublicClientApplication.prototype.interactionInProgress = function () {\r\n        // Check whether value in cache is present and equal to expected value\r\n        return this.browserStorage.getItem(this.browserStorage.generateCacheKey(BrowserConstants.INTERACTION_STATUS_KEY), CacheSchemaType.TEMPORARY) === BrowserConstants.INTERACTION_IN_PROGRESS_VALUE;\r\n    };\r\n    /**\r\n     * Creates an Authorization Code Client with the given authority, or the default authority.\r\n     * @param authorityUrl\r\n     */\r\n    PublicClientApplication.prototype.createAuthCodeClient = function (serverTelemetryManager, authorityUrl) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var clientConfig;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getClientConfiguration(serverTelemetryManager, authorityUrl)];\r\n                    case 1:\r\n                        clientConfig = _a.sent();\r\n                        return [2 /*return*/, new AuthorizationCodeClient(clientConfig)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates an Silent Flow Client with the given authority, or the default authority.\r\n     * @param authorityUrl\r\n     */\r\n    PublicClientApplication.prototype.createSilentFlowClient = function (serverTelemetryManager, authorityUrl) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var clientConfig;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getClientConfiguration(serverTelemetryManager, authorityUrl)];\r\n                    case 1:\r\n                        clientConfig = _a.sent();\r\n                        return [2 /*return*/, new SilentFlowClient(clientConfig)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates a Client Configuration object with the given request authority, or the default authority.\r\n     * @param requestAuthority\r\n     */\r\n    PublicClientApplication.prototype.getClientConfiguration = function (serverTelemetryManager, requestAuthority) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var discoveredAuthority, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        if (!(!StringUtils.isEmpty(requestAuthority) && requestAuthority !== this.config.auth.authority)) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, AuthorityFactory.createDiscoveredInstance(requestAuthority, this.config.system.networkClient)];\r\n                    case 1:\r\n                        _a = _b.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 2: return [4 /*yield*/, this.getDiscoveredDefaultAuthority()];\r\n                    case 3:\r\n                        _a = _b.sent();\r\n                        _b.label = 4;\r\n                    case 4:\r\n                        discoveredAuthority = _a;\r\n                        return [2 /*return*/, {\r\n                                authOptions: {\r\n                                    clientId: this.config.auth.clientId,\r\n                                    authority: discoveredAuthority,\r\n                                    knownAuthorities: this.config.auth.knownAuthorities,\r\n                                    cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata\r\n                                },\r\n                                systemOptions: {\r\n                                    tokenRenewalOffsetSeconds: this.config.system.tokenRenewalOffsetSeconds\r\n                                },\r\n                                loggerOptions: {\r\n                                    loggerCallback: this.config.system.loggerOptions.loggerCallback,\r\n                                    piiLoggingEnabled: this.config.system.loggerOptions.piiLoggingEnabled\r\n                                },\r\n                                cryptoInterface: this.browserCrypto,\r\n                                networkInterface: this.networkClient,\r\n                                storageInterface: this.browserStorage,\r\n                                serverTelemetryManager: serverTelemetryManager,\r\n                                libraryInfo: {\r\n                                    sku: BrowserConstants.MSAL_SKU,\r\n                                    version: version$1,\r\n                                    cpu: \"\",\r\n                                    os: \"\"\r\n                                }\r\n                            }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Helper to validate app environment before making a request.\r\n     */\r\n    PublicClientApplication.prototype.preflightInteractiveRequest = function (request, interactionType) {\r\n        // block the reload if it occurred inside a hidden iframe\r\n        BrowserUtils.blockReloadInHiddenIframes();\r\n        // Check if interaction is in progress. Throw error if true.\r\n        if (this.interactionInProgress()) {\r\n            throw BrowserAuthError.createInteractionInProgressError();\r\n        }\r\n        return this.initializeAuthorizationRequest(request, interactionType);\r\n    };\r\n    /**\r\n     * Initializer function for all request APIs\r\n     * @param request\r\n     */\r\n    PublicClientApplication.prototype.initializeBaseRequest = function (request) {\r\n        var validatedRequest = __assign({}, request);\r\n        if (StringUtils.isEmpty(validatedRequest.authority)) {\r\n            validatedRequest.authority = this.config.auth.authority;\r\n        }\r\n        validatedRequest.correlationId = (request && request.correlationId) || this.browserCrypto.createNewGuid();\r\n        return validatedRequest;\r\n    };\r\n    PublicClientApplication.prototype.initializeServerTelemetryManager = function (apiId, correlationId, forceRefresh) {\r\n        var telemetryPayload = {\r\n            clientId: this.config.auth.clientId,\r\n            correlationId: correlationId,\r\n            apiId: apiId,\r\n            forceRefresh: forceRefresh || false\r\n        };\r\n        return new ServerTelemetryManager(telemetryPayload, this.browserStorage);\r\n    };\r\n    /**\r\n     * Generates a request that will contain the openid and profile scopes.\r\n     * @param request\r\n     */\r\n    PublicClientApplication.prototype.setDefaultScopes = function (request) {\r\n        return __assign(__assign({}, request), { scopes: __spreadArrays(((request && request.scopes) || []), DEFAULT_REQUEST.scopes) });\r\n    };\r\n    /**\r\n     * Helper to initialize required request parameters for interactive APIs and ssoSilent()\r\n     * @param request\r\n     */\r\n    PublicClientApplication.prototype.initializeAuthorizationRequest = function (request, interactionType) {\r\n        var validatedRequest = __assign({}, request);\r\n        validatedRequest.redirectUri = this.getRedirectUri(validatedRequest.redirectUri);\r\n        // Check for ADAL SSO\r\n        if (StringUtils.isEmpty(validatedRequest.loginHint)) {\r\n            // Only check for adal token if no SSO params are being used\r\n            var adalIdTokenString = this.browserStorage.getItem(PersistentCacheKeys.ADAL_ID_TOKEN, CacheSchemaType.TEMPORARY);\r\n            if (!StringUtils.isEmpty(adalIdTokenString)) {\r\n                var adalIdToken = new IdToken(adalIdTokenString, this.browserCrypto);\r\n                this.browserStorage.removeItem(PersistentCacheKeys.ADAL_ID_TOKEN);\r\n                if (adalIdToken.claims && adalIdToken.claims.upn) {\r\n                    validatedRequest.loginHint = adalIdToken.claims.upn;\r\n                }\r\n            }\r\n        }\r\n        var browserState = {\r\n            interactionType: interactionType\r\n        };\r\n        validatedRequest.state = ProtocolUtils.setRequestState(this.browserCrypto, (request && request.state) || \"\", browserState);\r\n        if (StringUtils.isEmpty(validatedRequest.nonce)) {\r\n            validatedRequest.nonce = this.browserCrypto.createNewGuid();\r\n        }\r\n        validatedRequest.responseMode = ResponseMode.FRAGMENT;\r\n        validatedRequest = __assign(__assign({}, validatedRequest), this.initializeBaseRequest(validatedRequest));\r\n        this.browserStorage.updateCacheEntries(validatedRequest.state, validatedRequest.nonce, validatedRequest.authority);\r\n        return __assign(__assign({}, validatedRequest), this.setDefaultScopes(validatedRequest));\r\n    };\r\n    /**\r\n     * Generates an auth code request tied to the url request.\r\n     * @param request\r\n     */\r\n    PublicClientApplication.prototype.initializeAuthorizationCodeRequest = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var generatedPkceParams, authCodeRequest;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.browserCrypto.generatePkceCodes()];\r\n                    case 1:\r\n                        generatedPkceParams = _a.sent();\r\n                        authCodeRequest = __assign(__assign({}, request), { redirectUri: request.redirectUri, code: \"\", codeVerifier: generatedPkceParams.verifier });\r\n                        request.codeChallenge = generatedPkceParams.challenge;\r\n                        request.codeChallengeMethod = Constants.S256_CODE_CHALLENGE_METHOD;\r\n                        return [2 /*return*/, authCodeRequest];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Initializer for the logout request.\r\n     * @param logoutRequest\r\n     */\r\n    PublicClientApplication.prototype.initializeLogoutRequest = function (logoutRequest) {\r\n        var validLogoutRequest = __assign({}, logoutRequest);\r\n        if (StringUtils.isEmpty(validLogoutRequest.authority)) {\r\n            validLogoutRequest.authority = this.config.auth.authority;\r\n        }\r\n        validLogoutRequest.correlationId = (validLogoutRequest && validLogoutRequest.correlationId) || this.browserCrypto.createNewGuid();\r\n        validLogoutRequest.postLogoutRedirectUri = this.getPostLogoutRedirectUri(logoutRequest ? logoutRequest.postLogoutRedirectUri : \"\");\r\n        return validLogoutRequest;\r\n    };\r\n    return PublicClientApplication;\r\n}());\n\nexport { AuthError, AuthErrorMessage, BrowserAuthError, BrowserAuthErrorMessage, BrowserConfigurationAuthError, BrowserConfigurationAuthErrorMessage, InteractionRequiredAuthError, LogLevel, Logger, PublicClientApplication };\n//# sourceMappingURL=index.es.js.map\n"],"sourceRoot":""}